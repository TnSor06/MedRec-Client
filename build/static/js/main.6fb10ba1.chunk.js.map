{"version":3,"sources":["graphql/queries.js","graphql/resolvers.js","graphql/mutation.js","pages/login/login.component.jsx","providers/currentUser.provider.jsx","constants.js","pages/login/login.container.jsx","pages/homepage/homepage.component.jsx","components/header/header.component.jsx","components/spinner/spinner.component.jsx","components/logout/logout.component.jsx","pages/register/register.component.jsx","components/get-country/get-country.component.jsx","components/get-country/get-country.container.jsx","components/get-region/get-region.component.jsx","components/get-region/get-region.container.jsx","pages/register/patient/register-patient.component.jsx","pages/register/patient/register-patient.container.jsx","components/get-hospital/get-hospital.component.jsx","components/get-hospital/get-hospital.container.jsx","pages/register/medical-practitioner/register-medical-practitioner.component.jsx","pages/register/medical-practitioner/register-medical-practitioner.container.jsx","pages/register/database-admin/register-database-admin.component.jsx","pages/register/database-admin/register-database-admin.container.jsx","pages/register/register.container.jsx","components/footer/footer.component.jsx","pages/update/update.component.jsx","components/change-password/change-password.component.jsx","components/change-password/change-password.container.jsx","pages/update/details/details.component.jsx","pages/update/details/details.container.jsx","pages/update/patient-health/patient-health.component.jsx","pages/update/patient-health/patient-health.container.jsx","pages/update/patient-details/patient-details.component.jsx","pages/update/patient-details/patient-details.container.jsx","pages/update/update.container.jsx","pages/search/search.component.jsx","pages/search/search.container.jsx","components/user-card/user-card.component.jsx","components/approve/approve.component.jsx","components/approve/approve.container.jsx","components/insurance-card/insurance-card.component.jsx","components/care-provider-card/care-provider-card.component.jsx","pages/views/patient/patient.component.jsx","pages/views/patient/mePatient.container.jsx","pages/views/patient/viewPatient.container.jsx","pages/patient-case/search-case/search-case.component.jsx","pages/patient-case/search-case/search-case.container.jsx","components/get-icd-code/get-icd-code.component.jsx","components/get-icd-code/get-icd-sub-code.component.jsx","components/get-icd-code/get-icd-code.container.jsx","pages/patient-case/create-case/create-case.component.jsx","pages/patient-case/create-case/create-case.container.jsx","components/hospital-card/hospital-card.component.jsx","pages/patient-case/view-case/view-case.component.jsx","pages/patient-case/view-case/view-case.container.jsx","pages/patient-record/search-record/search-record.component.jsx","pages/patient-record/search-record/search-record.container.jsx","pages/patient-record/create-record/create-record.component.jsx","pages/patient-record/create-record/create-record.container.jsx","pages/patient-record/view-record/view-record.component.jsx","pages/patient-record/view-record/view-record.container.jsx","pages/patient-record/patient-record.container.jsx","components/hl7/hl7.component.jsx","pages/shared-record/create-shared-record/create-shared-record.component.jsx","pages/shared-record/create-shared-record/create-shared-record.container.jsx","pages/shared-record/search-shared-record/search-shared-record.component.jsx","pages/shared-record/search-shared-record/search-shared-record.container.jsx","pages/shared-record/shared-record.container.jsx","pages/patient-case/patient-case.container.jsx","pages/shared-case/create-shared-case/create-shared-case.component.jsx","pages/shared-case/create-shared-case/create-shared-case.container.jsx","pages/shared-case/search-shared-case/search-shared-case.component.jsx","pages/shared-case/search-shared-case/search-shared-case.container.jsx","pages/shared-case/shared-case.container.jsx","pages/views/patient/patient.container.jsx","pages/views/medicalpractitioner/medicalpractitioner.component.jsx","pages/views/medicalpractitioner/memedicalpractitioner.container.jsx","pages/views/medicalpractitioner/viewmedicalpractitioner.container.jsx","pages/views/medicalpractitioner/medicalpractitioner.container.jsx","pages/views/databaseadmin/databaseadmin.component.jsx","pages/views/databaseadmin/databaseadmin.container.jsx","components/error-boundary/error-boundary.component.jsx","pages/views/insurance/insurance.container.jsx","pages/views/insurance/insurance-modify.component.jsx","pages/views/insurance/insurance-modify.container.jsx","pages/views/care-provider/care-provider.container.jsx","pages/views/care-provider/care-provider-modify.component.jsx","pages/views/care-provider/care-provider-modify.container.jsx","App.js","serviceWorker.js","index.js"],"names":["GET_CURRENT_USER","gql","ME","GET_REGION","GET_COUNTRY","GET_HOSPITAL","GET_ICD_CODE","GET_ICD_SUB_CODE","typeDefs","resolvers","Mutation","addCurrentUser","_parent","_args","_ctx","_info","user","currentUser","cache","readQuery","query","variables","writeQuery","data","REGISTER_PATIENT","REGISTER_MEDICAL_PRACTITIONER","REGISTER_DATABASE_ADMIN","LOGIN","ADD_CURRENT_USER","Login","props","useState","email","setEmail","isValidEmail","setValidEmail","password","setPassword","isValidPassword","setValidPassword","className","type","placeholder","value","onChange","event","target","emailValid","match","passwordValid","isLoading","disabled","onClick","preventDefault","login","error","CurrentUserContext","createContext","setCurrentUser","CurrentUserProvider","children","localStorage","getItem","JSON","parse","Provider","graphql","name","err","setErr","useContext","to","mutation","onCompleted","token","setItem","history","push","onError","graphQLErrors","map","message","networkError","loading","Homepage","headerLinks","DatabaseAdmin","link","MedicalPractitioner","Patient","Header","role","aria-label","aria-expanded","data-target","href","aria-hidden","id","key","style","margin","firstName","lastName","verified","toLowerCase","Spinner","removeItem","__typename","isAdmin","Register","GetCountry","country","setCountry","countries","countryCode","setCountryCode","selectedOptions","innerText","eachCountry","countryName","GetCountryContainer","setCountries","errors","getCountry","GetRegion","region","setRegion","regions","pincode","setPincode","eachRegion","GetRegionContainer","setRegions","getRegion","RegisterPatient","setFirstName","middleName","setMiddleName","setLastName","confirmPassword","setConfirmPassword","isValidConfirmPassword","setValidConfirmPassword","dob","setDOB","sex","setSex","principleLanguage","setPrincipleLanguage","motherName","setMotherName","aadharNo","setAadharNo","bloodGroup","setBloodGroup","religion","setReligion","maritalStatus","setMaritalStatus","primaryLanguage","setPrimaryLanguage","birthPlace","setBirthPlace","address","setAddress","occupation","setOccupation","contact1","setContact1","isValidContact1","setValidContact1","contact2","setContact2","isValidContact2","setValidContact2","socioEcoStatus","setSocioEcoStatus","immunizationHistory","setImmunizationHistory","registerPatient","contactValid","RegisterPatientContainer","args","Gethospital","hospitalSelected","setHospitalSelected","hospitals","hospital","setHospital","eachHospital","hospitalId","GetHospitalContainer","setHospitals","getHospital","RegisterMedicalPractitioner","clinicAddress","setClinicAddress","degree","setDegree","field","setField","registerMedicalPractitioner","RegisterMedicalPractitionerContainer","RegisterDatabaseAdmin","contact","setContact","isValidContact","setValidContact","registerDatabaseAdmin","RegisterDatabaseAdminContainer","RegisterContainer","exact","path","component","Footer","window","location","reload","Update","ChangePassword","passwordTouch","setPasswordTouch","update","width","ChangePasswordContainer","UPDATE_PASSWORD","updateFn","Details","dataFromQuery","labels","value1","setValue1","value2","setValue2","DetailsContainer","PatientHealth","allergyStatus","setAllergyStatus","organDonorStatus","setOrganDonorStatus","PMH","setPMH","DHx","setDHx","Ca","setCa","IDDM","setIDDM","NIDDM","setNIDDM","COPD","setCOPD","MI","setMI","AF","setAF","updatePatient","PatientHealthContainer","each","PatientDetails","toString","PatientDetailsContainer","UpdateContainer","Search","setName","setType","users","backgroundColor","border","padding","borderRadius","SearchContainer","setUsers","SEARCH_USER","searchUser","UserCard","moment","position","format","Approve","approve","display","flexDirection","justifyContent","alignItems","ApproveContainer","approveFn","InsuranceCard","modifiable","insuranceId","insuranceStatus","insuranceCompany1","insuranceCompany2","sponsorerDetails","pathname","state","CareProviderCard","cpPatientId","patientId","cpPatientRelation","registeredAt","cpId","insurance","MePatientContainer","mePatient","ViewPatientContainer","params","viewPatient","SearchCase","caseId","setCaseId","ToDate","setToDate","FromDate","setFromDate","cases","eachCase","noOfVisits","icdCode","commonName","icdSubCode","scientificName","createdAt","updatedAt","url","SearchCaseContainer","setCases","viewPatientCase","GetIcdCode","setCommonName","icdCodes","setIcdCode","eachICD","GetIcdSubCode","setScientificName","icdSubCodes","setIcdSubCode","eachICDSub","GetIcdCodeContainer","setIcdCodes","setIcdSubCodes","icdcodes","icdsubcodes","CreateCase","create","HPC","setHPC","MoI","setMoI","DandV","setDandV","clinicalNote","setClinicalNote","diagnosisType","setDiagnosisType","currentClinicalStatus","setCurrentClinicalStatus","createPatientCase","replace","CreateCaseContainer","createFn","HospitalCard","district","ViewCase","medicalPractitioner","case","mpId","ViewCaseContainer","SearchRecord","recordId","setRecordId","records","eachRecord","visitNo","SearchRecordContainer","setRecords","viewPatientRecord","CreateRecord","onArrival","setOnArrival","diagnosis","setDiagnosis","Tx","setTx","reportSuggestions","setReportSuggestions","cevsSp","setCevsSp","cevsDp","setCevsDp","cePr","setCePr","ceRr","setCeRr","ceHeight","setCeHeight","ceWeight","setCeWeight","diagnosisAfterReport","setDiagnosisAfterReport","medication","setMedication","advice","setAdvice","setQuery","followUpObservations","setFollowUpObservations","min","parseInt","createPatientRecord","CreateRecordContainer","ViewRecord","record","ViewRecordContainer","PatientRecordContainer","HL7","msg","setMsg","textAreaRef","useRef","cursor","navigator","clipboard","writeText","setTimeout","element","document","createElement","file","Blob","URL","createObjectURL","download","body","appendChild","click","resize","rows","cols","ref","defaultValue","bottom","right","zIndex","CreateSharedRecord","receiver","setReceiver","createSharedRecord","sender","sharedAt","CreateSharedRecordContainer","networkEdatarror","SearchSharedRecord","SearchSharedRecordContainer","viewSharedRecord","SharedRecordContainer","PatientCaseContainer","CreateSharedCase","createSharedCase","CreateSharedCaseContainer","SearchSharedCase","SearchSharedCaseContainer","viewSharedCase","SharedCaseContainer","PatientContainer","MeMedicalPractitionerContainer","meMedicalPractitioner","ViewMedicalPractitionerContainer","viewMedicalPractitioner","MedicalPractitionerContainer","DatabaseAdminContainer","meDatabaseAdmin","ErrorBoundary","hasError","info","this","setState","console","log","e","Component","InsuranceContainer","InsuranceModify","editData","modify","status","setStatus","company1","setCompany1","company2","setCompany2","details","setDetails","InsuranceModifyContainer","eachErr","modifyFn","CareProviderContainer","CareProviderModify","setPatientId","length","patientIdValid","setPatientIdValid","relation","setRelation","CareProviderModifyContainer","compose","me","useEffect","stringify","LoginContainer","Logout","render","Boolean","hostname","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","InMemoryCache","client","ApolloClient","concat","writeData","ReactDOM","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"8yDAGO,IAAMA,EAAmBC,YAAH,KAchBC,EAAKD,YAAH,KAaFE,EAAaF,YAAH,KAUVG,EAAcH,YAAH,KAUXI,EAAeJ,YAAH,KASZK,EAAeL,YAAH,KAUZM,EAAmBN,YAAH,K,qHC/DtB,IAAMO,EAAWP,YAAH,KASRQ,EAAY,CACvBC,SAAU,CACRC,eAAgB,SAACC,EAASC,EAAOC,EAAMC,GAAW,IACxCC,EAASH,EAATG,KACAC,EAAgBH,EAAKI,MAAMC,UAAU,CAC3CC,MAAOpB,EACPqB,UAAW,KAFLJ,YAWR,OANAH,EAAKI,MAAMI,WAAW,CACpBF,MAAOpB,EACPuB,KAAM,CACJN,YAAaD,KAGVC,K,2gHC5BN,IAAMO,EAAmBvB,YAAH,KA0DhBwB,EAAgCxB,YAAH,KAkC7ByB,EAA0BzB,YAAH,KAgCvB0B,EAAQ1B,YAAH,KAgBL2B,EAAmB3B,YAAH,KC1Cd4B,EAlGD,SAACC,GAAW,IAAD,EACGC,mBAAS,IADZ,mBAChBC,EADgB,KACTC,EADS,OAEeF,oBAAS,GAFxB,mBAEhBG,EAFgB,KAEFC,EAFE,OAGSJ,mBAAS,IAHlB,mBAGhBK,EAHgB,KAGNC,EAHM,OAIqBN,oBAAS,GAJ9B,mBAIhBO,EAJgB,KAICC,EAJD,KAQvB,OACE,6BAASC,UAAU,mCACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,+BACb,wBAAIA,UAAU,SAAd,UAEF,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,SACA,yBAAKA,UAAU,0CACb,2BACEA,UAAU,QACVC,KAAK,QACLC,YAAY,cACZC,MAAOX,EACPY,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MACrBI,EAAaJ,EAAMK,MACvB,wCAEFb,EAAcY,GACdd,EAASU,MAGb,0BAAMH,UAAU,yBACd,uBAAGA,UAAU,qBAGjB,uBAAGA,UAAU,kBACTN,EAAyC,GAA1B,4BAKzB,yBAAKM,UAAU,uBACb,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,YACA,yBAAKA,UAAU,0CACb,2BACEA,UAAU,QACVC,KAAK,WACLC,YAAY,iBACZC,MAAOP,EACPQ,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MACrBM,EAAgBN,EAAMK,MAC1B,oEAEFT,EAAiBU,GACjBZ,EAAYM,MAGhB,0BAAMH,UAAU,yBACd,uBAAGA,UAAU,mBAGjB,uBAAGA,UAAU,kBACTF,EAA+C,GAA7B,+BAK5B,yBAAKE,UAAU,uBACb,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,WACb,4BACEA,UAAS,4BACPV,EAAMoB,UAAY,aAAe,IAEnCC,UAAWjB,IAAiBI,EAC5Bc,QAAS,SAACP,GACRA,EAAMQ,iBA3EpBvB,EAAMwB,MAAMtB,EAAOI,KAqET,UAaF,uBAAGI,UAAU,4BACVV,EAAMyB,MAAQzB,EAAMyB,MAAQ,SCxF9BC,EAAqBC,wBAAc,CAC9CxC,YAAa,KACbyC,eAAgB,eAuBHC,EAnBa,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACN7B,mBACpC8B,aAAaC,QCVQ,aDWjBC,KAAKC,MAAMH,aAAaC,QCXP,cDYjB,MAJsC,mBACrC7C,EADqC,KACxByC,EADwB,KAO5C,OACE,kBAACF,EAAmBS,SAApB,CACEtB,MAAO,CACL1B,cACAyC,mBAGDE,IEyCQM,cAAQtC,EAAkB,CAAEuC,KAAM,kBAAlCD,EAvDQ,SAACpC,GAAW,IAAD,EACVC,mBAAS,IADC,mBACzBqC,EADyB,KACpBC,EADoB,OAEQC,qBAAWd,GAA3CvC,EAFwB,EAExBA,YAAayC,EAFW,EAEXA,eACrB,OAAIzC,EACK,kBAAC,IAAD,CAAUsD,GAAG,MAGpB,kBAAC,IAAD,CACEC,SAAU7C,EACV8C,YAAa,SAAClD,GAAU,IAAD,EACGA,EAAK+B,MAArBoB,EADa,EACbA,MAAO1D,EADM,EACNA,KACf6C,aAAac,QDpBK,aCoBeD,GACjC5C,EAAM8C,QAAQC,KAAK,KACnB/C,EAAMnB,eAAe,CACnBU,UAAW,CACTL,UAGJ0C,EAAe1C,IAEjB8D,QAAS,SAACV,GACJA,EAAIW,eACNV,EACED,EAAIW,cAAcC,KAAI,SAACzB,GACrB,OAAOA,EAAM0B,YAIfb,EAAIc,cACNb,EAAOD,EAAIc,aAAaD,YAI3B,SAAC3B,EAAD,GAAyB,IAAf6B,EAAc,EAAdA,QAIT,OAHIA,GACFd,EAAO,IAGP,kBAAC,EAAD,iBACMvC,EADN,CAEEb,YAAaA,EACbqC,MAAO,SAACtB,EAAOI,GACbkB,EAAM,CACJjC,UAAW,CAAEW,QAAOI,eAGxBmB,MAAOa,EACPlB,UAAWiC,WCxCRC,G,MAdE,SAACtD,GAChB,OACE,yBAAKU,UAAU,oBACb,6BAASA,UAAU,kCACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,+BACb,wBAAIA,UAAU,SAAd,2BCJN6C,EAAc,CAClBC,cAAe,CAAC,CAAEnB,KAAM,cAAeoB,KAAM,YAC7CC,oBAAqB,CAAC,CAAErB,KAAM,cAAeoB,KAAM,YACnDE,QAAS,CACP,CAAEtB,KAAM,YAAaoB,KAAM,cAC3B,CAAEpB,KAAM,gBAAiBoB,KAAM,oBA4HpBG,GAxHA,SAAC5D,GACd,IAAMyB,EAAQzB,EAAMyB,MAAQzB,EAAMyB,MAAQ,KACpC2B,EAAe3B,GACjBA,EAAM2B,aACJ3B,EAAM2B,aAER,KACIjE,EAAgBqD,qBAAWd,GAA3BvC,YACR,OACE,yBACEuB,UAAU,iBACVmD,KAAK,aACLC,aAAW,mBAEX,yBAAKpD,UAAU,gBACb,kBAAC,IAAD,CAAMA,UAAU,cAAc+B,GAAG,KAAjC,UAGA,uBACEoB,KAAK,SACLnD,UAAU,uBACVoD,aAAW,OACXC,gBAAc,QACdC,cAAY,qBACZC,KAAK,MAEL,0BAAMC,cAAY,SAClB,0BAAMA,cAAY,SAClB,0BAAMA,cAAY,WAItB,yBAAKC,GAAG,qBAAqBzD,UAAU,eACpCvB,EACC,yBAAKuB,UAAU,gBACZ6C,EAAYpE,EAAY0E,MAAMX,KAAI,SAACO,EAAMW,GACxC,OACE,kBAAC,IAAD,CAAM1D,UAAU,cAAc0D,IAAK,CAACA,GAAM3B,GAAIgB,EAAKA,MAChDA,EAAKpB,UAMd,yBAAK3B,UAAU,gBACb,kBAAC,IAAD,CAAMA,UAAU,cAAc+B,GAAG,UAAjC,SAIA,yBAAK/B,UAAU,yCACb,kBAAC,IAAD,CAAM+B,GAAG,YAAY/B,UAAU,eAA/B,YAIA,yBAAKA,UAAU,mBACb,kBAAC,IAAD,CAAM+B,GAAG,oBAAoB/B,UAAU,eAAvC,WAGA,kBAAC,IAAD,CACE+B,GAAG,iCACH/B,UAAU,eAFZ,wBAMA,kBAAC,IAAD,CAAM+B,GAAG,2BAA2B/B,UAAU,eAA9C,qBAOR,yBAAKA,UAAU,cACZ0C,EACC,yBACE1C,UAAU,qCACV2D,MAAO,CAAEC,OAAQ,WAFnB,wCAME,KACHnF,EACC,yBAAKuB,UAAU,yCACb,uBAAGA,UAAU,eAAb,UACUvB,EAAYoF,UADtB,IACkCpF,EAAYqF,UAG9C,yBAAK9D,UAAU,mBACb,uBAAGA,UAAU,eACVvB,EAAYsF,SACX,uBAAG/D,UAAU,qBAAqBwD,cAAY,SAC5C,KAHN,OAKG/E,EAAY0E,MAEf,kBAAC,IAAD,CACEpB,GAAE,WAAMtD,EAAY0E,KAAKa,eACzBhE,UAAU,eAFZ,cAMA,wBAAIA,UAAU,mBACd,kBAAC,IAAD,CAAM+B,GAAE,UAAa/B,UAAU,eAA/B,kBAGA,kBAAC,IAAD,CAAM+B,GAAE,mBAAsB/B,UAAU,eAAxC,mBAGA,wBAAIA,UAAU,mBACd,kBAAC,IAAD,CAAM+B,GAAG,UAAU/B,UAAU,eAA7B,YAKF,SC3HDiE,I,MAAU,WACrB,OACE,yBAAKjE,UAAU,mBACb,yBAAKA,UAAU,yBCyBN0B,eAAQtC,EAAkB,CAAEuC,KAAM,kBAAlCD,EAxBA,SAACpC,GAAW,IAAD,EACgBwC,qBAAWd,GAA3CvC,EADgB,EAChBA,YAAayC,EADG,EACHA,eAiBrB,OAhBAG,aAAa6C,WLTW,cKUxB7C,aAAa6C,WLTU,aKUvBhD,EAAe,MACf5B,EAAMnB,eAAe,CACnBU,UAAW,CACTL,KAAM,CACJ2F,WAAY,GACZV,GAAI,GACJI,UAAW,GACXC,SAAU,GACVX,KAAM,GACNiB,QAAS,GACTL,SAAU,OAIXtF,EAGE,+CAFE,kBAAC,IAAD,CAAUsD,GAAG,SCHTsC,GArBE,SAAC/E,GAChB,OACE,yBAAKU,UAAU,oBACb,6BAASA,UAAU,kCACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,+BACb,wBAAIA,UAAU,SAAd,YACA,kBAAC,IAAD,CAAM+B,GAAG,qBAAT,uBACA,kBAAC,IAAD,CAAMA,GAAG,kCAAT,oCAGA,kBAAC,IAAD,CAAMA,GAAG,4BAAT,mCCwCGuC,GAnDI,SAAChF,GAAW,IAE3BiF,EAOEjF,EAPFiF,QACAC,EAMElF,EANFkF,WACAC,EAKEnF,EALFmF,UACAC,EAIEpF,EAJFoF,YACAC,EAGErF,EAHFqF,eACAhC,EAEErD,EAFFqD,QACA5B,EACEzB,EADFyB,MAEF,OACE,yBAAKf,UAAU,SACb,2BAAOA,UAAU,SAAjB,WACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,UACZC,MAAOoE,EACPnE,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BqE,EAAWrE,OAIjB,yBAAKH,UAAS,iBAAY2C,EAAU,aAAe,KACjD,4BACExC,MAAOuE,EACPtE,SAAU,SAACC,GAAW,IAAD,EACgBA,EAAMC,OAAjCH,EADW,EACXA,MAAOyE,EADI,EACJA,gBACfD,EAAexE,GACfqE,EAAWI,EAAgB,GAAGC,aAGhC,4BAAQ1E,MAAM,GAAGQ,UAAQ,GAAzB,eAGC8D,EAAUjC,KAAI,SAACsC,EAAapB,GAC3B,OACE,4BAAQA,IAAKA,EAAKvD,MAAO2E,EAAYJ,aAClCI,EAAYC,kBAMvB,uBAAG/E,UAAU,kBAAkBe,GAAgB,MCNtCiE,GArCa,SAAC1F,GAAW,IAAD,EACHC,mBAAS,IADN,mBAC9BkF,EAD8B,KACnBQ,EADmB,KAE7BP,EAAgCpF,EAAhCoF,YAAaC,EAAmBrF,EAAnBqF,eAFgB,EAGPpF,mBAASD,EAAMiF,QAAUjF,EAAMiF,QAAU,IAHlC,mBAG9BA,EAH8B,KAGrBC,EAHqB,KAIrC,OACE,kBAAC,IAAD,CACE5F,MAAOhB,EACPiB,UAAW,CACT8C,KAAM4C,GAAoB,OAG3B,YAAgC,IAA7B5B,EAA4B,EAA5BA,QAASuC,EAAmB,EAAnBA,OAAQnG,EAAW,EAAXA,KAInB,OAHK4D,GAAYuC,GACfD,EAAalG,EAAKoG,YAGlB,kBAAC,GAAD,CACEZ,QAASA,EACTC,WAAYA,EACZC,UAAWA,EACX9B,QAASA,EACT5B,MACEmE,EACIA,EAAO3C,cAAcC,KAAI,SAACzB,GACxB,OAAOA,EAAM0B,WAEf,KAENiC,YAAaA,EACbC,eAAgBA,QCmBbS,GAnDG,SAAC9F,GAAW,IAE1B+F,EAOE/F,EAPF+F,OACAC,EAMEhG,EANFgG,UACAC,EAKEjG,EALFiG,QACAC,EAIElG,EAJFkG,QACAC,EAGEnG,EAHFmG,WACA9C,EAEErD,EAFFqD,QACA5B,EACEzB,EADFyB,MAEF,OACE,yBAAKf,UAAU,SACb,2BAAOA,UAAU,SAAjB,UACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,SACZC,MAAOkF,EACPjF,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BmF,EAAUnF,OAIhB,yBAAKH,UAAS,iBAAY2C,EAAU,aAAe,KACjD,4BACExC,MAAOqF,EACPpF,SAAU,SAACC,GAAW,IAAD,EACgBA,EAAMC,OAAjCH,EADW,EACXA,MAAOyE,EADI,EACJA,gBACfa,EAAWtF,GACXmF,EAAUV,EAAgB,GAAGC,aAG/B,4BAAQ1E,MAAM,GAAGQ,UAAQ,GAAzB,eAGC4E,EAAQ/C,KAAI,SAACkD,EAAYhC,GACxB,OACE,4BAAQA,IAAKA,EAAKvD,MAAOuF,EAAWF,SACjCE,EAAWL,aAMtB,uBAAGrF,UAAU,kBAAkBe,GAAgB,MCNtC4E,GArCY,SAACrG,GAAW,IAAD,EACNC,mBAAS,IADH,mBAC7BgG,EAD6B,KACpBK,EADoB,KAE5BJ,EAAwBlG,EAAxBkG,QAASC,EAAenG,EAAfmG,WAFmB,EAGRlG,mBAASD,EAAM+F,OAAS/F,EAAM+F,OAAS,IAH/B,mBAG7BA,EAH6B,KAGrBC,EAHqB,KAIpC,OACE,kBAAC,IAAD,CACE1G,MAAOjB,EACPkB,UAAW,CACT8C,KAAM0D,GAAkB,OAGzB,YAAgC,IAA7B1C,EAA4B,EAA5BA,QAASuC,EAAmB,EAAnBA,OAAQnG,EAAW,EAAXA,KAInB,OAHK4D,GAAYuC,GACfU,EAAW7G,EAAK8G,WAGhB,kBAAC,GAAD,CACER,OAAQA,EACRC,UAAWA,EACXC,QAASA,EACT5C,QAASA,EACT5B,MACEmE,EACIA,EAAO3C,cAAcC,KAAI,SAACzB,GACxB,OAAOA,EAAM0B,WAEf,KAEN+C,QAASA,EACTC,WAAYA,QC0gBTK,GAxiBS,SAACxG,GAAW,IAAD,EACCC,mBAAS,IADV,mBAC1BsE,EAD0B,KACfkC,EADe,OAEGxG,mBAAS,IAFZ,mBAE1ByG,EAF0B,KAEdC,EAFc,OAGD1G,mBAAS,IAHR,mBAG1BuE,EAH0B,KAGhBoC,EAHgB,OAIP3G,mBAAS,IAJF,mBAI1BC,EAJ0B,KAInBC,EAJmB,OAKKF,oBAAS,GALd,mBAK1BG,EAL0B,KAKZC,EALY,OAMDJ,mBAAS,IANR,mBAM1BK,EAN0B,KAMhBC,EANgB,OAOWN,oBAAS,GAPpB,mBAO1BO,EAP0B,KAOTC,EAPS,OAQaR,mBAAS,IARtB,mBAQ1B4G,EAR0B,KAQTC,EARS,OASyB7G,oBAAS,GATlC,mBAS1B8G,EAT0B,KASFC,EATE,OAUX/G,mBAAS,IAVE,mBAU1BgH,EAV0B,KAUrBC,EAVqB,OAWXjH,mBAAS,QAXE,mBAW1BkH,EAX0B,KAWrBC,EAXqB,OAYiBnH,mBAAS,IAZ1B,mBAY1BoH,EAZ0B,KAYPC,EAZO,OAaGrH,mBAAS,IAbZ,mBAa1BsH,GAb0B,KAadC,GAbc,QAcDvH,mBAAS,IAdR,qBAc1BwH,GAd0B,MAchBC,GAdgB,SAeGzH,mBAAS,IAfZ,qBAe1B0H,GAf0B,MAedC,GAfc,SAgBD3H,mBAAS,IAhBR,qBAgB1B4H,GAhB0B,MAgBhBC,GAhBgB,SAiBS7H,mBAAS,UAjBlB,qBAiB1B8H,GAjB0B,MAiBXC,GAjBW,SAkBa/H,mBAAS,IAlBtB,qBAkB1BgI,GAlB0B,MAkBTC,GAlBS,SAmBGjI,mBAAS,IAnBZ,qBAmB1BkI,GAnB0B,MAmBdC,GAnBc,SAoBHnI,mBAAS,IApBN,qBAoB1BoI,GApB0B,MAoBjBC,GApBiB,SAqBHrI,mBAAS,IArBN,qBAqB1BiG,GArB0B,MAqBjBC,GArBiB,SAsBKlG,mBAAS,IAtBd,qBAsB1BmF,GAtB0B,MAsBbC,GAtBa,SAuBGpF,mBAAS,IAvBZ,qBAuB1BsI,GAvB0B,MAuBdC,GAvBc,SAwBDvI,mBAAS,IAxBR,qBAwB1BwI,GAxB0B,MAwBhBC,GAxBgB,SAyBWzI,oBAAS,GAzBpB,qBAyB1B0I,GAzB0B,MAyBTC,GAzBS,SA0BD3I,mBAAS,IA1BR,qBA0B1B4I,GA1B0B,MA0BhBC,GA1BgB,SA2BW7I,oBAAS,GA3BpB,qBA2B1B8I,GA3B0B,MA2BTC,GA3BS,SA4BW/I,mBAAS,IA5BpB,qBA4B1BgJ,GA5B0B,MA4BVC,GA5BU,SA6BqBjJ,mBAAS,IA7B9B,qBA6B1BkJ,GA7B0B,MA6BLC,GA7BK,MA8BzBC,GAA0CrJ,EAA1CqJ,gBAAiBhG,GAAyBrD,EAAzBqD,QAAS5B,GAAgBzB,EAAhByB,MAAOhC,GAASO,EAATP,KA4BzC,OACE,6BAASiB,UAAU,kCACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,+BACb,wBAAIA,UAAU,SAAd,uBACA,8BAEF,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,cACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,aACZC,MAAO0D,EACPzD,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3B4F,EAAa5F,SAMvB,yBAAKH,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,eACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,cACZC,MAAO6F,EACP5F,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3B8F,EAAc9F,SAMxB,yBAAKH,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,aACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,YACZC,MAAO2D,EACP1D,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3B+F,EAAY/F,UAOxB,yBAAKH,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,iBACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,MACZC,MAAOoG,EACPnG,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BqG,EAAOrG,SAMjB,yBAAKH,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,SACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,QACLC,YAAY,QACZC,MAAOX,EACPY,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MACrBI,EAAaJ,EAAMK,MACvB,wCAEFb,EAAcY,GACdd,EAASU,OAIf,uBAAGH,UAAU,kBACTN,EAAyC,GAA1B,2BAIvB,yBAAKM,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,UACA,yBAAKA,UAAU,UACb,4BACEG,MAAOsG,EACPrG,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BuG,EAAOvG,KAGT,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,eAAd,oBAMV,yBAAKH,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,YACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,WACLC,YAAY,WACZC,MAAOP,EACPQ,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MACrBM,EAAgBN,EAAMK,MAC1B,oEAEFT,EAAiBU,GACjBZ,EAAYM,OAIlB,uBAAGH,UAAU,kBACTF,EAEE,GADA,kFAKV,yBAAKE,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,oBACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,WACLC,YAAY,mBACZC,MAAOgG,EACP/F,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MACrBM,EAAgBN,EAAMK,MAC1B,oEAEF8F,EAAwB7F,GACxB2F,EAAmBjG,OAIzB,uBAAGH,UAAU,kBACTqG,EAEEzG,IAAauG,EACb,yBACA,GAHA,+BAQZ,yBAAKnG,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,sBACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,qBACZC,MAAOwG,EACPvG,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3ByG,EAAqBzG,SAM/B,yBAAKH,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,eACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,cACZC,MAAO0G,GACPzG,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3B2G,GAAc3G,SAMxB,yBAAKH,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,aACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,YACZC,MAAO4G,GACP3G,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3B6G,GAAY7G,UAOxB,yBAAKH,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,eACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,cACZC,MAAO8G,GACP7G,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3B+G,GAAc/G,SAMxB,yBAAKH,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,YACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,WACZC,MAAOgH,GACP/G,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BiH,GAAYjH,SAMtB,yBAAKH,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,kBACA,yBAAKA,UAAU,UACb,4BACEG,MAAOkH,GACPjH,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BmH,GAAiBnH,KAGnB,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,WAAd,gBAMV,yBAAKH,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,oBACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,mBACZC,MAAOoH,GACPnH,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BqH,GAAmBrH,SAM7B,yBAAKH,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,eACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,cACZC,MAAOsH,GACPrH,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BuH,GAAcvH,SAMxB,yBAAKH,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,WACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,UACZC,MAAOwH,GACPvH,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3ByH,GAAWzH,UAOvB,yBAAKH,UAAU,uBACb,yBAAKA,UAAU,+BACb,kBAAC,GAAD,CACEwF,QAASA,GACTC,WAAYA,MAGhB,yBAAKzF,UAAU,+BACb,kBAAC,GAAD,CACE0E,YAAaA,GACbC,eAAgBA,OAItB,yBAAK3E,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,cACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,aACZC,MAAO0H,GACPzH,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3B2H,GAAc3H,SAMxB,yBAAKH,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,aACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,YACZC,MAAO4H,GACP3H,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MACrByI,EAAezI,EAAMK,MACzB,gCAEF0H,GAAiBU,GACjBZ,GAAY7H,OAIlB,uBAAGH,UAAU,kBACTiI,GAEE,GADA,uDAKV,yBAAKjI,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,aACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,YACZC,MAAOgI,GACP/H,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MACrByI,EAAezI,EAAMK,MACzB,gCAEF8H,GAAiBM,GACjBR,GAAYjI,OAIlB,uBAAGH,UAAU,kBACTqI,GAEE,GADA,wDAMZ,yBAAKrI,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,oBACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,mBACZC,MAAOoI,GACPnI,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BqI,GAAkBrI,SAM5B,yBAAKH,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,wBACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,uBACZC,MAAOsI,GACPrI,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BuI,GAAuBvI,UAOnC,yBAAKH,UAAU,uBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,WACb,4BACEA,UAAS,4BAAuB2C,GAAU,aAAe,IACzD/B,QAAS,SAACP,GACRA,EAAMQ,iBA3epB8H,GAAgB,CACd9E,YACAmC,aACAlC,WACAyC,MACAE,MACAjH,QACAmH,oBACAI,YACAF,cACAjH,WACA+H,WACAV,cACAE,YACAE,iBACAE,mBACAE,cACAjC,WACAjB,QAASG,GACTmD,cACAE,YACAI,YACAI,kBACAE,0BAudU9H,UACGjB,IACAI,IACAmI,KACA5B,IACAgC,IACDzI,IAAauG,EAEfxC,MAAO,CAAEC,OAAQ,WAdnB,WAmBF,wBAAI5D,UAAU,+CACXjB,GAAOA,GAAK4J,gBAAkB,IAEjC,uBAAG3I,UAAU,8CACVe,IAAgB,S,6jBC9hB/B,IAwCe8H,GAxCkB,SAACvJ,GAAW,IAAD,EACpBC,mBAAS,IADW,mBACnCqC,EADmC,KAC9BC,EAD8B,KAE1C,OACE,kBAAC,IAAD,CACEG,SAAUhD,EACVsD,QAAS,SAACV,GACJA,EAAIW,eACNV,EACED,EAAIW,cAAcC,KAAI,SAACzB,GACrB,OAAOA,EAAM0B,YAIfb,EAAIc,cACNb,EAAOD,EAAIc,aAAaD,YAI3B,SAACkG,EAAD,GAAgD,IAA5BhG,EAA2B,EAA3BA,QAAgB5D,GAAW,EAAlBgC,MAAkB,EAAXhC,MAInC,OAHI4D,GACFd,EAAO,IAGP,kBAAC,GAAD,iBACMvC,EADN,CAEEqJ,gBAAiB,SAACG,GAChBH,EAAgB,CACd9J,UAAU,GAAD,GAAOiK,MAGpBnG,QAASA,EACT5B,MAAOa,EACP7C,KAAMA,SCgBHgK,GAnDK,SAACzJ,GAAW,IAE5B0J,EAOE1J,EAPF0J,iBACAC,EAME3J,EANF2J,oBACAC,EAKE5J,EALF4J,UACAC,EAIE7J,EAJF6J,SACAC,EAGE9J,EAHF8J,YACAzG,EAEErD,EAFFqD,QACA5B,EACEzB,EADFyB,MAEF,OACE,yBAAKf,UAAU,SACb,2BAAOA,UAAU,SAAjB,YACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,WACZC,MAAO6I,EACP5I,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3B8I,EAAoB9I,OAI1B,yBAAKH,UAAS,iBAAY2C,EAAU,aAAe,KACjD,4BACExC,MAAOgJ,EACP/I,SAAU,SAACC,GAAW,IAAD,EACgBA,EAAMC,OAAjCH,EADW,EACXA,MAAOyE,EADI,EACJA,gBACfwE,EAAYjJ,GACZ8I,EAAoBrE,EAAgB,GAAGC,aAGzC,4BAAQ1E,MAAM,GAAGQ,UAAQ,GAAzB,eAGCuI,EAAU1G,KAAI,SAAC6G,EAAc3F,GAC5B,OACE,4BAAQA,IAAKA,EAAKvD,MAAOkJ,EAAaC,YACnCD,EAAa1H,WAMxB,uBAAG3B,UAAU,kBAAkBe,GAAgB,MCNtCwI,GArCc,SAACjK,GAAW,IAAD,EACUC,mBAAS,IADnB,mBAC/ByJ,EAD+B,KACbC,EADa,OAEJ1J,mBAAS,IAFL,mBAE/B2J,EAF+B,KAEpBM,EAFoB,KAG9BL,EAA0B7J,EAA1B6J,SAAUC,EAAgB9J,EAAhB8J,YAClB,OACE,kBAAC,IAAD,CACExK,MAAOf,EACPgB,UAAW,CACT8C,KAAMqH,GAAsC,OAG7C,YAAgC,IAA7BrG,EAA4B,EAA5BA,QAASuC,EAAmB,EAAnBA,OAAQnG,EAAW,EAAXA,KAInB,OAHK4D,GAAYuC,GACfsE,EAAazK,EAAK0K,aAGlB,kBAAC,GAAD,CACET,iBAAkBA,EAClBC,oBAAqBA,EACrBC,UAAWA,EACXvG,QAASA,EACT5B,MACEmE,EACIA,EAAO3C,cAAcC,KAAI,SAACzB,GACxB,OAAOA,EAAM0B,WAEf,KAEN0G,SAAUA,EACVC,YAAaA,QCmSVM,GAlUqB,SAACpK,GAAW,IAAD,EACXC,mBAAS,IADE,mBACtCsE,EADsC,KAC3BkC,EAD2B,OAETxG,mBAAS,IAFA,mBAEtCyG,EAFsC,KAE1BC,EAF0B,OAGb1G,mBAAS,IAHI,mBAGtCuE,EAHsC,KAG5BoC,EAH4B,OAInB3G,mBAAS,IAJU,mBAItCC,EAJsC,KAI/BC,EAJ+B,OAKPF,oBAAS,GALF,mBAKtCG,EALsC,KAKxBC,EALwB,OAMbJ,mBAAS,IANI,mBAMtCK,EANsC,KAM5BC,EAN4B,OAODN,oBAAS,GAPR,mBAOtCO,EAPsC,KAOrBC,EAPqB,OAQCR,mBAAS,IARV,mBAQtC4G,EARsC,KAQrBC,EARqB,OASa7G,oBAAS,GATtB,mBAStC8G,EATsC,KASdC,EATc,OAUvB/G,mBAAS,IAVc,mBAUtCgH,EAVsC,KAUjCC,EAViC,OAWvBjH,mBAAS,QAXc,mBAWtCkH,EAXsC,KAWjCC,EAXiC,OAYfnH,mBAAS,IAZM,mBAYtCoI,EAZsC,KAY7BC,EAZ6B,OAaHrI,mBAAS,IAbN,mBAatCoK,GAbsC,KAavBC,GAbuB,QAcjBrK,mBAAS,IAdQ,qBActCsK,GAdsC,MAc9BC,GAd8B,SAenBvK,mBAAS,IAfU,qBAetCwK,GAfsC,MAe/BC,GAf+B,SAgBbzK,mBAAS,IAhBI,qBAgBtC4J,GAhBsC,MAgB5BC,GAhB4B,MAiBrCa,GAAsD3K,EAAtD2K,4BAA6BtH,GAAyBrD,EAAzBqD,QAAS5B,GAAgBzB,EAAhByB,MAAOhC,GAASO,EAATP,KAiBrD,OACE,6BAASiB,UAAU,kCACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,+BACb,wBAAIA,UAAU,SAAd,oCACA,8BAEF,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,cACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,aACZC,MAAO0D,EACPzD,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3B4F,EAAa5F,SAMvB,yBAAKH,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,eACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,cACZC,MAAO6F,EACP5F,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3B8F,EAAc9F,SAMxB,yBAAKH,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,aACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,YACZC,MAAO2D,EACP1D,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3B+F,EAAY/F,UAOxB,yBAAKH,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,iBACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,MACZC,MAAOoG,EACPnG,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BqG,EAAOrG,SAMjB,yBAAKH,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,SACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,QACLC,YAAY,QACZC,MAAOX,EACPY,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MACrBI,EAAaJ,EAAMK,MACvB,wCAEFb,EAAcY,GACdd,EAASU,OAIf,uBAAGH,UAAU,kBACTN,EAAyC,GAA1B,2BAIvB,yBAAKM,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,UACA,yBAAKA,UAAU,UACb,4BACEG,MAAOsG,EACPrG,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BuG,EAAOvG,KAGT,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,eAAd,oBAMV,yBAAKH,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,YACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,WACLC,YAAY,WACZC,MAAOP,EACPQ,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MACrBM,EAAgBN,EAAMK,MAC1B,oEAEFT,EAAiBU,GACjBZ,EAAYM,OAIlB,uBAAGH,UAAU,kBACTF,EAEE,GADA,kFAKV,yBAAKE,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,oBACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,WACLC,YAAY,mBACZC,MAAOgG,EACP/F,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MACrBM,EAAgBN,EAAMK,MAC1B,oEAEF8F,EAAwB7F,GACxB2F,EAAmBjG,OAIzB,uBAAGH,UAAU,kBACTqG,EAEEzG,IAAauG,EACb,yBACA,GAHA,+BAQZ,yBAAKnG,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,WACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,UACZC,MAAOwH,EACPvH,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3ByH,EAAWzH,SAMrB,yBAAKH,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,kBACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,iBACZC,MAAOwJ,GACPvJ,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3ByJ,GAAiBzJ,SAM3B,yBAAKH,UAAU,+BACb,kBAAC,GAAD,CACEmJ,SAAUA,GACVC,YAAaA,OAInB,yBAAKpJ,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,UACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,SACZC,MAAO0J,GACPzJ,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3B2J,GAAU3J,SAMpB,yBAAKH,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,SACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,QACZC,MAAO4J,GACP3J,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3B6J,GAAS7J,UAOrB,yBAAKH,UAAU,uBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,WACb,4BACEA,UAAS,4BAAuB2C,GAAU,aAAe,IACzD/B,QAAS,SAACP,GACRA,EAAMQ,iBApRpBoJ,GAA4B,CAC1BpG,YACAmC,aACAlC,WACAyC,MACAE,MACAjH,QACAI,WACA+H,UACAgC,iBACAE,UACAE,SACAZ,eA2QUxI,UACGjB,IACAI,IACAuG,GACDzG,IAAauG,EAEfxC,MAAO,CAAEC,OAAQ,WAZnB,WAiBF,wBAAI5D,UAAU,+CACXjB,GAAOA,GAAKkL,4BAA8B,IAE7C,uBAAGjK,UAAU,8CACVe,IAAgB,S,6jBCvT/B,IAwCemJ,GAxC8B,SAAC5K,GAAW,IAAD,EAChCC,mBAAS,IADuB,mBAC/CqC,EAD+C,KAC1CC,EAD0C,KAEtD,OACE,kBAAC,IAAD,CACEG,SAAU/C,EACVqD,QAAS,SAACV,GACJA,EAAIW,eACNV,EACED,EAAIW,cAAcC,KAAI,SAACzB,GACrB,OAAOA,EAAM0B,YAIfb,EAAIc,cACNb,EAAOD,EAAIc,aAAaD,YAI3B,SAACwH,EAAD,GAA4D,IAA5BtH,EAA2B,EAA3BA,QAAgB5D,GAAW,EAAlBgC,MAAkB,EAAXhC,MAI/C,OAHI4D,GACFd,EAAO,IAGP,kBAAC,GAAD,iBACMvC,EADN,CAEE2K,4BAA6B,SAACnB,GAC5BmB,EAA4B,CAC1BpL,UAAU,MAAMiK,MAGpBnG,QAASA,EACT5B,MAAOa,EACP7C,KAAMA,SC8QHoL,GA/Se,SAAC7K,GAAW,IAAD,EACLC,mBAAS,IADJ,mBAChCsE,EADgC,KACrBkC,EADqB,OAEHxG,mBAAS,IAFN,mBAEhCyG,EAFgC,KAEpBC,EAFoB,OAGP1G,mBAAS,IAHF,mBAGhCuE,EAHgC,KAGtBoC,EAHsB,OAIb3G,mBAAS,IAJI,mBAIhCC,EAJgC,KAIzBC,EAJyB,OAKDF,oBAAS,GALR,mBAKhCG,EALgC,KAKlBC,EALkB,OAMPJ,mBAAS,IANF,mBAMhCK,EANgC,KAMtBC,EANsB,OAOKN,oBAAS,GAPd,mBAOhCO,EAPgC,KAOfC,EAPe,OAQOR,mBAAS,IARhB,mBAQhC4G,EARgC,KAQfC,EARe,OASmB7G,oBAAS,GAT5B,mBAShC8G,EATgC,KASRC,EATQ,OAUjB/G,mBAAS,IAVQ,mBAUhCgH,EAVgC,KAU3BC,EAV2B,OAWjBjH,mBAAS,QAXQ,mBAWhCkH,EAXgC,KAW3BC,EAX2B,OAYTnH,mBAAS,IAZA,mBAYhCoI,EAZgC,KAYvBC,EAZuB,OAaDrI,mBAAS,IAbR,mBAahCmF,GAbgC,KAanBC,GAbmB,QAcTpF,mBAAS,IAdA,qBAchC6K,GAdgC,MAcvBC,GAduB,SAeG9K,oBAAS,GAfZ,qBAehC+K,GAfgC,MAehBC,GAfgB,SAgBPhL,mBAAS,IAhBF,qBAgBhC4J,GAhBgC,MAgBtBC,GAhBsB,MAiB/BoB,GAAgDlL,EAAhDkL,sBAAuB7H,GAAyBrD,EAAzBqD,QAAS5B,GAAgBzB,EAAhByB,MAAOhC,GAASO,EAATP,KAgB/C,OACE,6BAASiB,UAAU,kCACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,+BACb,wBAAIA,UAAU,SAAd,8BACA,8BAEF,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,cACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,aACZC,MAAO0D,EACPzD,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3B4F,EAAa5F,SAMvB,yBAAKH,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,eACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,cACZC,MAAO6F,EACP5F,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3B8F,EAAc9F,SAMxB,yBAAKH,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,aACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,YACZC,MAAO2D,EACP1D,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3B+F,EAAY/F,UAOxB,yBAAKH,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,iBACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,MACZC,MAAOoG,EACPnG,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BqG,EAAOrG,SAMjB,yBAAKH,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,SACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,QACLC,YAAY,QACZC,MAAOX,EACPY,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MACrBI,EAAaJ,EAAMK,MACvB,wCAEFb,EAAcY,GACdd,EAASU,OAIf,uBAAGH,UAAU,kBACTN,EAAyC,GAA1B,2BAIvB,yBAAKM,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,UACA,yBAAKA,UAAU,UACb,4BACEG,MAAOsG,EACPrG,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BuG,EAAOvG,KAGT,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,eAAd,oBAMV,yBAAKH,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,YACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,WACLC,YAAY,WACZC,MAAOP,EACPQ,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MACrBM,EAAgBN,EAAMK,MAC1B,oEAEFT,EAAiBU,GACjBZ,EAAYM,OAIlB,uBAAGH,UAAU,kBACTF,EAEE,GADA,kFAKV,yBAAKE,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,oBACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,WACLC,YAAY,mBACZC,MAAOgG,EACP/F,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MACrBM,EAAgBN,EAAMK,MAC1B,oEAEF8F,EAAwB7F,GACxB2F,EAAmBjG,OAIzB,uBAAGH,UAAU,kBACTqG,EAEEzG,IAAauG,EACb,yBACA,GAHA,+BAQZ,yBAAKnG,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,WACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,UACZC,MAAOwH,EACPvH,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3ByH,EAAWzH,SAMrB,yBAAKH,UAAU,+BACb,kBAAC,GAAD,CACE0E,YAAaA,GACbC,eAAgBA,MAGpB,yBAAK3E,UAAU,yEACb,kBAAC,GAAD,CACEmJ,SAAUA,GACVC,YAAaA,OAInB,yBAAKpJ,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,WACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,UACZC,MAAOiK,GACPhK,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MACrByI,EAAezI,EAAMK,MACzB,gCAEF+J,GAAgB3B,GAChByB,GAAWlK,OAIjB,uBAAGH,UAAU,kBACTsK,GAEE,GADA,wDAMZ,yBAAKtK,UAAU,uBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,WACb,4BACEA,UAAS,4BAAuB2C,GAAU,aAAe,IACzD/B,QAAS,SAACP,GACRA,EAAMQ,iBAhQpB2J,GAAsB,CACpB3G,YACAmC,aACAlC,WACAyC,MACAE,MACAjH,QACAI,WACA+H,UACApD,QAASG,GACT0F,WACAjB,eAwPUxI,UACGjB,IACAI,IACAuG,IACAiE,IACD1K,IAAauG,EAEfxC,MAAO,CAAEC,OAAQ,WAbnB,WAkBF,wBAAI5D,UAAU,+CACXjB,GAAOA,GAAKyL,sBAAwB,IAEvC,uBAAGxK,UAAU,8CACVe,IAAgB,S,6jBCrS/B,IAwCe0J,GAxCwB,SAACnL,GAAW,IAAD,EAC1BC,mBAAS,IADiB,mBACzCqC,EADyC,KACpCC,EADoC,KAEhD,OACE,kBAAC,IAAD,CACEG,SAAU9C,EACVoD,QAAS,SAACV,GACJA,EAAIW,eACNV,EACED,EAAIW,cAAcC,KAAI,SAACzB,GACrB,OAAOA,EAAM0B,YAIfb,EAAIc,cACNb,EAAOD,EAAIc,aAAaD,YAI3B,SAAC+H,EAAD,GAAsD,IAA5B7H,EAA2B,EAA3BA,QAAgB5D,GAAW,EAAlBgC,MAAkB,EAAXhC,MAIzC,OAHI4D,GACFd,EAAO,IAGP,kBAAC,GAAD,iBACMvC,EADN,CAEEkL,sBAAuB,SAAC1B,GACtB0B,EAAsB,CACpB3L,UAAU,MAAMiK,MAGpBnG,QAASA,EACT5B,MAAOa,EACP7C,KAAMA,SCDH2L,GA5BW,SAACpL,GAAW,IAC5BkB,EAAUlB,EAAVkB,MAER,OADwBsB,qBAAWd,GAA3BvC,YAEC,kBAAC,IAAD,CAAUsD,GAAG,MAGpB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO4I,OAAK,EAACC,KAAI,UAAKpK,EAAMoK,MAAQC,UAAWxG,KAC/C,kBAAC,IAAD,CACEsG,OAAK,EACLC,KAAI,UAAKpK,EAAMoK,KAAX,YACJC,UAAWhC,KAEb,kBAAC,IAAD,CACE8B,OAAK,EACLC,KAAI,UAAKpK,EAAMoK,KAAX,yBACJC,UAAWX,KAEb,kBAAC,IAAD,CACES,OAAK,EACLC,KAAI,UAAKpK,EAAMoK,KAAX,mBACJC,UAAWJ,OCSJK,GArCA,WACb,OACE,4BAAQ9K,UAAU,kBAChB,yBAAKA,UAAU,6BACb,2BACE,4BAAQA,UAAU,yCAAlB,UAGA,6BACA,uBAAGuD,KAAK,+CAAR,eAEK,IAPP,oCAQoC,IAClC,uBAAGA,KAAK,4CAAR,eAAmE,IATrE,0DAYA,2BACE,4BAAQvD,UAAU,yCAAlB,QAGA,6BAJF,sCAME,6BACA,4BACEA,UAAU,iBACVY,QAAS,WACPmK,OAAOC,SAASC,WAHpB,mBCMKC,GA5BA,SAAC5L,GAAW,IACjBb,EAAgBqD,qBAAWd,GAA3BvC,YACR,OACE,yBAAKuB,UAAU,oBACb,6BAASA,UAAU,kCACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,+BACb,wBAAIA,UAAU,SAAd,kBACA,kBAAC,IAAD,CAAM+B,GAAG,oBAAT,mBACsB,YAArBtD,EAAY0E,KACX,6BACE,kBAAC,IAAD,CAAMpB,GAAG,2BAAT,2BAGA,kBAAC,IAAD,CAAMA,GAAG,0BAAT,kCAKF,kBAAC,IAAD,CAAMA,GAAG,mBAAT,gCCyGCoJ,GA7HQ,SAAC7L,GAAW,IAAD,EACUC,oBAAS,GADnB,mBACzB6L,EADyB,KACVC,EADU,OAEA9L,mBAAS,IAFT,mBAEzBK,EAFyB,KAEfC,EAFe,OAGYN,oBAAS,GAHrB,mBAGzBO,EAHyB,KAGRC,EAHQ,OAIcR,mBAAS,IAJvB,mBAIzB4G,EAJyB,KAIRC,EAJQ,OAK0B7G,oBAAS,GALnC,mBAKzB8G,EALyB,KAKDC,EALC,KAMxBgF,EAAiChM,EAAjCgM,OAAQ3I,EAAyBrD,EAAzBqD,QAAS5B,EAAgBzB,EAAhByB,MAAOhC,EAASO,EAATP,KAKhC,OACE,6BAASiB,UAAU,kCACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,+BACb,wBAAIA,UAAU,SAAd,mBACA,8BAEF,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,YACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,WACLC,YAAY,WACZC,MAAOP,EACPQ,SAAU,SAACC,GACTgL,GAAiB,GACjB,IAAMlL,EAAQE,EAAMC,OAAOH,MACrBM,EAAgBN,EAAMK,MAC1B,oEAEFT,EAAiBU,GACjBZ,EAAYM,OAIlB,uBAAGH,UAAU,kBACTF,EAEE,GADA,kFAKV,yBAAKE,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,oBACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,WACLC,YAAY,mBACZC,MAAOgG,EACP/F,SAAU,SAACC,GACTgL,GAAiB,GACjB,IAAMlL,EAAQE,EAAMC,OAAOH,MACrBM,EAAgBN,EAAMK,MAC1B,oEAEF8F,EAAwB7F,GACxB2F,EAAmBjG,OAIzB,uBAAGH,UAAU,kBACTqG,EAEEzG,IAAauG,EACb,yBACA,GAHA,+BAQZ,yBAAKnG,UAAU,uBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,WACb,4BACEA,UAAS,4BAAuB2C,EAAU,aAAe,IACzD/B,QAAS,SAACP,GACRA,EAAMQ,iBA1EpByK,EAAO1L,GACPmL,OAAOC,SAASC,UA4EJtK,UACGyK,IACAtL,IACAuG,GACDzG,IAAauG,EAEfxC,MAAO,CAAEC,OAAQ,WAZnB,WAiBD7E,EACC,6BACE,wBAAIiB,UAAU,+CAAd,iCAGA,4BACEA,UAAS,gCACTY,QAAS,SAACP,GACRA,EAAMQ,iBACNkK,OAAOC,SAASC,UAElBtH,MAAO,CAAEC,OAAQ,SAAU2H,MAAO,SANpC,WAYF,GAEF,uBAAGvL,UAAU,8CACVe,GAAgB,S,yKChH/B,IAsCeyK,GAtCiB,SAAClM,GAAW,IAAD,EACnBC,mBAAS,IADU,mBAClCqC,EADkC,KAC7BC,EAD6B,KAEjCpD,EAAgBqD,qBAAWd,GAA3BvC,YACFgN,EAAkBhO,YAAH,KACJgB,EAAY0E,KACnB1E,EAAY0E,MAGtB,OACE,kBAAC,IAAD,CACEnB,SAAUyJ,EACVnJ,QAAS,SAACV,GACRC,EACED,EAAIW,cAAcC,KAAI,SAACzB,GACrB,OAAOA,EAAM0B,eAKlB,SAACiJ,EAAD,GAAyC,IAA5B/I,EAA2B,EAA3BA,QAAgB5D,GAAW,EAAlBgC,MAAkB,EAAXhC,MAC5B,OACE,kBAAC,GAAD,iBACMO,EADN,CAEEqD,QAASA,EACT5D,KAAMA,EACNgC,MAAOa,EACP0J,OAAQ,SAAC1L,GACP8L,EAAS,CACP7M,UAAW,CAAEe,sBC4Fd+L,GA5HC,SAACrM,GAAW,IAClBsM,EAAwDtM,EAAxDsM,cAAeC,EAAyCvM,EAAzCuM,OAAQ9K,EAAiCzB,EAAjCyB,MAAO4B,EAA0BrD,EAA1BqD,QAAS5D,EAAiBO,EAAjBP,KAAMuM,EAAWhM,EAAXgM,OAD5B,EAEG/L,mBAASqM,EAAcC,EAAO,GAAGnI,MAFpC,mBAElBoI,EAFkB,KAEVC,EAFU,OAGGxM,mBAASqM,EAAcC,EAAO,GAAGnI,MAHpC,mBAGlBsI,EAHkB,KAGVC,EAHU,OAIiB1M,oBAAS,GAJ1B,mBAIlB+K,EAJkB,KAIFC,EAJE,KASzB,OACE,6BAASvK,UAAU,kCACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,+BACb,wBAAIA,UAAU,SAAd,kBACA,8BAEF,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAS6L,EAAO,GAAGlK,MACpC,yBAAK3B,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAa2L,EAAO,GAAGlK,KACvBxB,MAAO2L,EACP1L,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3B4L,EAAU5L,SAMpB,yBAAKH,UAAU,+BACO,YAAnB6L,EAAO,GAAGlK,KACT,yBAAK3B,UAAU,SACb,2BAAOA,UAAU,SAAS6L,EAAO,GAAGlK,MACpC,yBAAK3B,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAa2L,EAAO,GAAGlK,KACvBxB,MAAO6L,EACP5L,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MACrByI,EAAezI,EAAMK,MACzB,gCAEF+J,EAAgB3B,GAChBqD,EAAU9L,OAIhB,uBAAGH,UAAU,kBACTsK,EAEE,GADA,sDAKR,yBAAKtK,UAAU,SACb,2BAAOA,UAAU,SAAS6L,EAAO,GAAGlK,MACpC,yBAAK3B,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAa2L,EAAO,GAAGlK,KACvBxB,MAAO6L,EACP5L,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3B8L,EAAU9L,UAQxB,yBAAKH,UAAU,uBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,WACb,4BACEA,UAAS,4BAAuB2C,EAAU,aAAe,IACzD/B,QAAS,SAACP,GACRA,EAAMQ,iBA/EpByK,EAAOQ,EAAQE,GACfjB,OAAOC,SAASC,UAiFJtH,MAAO,CAAEC,OAAQ,WANnB,WAYD7E,EACC,6BACE,wBAAIiB,UAAU,+CAAd,iEAGA,4BACEA,UAAS,gCACTY,QAAS,SAACP,GACRA,EAAMQ,iBACNkK,OAAOC,SAASC,UAElBtH,MAAO,CAAEC,OAAQ,SAAU2H,MAAO,SANpC,WAYF,GAGF,uBAAGvL,UAAU,8CACVe,GAAgB,S,k7BC7G/B,IAgHemL,GAhHU,SAAC5M,GAAW,IAAD,EACZC,mBAAS,IADG,mBAC3BqC,EAD2B,KACtBC,EADsB,KAE1BpD,EAAgBqD,qBAAWd,GAA3BvC,YACR,IAAKA,GAAoC,YAArBA,EAAY0E,KAC9B,OAAO,kBAAC,IAAD,CAAUpB,GAAG,YAEtB,IAAMnD,EAAQnB,YAAH,KAECgB,EAAY0E,KAGS,wBAArB1E,EAAY0E,KACR,gBACA,WAKVnB,EAAWvE,YAAH,KACSgB,EAAY0E,KACZ,wBAArB1E,EAAY0E,KACR,0BACA,oBAEY1E,EAAY0E,KACP,wBAArB1E,EAAY0E,KACR,+BACA,oBAIN,OACE,kBAAC,IAAD,CACEvE,MAAOA,EACP0D,QAAS,SAACV,GACJA,EAAIW,eACNV,EACED,EAAIW,cAAcC,KAAI,SAACzB,GACrB,OAAOA,EAAM0B,YAIfb,EAAIc,cACNb,EAAOD,EAAIc,aAAaD,YAI3B,YAAgC,IAA7BE,EAA4B,EAA5BA,QAAiB5D,GAAW,EAAnBmG,OAAmB,EAAXnG,MACb8M,EAAS,CACb,CAAElK,KAAM,UAAW+B,IAAK,WACH,wBAArBjF,EAAY0E,KACR,CAAExB,KAAM,iBAAkB+B,IAAK,iBAC/B,CAAE/B,KAAM,UAAW+B,IAAK,YAExBkI,EAAgB7M,EAAOA,EAAK,KAAD,OAAMN,EAAY0E,OAAU,KAC7D,OAAIR,GACFd,EAAO,IACA,kBAAC,GAAD,OAELD,EAEA,6BAAS5B,UAAU,kCACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,+BACb,wBAAIA,UAAU,SAAd,kBACA,6BACA,uBAAGA,UAAU,4BAA4B4B,GAAY,OAO7D,kBAAC,IAAD,CAAUI,SAAUA,IACjB,SAAC0J,EAAD,GAAyC,IAA5B/I,EAA2B,EAA3BA,QAAS5B,EAAkB,EAAlBA,MAAOhC,EAAW,EAAXA,KAC5B,OACE,kBAAC,GAAD,iBACMO,EADN,CAEEuM,OAAQA,EACRD,cAAeA,EACfjJ,QAASA,EACT5B,MACEA,EACIA,EAAMwB,cAAcC,KAAI,SAACzB,GACvB,OAAOA,EAAM0B,WAEf,KAEN6I,OAAQ,SAACQ,EAAQE,GACfN,EAAS,CACP7M,UAAU,IACR8I,QAASmE,GACgB,wBAArBrN,EAAY0E,MAAkC,CAChDwG,cAAeqC,GAHV,GAKkB,kBAArBvN,EAAY0E,MAA4B,CAC1CiH,QAAS4B,OAKjBjN,KAAMA,YC4JToN,GAvQO,SAAC7M,GAAW,IACxBsM,EAAgDtM,EAAhDsM,cAAe7K,EAAiCzB,EAAjCyB,MAAO4B,EAA0BrD,EAA1BqD,QAAS5D,EAAiBO,EAAjBP,KAAMuM,EAAWhM,EAAXgM,OADd,EAEuB/L,mBACpDqM,EAAcnD,qBAHe,mBAExBA,EAFwB,KAEHC,EAFG,OAKWnJ,mBACxCqM,EAAcQ,eANe,mBAKxBA,EALwB,KAKTC,EALS,OAQiB9M,mBAC9CqM,EAAcU,kBATe,mBAQxBA,EARwB,KAQNC,EARM,OAWThN,mBAASqM,EAAcY,KAXd,mBAWxBA,EAXwB,KAWnBC,EAXmB,OAYTlN,mBAASqM,EAAcc,KAZd,mBAYxBA,EAZwB,KAYnBC,EAZmB,OAaXpN,mBAASqM,EAAcgB,IAbZ,mBAaxBA,EAbwB,KAapBC,EAboB,OAcPtN,mBAASqM,EAAckB,MAdhB,mBAcxBA,EAdwB,KAclBC,EAdkB,OAeLxN,mBAASqM,EAAcoB,OAflB,mBAexBA,EAfwB,KAejBC,EAfiB,OAgBP1N,mBAASqM,EAAcsB,MAhBhB,mBAgBxBA,EAhBwB,KAgBlBC,EAhBkB,OAiBX5N,mBAASqM,EAAcwB,IAjBZ,mBAiBxBA,EAjBwB,KAiBpBC,EAjBoB,OAkBX9N,mBAASqM,EAAc0B,IAlBZ,mBAkBxBA,EAlBwB,KAkBpBC,EAlBoB,KAkC/B,OACE,6BAASvN,UAAU,kCACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,+BACb,wBAAIA,UAAU,SAAd,iCACA,8BAEF,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,wBACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,uBACZC,MAAOsI,EACPrI,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BuI,EAAuBvI,SAMjC,yBAAKH,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,OACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,MACZC,MAAOqM,EACPpM,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BsM,EAAOtM,SAMjB,yBAAKH,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,OACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,MACZC,MAAOuM,EACPtM,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BwM,EAAOxM,UAOnB,yBAAKH,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,kBACA,yBAAKA,UAAU,UACb,4BACEG,MAAOiM,EACPhM,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BkM,EAA2B,SAAVlM,KAGnB,4BAAQA,OAAO,GAAf,OACA,4BAAQA,OAAO,GAAf,UAKR,yBAAKH,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,sBACA,yBAAKA,UAAU,UACb,4BACEG,MAAOmM,EACPlM,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BoM,EAA8B,SAAVpM,KAGtB,4BAAQA,OAAO,GAAf,OACA,4BAAQA,OAAO,GAAf,UAKR,yBAAKH,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,MACA,yBAAKA,UAAU,UACb,4BACEG,MAAOyM,EACPxM,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3B0M,EAAgB,SAAV1M,KAGR,4BAAQA,OAAO,GAAf,OACA,4BAAQA,OAAO,GAAf,WAMV,yBAAKH,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,QACA,yBAAKA,UAAU,UACb,4BACEG,MAAO2M,EACP1M,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3B4M,EAAkB,SAAV5M,KAGV,4BAAQA,OAAO,GAAf,OACA,4BAAQA,OAAO,GAAf,UAKR,yBAAKH,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,SACA,yBAAKA,UAAU,UACb,4BACEG,MAAO6M,EACP5M,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3B8M,EAAmB,SAAV9M,KAGX,4BAAQA,OAAO,GAAf,OACA,4BAAQA,OAAO,GAAf,UAKR,yBAAKH,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,QACA,yBAAKA,UAAU,UACb,4BACEG,MAAO+M,EACP9M,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BgN,EAAkB,SAAVhN,KAGV,4BAAQA,OAAO,GAAf,OACA,4BAAQA,OAAO,GAAf,WAMV,yBAAKH,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,MACA,yBAAKA,UAAU,UACb,4BACEG,MAAOiN,EACPhN,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BkN,EAAgB,SAAVlN,KAGR,4BAAQA,OAAO,GAAf,OACA,4BAAQA,OAAO,GAAf,UAKR,yBAAKH,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,MACA,yBAAKA,UAAU,UACb,4BACEG,MAAOmN,EACPlN,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BoN,EAAgB,SAAVpN,KAGR,4BAAQA,OAAO,GAAf,OACA,4BAAQA,OAAO,GAAf,WAMV,yBAAKH,UAAU,uBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,WACb,4BACEA,UAAS,4BAAuB2C,EAAU,aAAe,IACzD/B,QAAS,SAACP,GACRA,EAAMQ,iBA9NpByK,EAAO,CACL7C,sBACA2D,gBACAE,mBACAE,MACAE,MACAE,KACAE,OACAE,QACAE,OACAE,KACAE,QAsNU3J,MAAO,CAAEC,OAAQ,WANnB,WAWF,wBAAI5D,UAAU,+CACXjB,EAAOA,EAAKyO,cAAgB,IAE/B,uBAAGxN,UAAU,8CACVe,GAAgB,S,+lDCxP/B,IAyHe0M,GAzHgB,SAACnO,GAAW,IACjCb,EAAgBqD,qBAAWd,GAA3BvC,YADgC,EAElBc,mBAAS,IAFS,mBAEjCqC,EAFiC,KAE5BC,EAF4B,KAGlCjD,EAAQnB,YAAH,MAiBLuE,EAAWvE,YAAH,MA+Bd,OAAKgB,GAAoC,YAArBA,EAAY0E,KAI9B,kBAAC,IAAD,CACEvE,MAAOA,EACP0D,QAAS,SAACvB,GACJA,GAASA,EAAMwB,cACjBV,EACEd,EAAMwB,cAAcC,KAAI,SAACkL,GACvB,OAAOA,EAAKjL,YAGP1B,GAASA,EAAM2B,cACxBb,EAAOd,EAAM2B,aAAaD,YAI7B,YAA+B,IAA5BE,EAA2B,EAA3BA,QAAgB5D,GAAW,EAAlBgC,MAAkB,EAAXhC,MAClB,GAAI4D,EAEF,OADAd,EAAO,IACA,kBAAC,GAAD,MAET,IAAM+J,EAAgB7M,EAAOA,EAAI,UAAgB,KACjD,OAAI6C,EAEA,6BAAS5B,UAAU,kCACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,+BACb,wBAAIA,UAAU,SAAd,0BACA,6BACA,uBAAGA,UAAU,4BAA4B4B,GAAY,OAO7D,kBAAC,IAAD,CAAUI,SAAUA,IACjB,SAAC0J,EAAD,GAAyC,IAA5B/I,EAA2B,EAA3BA,QAAS5B,EAAkB,EAAlBA,MAAOhC,EAAW,EAAXA,KAC5B,OACE,kBAAC,GAAD,iBACMO,EADN,CAEEsM,cAAeA,EACfjJ,QAASA,EACT5B,MACEA,EACIA,EAAMwB,cAAcC,KAAI,SAACzB,GACvB,OAAOA,EAAM0B,WAEf,KAEN6I,OAAQ,SAACvM,GACP2M,EAAS,CACP7M,UAAU,MACLE,MAITA,KAAMA,WA1Db,kBAAC,IAAD,CAAUgD,GAAG,OCiMT4L,GAzPQ,SAACrO,GAAW,IACzBsM,EAAgDtM,EAAhDsM,cAAe7K,EAAiCzB,EAAjCyB,MAAO4B,EAA0BrD,EAA1BqD,QAAS5D,EAAiBO,EAAjBP,KAAMuM,EAAWhM,EAAXgM,OADb,EAEA/L,mBAASqM,EAAczE,UAFvB,mBAEzBA,EAFyB,KAEfC,EAFe,OAGU7H,mBACxCqM,EAAcvE,eAJgB,mBAGzBA,EAHyB,KAGVC,EAHU,OAMc/H,mBAC5CqM,EAAcrE,iBAPgB,mBAMzBA,EANyB,KAMRC,EANQ,OASFjI,mBAASqM,EAAcjE,SATrB,mBASzBA,EATyB,KAShBC,EATgB,OAUFrI,mBAASqM,EAAcpG,QAAQA,SAV7B,mBAUzBA,EAVyB,KAUhBC,EAVgB,OAWMlG,mBACpCqM,EAAcrH,QAAQG,aAZQ,mBAWzBA,EAXyB,KAWZC,EAXY,OAcIpF,mBAASqM,EAAc/D,YAd3B,mBAczBA,EAdyB,KAcbC,EAda,OAeAvI,mBAASqM,EAAc7D,UAfvB,mBAezBA,EAfyB,KAefC,EAfe,OAgBYzI,oBAAS,GAhBrB,mBAgBzB0I,EAhByB,KAgBRC,EAhBQ,OAiBA3I,mBAASqM,EAAczD,UAjBvB,mBAiBzBA,EAjByB,KAiBfC,EAjBe,OAkBY7I,oBAAS,GAlBrB,mBAkBzB8I,EAlByB,KAkBRC,EAlBQ,OAmBY/I,mBAC1CqM,EAAcrD,gBApBgB,oBAmBzBA,GAnByB,MAmBTC,GAnBS,MAoChC,OACE,6BAASxI,UAAU,kCACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,+BACb,wBAAIA,UAAU,SAAd,0BACA,8BAEF,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,YACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,WACZC,MAAOgH,EACP/G,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BiH,EAAYjH,SAMtB,yBAAKH,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,kBACA,yBAAKA,UAAU,UACb,4BACEG,MAAOkH,EACPjH,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BmH,EAAiBnH,KAGnB,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,WAAd,eAKR,yBAAKH,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,oBACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,mBACZC,MAAOoH,EACPnH,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BqH,EAAmBrH,UAO/B,yBAAKH,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,WACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,UACZC,MAAOwH,EACPvH,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3ByH,EAAWzH,SAMrB,yBAAKH,UAAU,+BACb,kBAAC,GAAD,CACEqF,OAAQuG,EAAcpG,QAAQH,OAC9BG,QAASA,EACTC,WAAYA,KAGhB,yBAAKzF,UAAU,+BACb,kBAAC,GAAD,CACEuE,QAASqH,EAAcrH,QAAQQ,YAC/BL,YAAaA,EACbC,eAAgBA,MAItB,yBAAK3E,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,aACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,YACZC,MAAO4H,EACP3H,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MACrByI,EAAezI,EAAMK,MACzB,gCAEF0H,EAAiBU,GACjBZ,EAAY7H,OAIlB,uBAAGH,UAAU,kBACTiI,EAEE,GADA,uDAKV,yBAAKjI,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,aACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,YACZC,MAAOgI,EACP/H,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MACrByI,EAAezI,EAAMK,MACzB,gCAEF8H,EAAiBM,GACjBR,EAAYjI,OAIlB,uBAAGH,UAAU,kBACTqI,EAEE,GADA,wDAMZ,yBAAKrI,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,cACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,aACZC,MAAO0H,EACPzH,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3B2H,EAAc3H,SAMxB,yBAAKH,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,oBACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,mBACZC,MAAOoI,GACPnI,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BqI,GAAkBrI,UAO9B,yBAAKH,UAAU,uBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,WACb,4BACEA,UAAS,4BAAuB2C,EAAU,aAAe,IACzD/B,QAAS,SAACP,GACRA,EAAMQ,iBA5MpByK,EAAO,CACLnE,WACAE,gBACAE,kBACAI,UACAnC,QAASA,EAAQoI,WACjBrJ,QAASG,EAAYkJ,WACrB/F,aACAE,WACAI,WACAI,qBAqMU5H,UAAWsH,IAAoBI,EAC/B1E,MAAO,CAAEC,OAAQ,WAPnB,WAYF,wBAAI5D,UAAU,+CACXjB,EAAOA,EAAKyO,cAAgB,IAE/B,uBAAGxN,UAAU,8CACVe,GAAgB,S,iwDC5O/B,IA4He8M,GA5HiB,SAACvO,GAAW,IAClCb,EAAgBqD,qBAAWd,GAA3BvC,YADiC,EAEnBc,mBAAS,IAFU,mBAElCqC,EAFkC,KAE7BC,EAF6B,KAGnCjD,EAAQnB,YAAH,MAsBLuE,EAAWvE,YAAH,MA6Bd,OAAKgB,GAAoC,YAArBA,EAAY0E,KAI9B,kBAAC,IAAD,CACEvE,MAAOA,EACP0D,QAAS,SAACvB,GACJA,GAASA,EAAMwB,cACjBV,EACEd,EAAMwB,cAAcC,KAAI,SAACkL,GACvB,OAAOA,EAAKjL,YAGP1B,GAASA,EAAM2B,cACxBb,EAAOd,EAAM2B,aAAaD,YAI7B,YAA+B,IAA5BE,EAA2B,EAA3BA,QAAgB5D,GAAW,EAAlBgC,MAAkB,EAAXhC,MAClB,GAAI4D,EAEF,OADAd,EAAO,IACA,kBAAC,GAAD,MAET,IAAM+J,EAAgB7M,EAAOA,EAAI,UAAgB,KACjD,OAAI6C,EAEA,6BAAS5B,UAAU,kCACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,+BACb,wBAAIA,UAAU,SAAd,0BACA,6BACA,uBAAGA,UAAU,4BAA4B4B,GAAY,OAO7D,kBAAC,IAAD,CAAUI,SAAUA,IACjB,SAAC0J,EAAD,GAAyC,IAA5B/I,EAA2B,EAA3BA,QAAS5B,EAAkB,EAAlBA,MAAOhC,EAAW,EAAXA,KAC5B,OACE,kBAAC,GAAD,iBACMO,EADN,CAEEsM,cAAeA,EACfjJ,QAASA,EACT5B,MACEA,EACIA,EAAMwB,cAAcC,KAAI,SAACzB,GACvB,OAAOA,EAAM0B,WAEf,KAEN6I,OAAQ,SAACvM,GACP2M,EAAS,CACP7M,UAAU,MACLE,MAITA,KAAMA,WA1Db,kBAAC,IAAD,CAAUgD,GAAG,OCrBT+L,GAjCS,SAACxO,GAAW,IAC1BkB,EAAUlB,EAAVkB,MAER,OADwBsB,qBAAWd,GAA3BvC,YAKN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOkM,OAAK,EAACC,KAAI,UAAKpK,EAAMoK,MAAQC,UAAWK,KAC/C,kBAAC,IAAD,CACEP,OAAK,EACLC,KAAI,UAAKpK,EAAMoK,KAAX,aACJC,UAAWW,KAEb,kBAAC,IAAD,CACEb,OAAK,EACLC,KAAI,UAAKpK,EAAMoK,KAAX,YACJC,UAAWqB,KAEb,kBAAC,IAAD,CACEvB,OAAK,EACLC,KAAI,UAAKpK,EAAMoK,KAAX,mBACJC,UAAW4C,KAEb,kBAAC,IAAD,CACE9C,OAAK,EACLC,KAAI,UAAKpK,EAAMoK,KAAX,oBACJC,UAAWgD,MAvBR,kBAAC,IAAD,CAAU9L,GAAG,OCqITgM,GAhJA,SAACzO,GAAW,IAEvBE,EASEF,EATFE,MACAC,EAQEH,EARFG,SACAkC,EAOErC,EAPFqC,KACAqM,EAME1O,EANF0O,QACA/N,EAKEX,EALFW,KACAgO,EAIE3O,EAJF2O,QACAlN,EAGEzB,EAHFyB,MACA4B,EAEErD,EAFFqD,QACAuL,EACE5O,EADF4O,MAEF,OACE,6BAASlO,UAAU,0BACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,+BACb,wBAAIA,UAAU,SAAd,eACA,uBAAGA,UAAU,4BAA4Be,GAAgB,IACxD4B,EACC,4BAAQ3C,UAAU,gCAAlB,WAEA,IAGJ,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,SACA,yBAAKA,UAAU,0CACb,2BACEA,UAAU,QACVC,KAAK,QACLC,YAAY,cACZC,MAAOX,EACPY,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BV,EAASU,MAGb,0BAAMH,UAAU,yBACd,uBAAGA,UAAU,uBAKrB,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,QACA,yBAAKA,UAAU,0CACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,OACZC,MAAOwB,EACPvB,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3B6N,EAAQ7N,MAGZ,0BAAMH,UAAU,yBACd,uBAAGA,UAAU,aAAawD,cAAY,cAMhD,yBAAKxD,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,QACA,yBAAKA,UAAU,qBACb,4BACEG,MAAOF,EACPG,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3B8N,EAAQ9N,KAGV,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,uBAAd,6BAQV,wBACEH,UAAU,iBACV2D,MAAO,CAAEwK,gBAAiB,aAE5B,yBAAKnO,UAAU,aACZkO,EAAM1L,KAAI,SAAChE,EAAMkF,GAChB,OACE,6BACEA,IAAKA,EACL1D,UAAU,QACV2D,MAAO,CACLyK,OAAQ,oBACRC,QAAS,OACTC,aAAc,SAGhB,yBAAKtO,UAAU,iBACb,yBAAKA,UAAU,WACb,2BACE,gCACGxB,EAAKqF,UADR,IACoBrF,EAAKwH,WADzB,IACsCxH,EAAKsF,UACjC,IACV,+BAAQtF,EAAKgB,OACb,6BACChB,EAAKuF,SACJ,uBACE/D,UAAU,qBACVwD,cAAY,SAGd,uBACExD,UAAU,qBACVwD,cAAY,SAdlB,OAkBGhF,EAAK2E,QAIZ,yBAAKnD,UAAU,eACb,kBAAC,IAAD,CACE+B,GAAE,UAAKvD,EAAK2E,KAAKa,cAAf,YAAgCxF,EAAKiF,IACvCzD,UAAU,qBAFZ,yB,mSC9HlB,IAsEeuO,GAtES,SAACjP,GAAW,IAAD,EACTC,mBAAS,IADA,mBAC1BoC,EAD0B,KACpBqM,EADoB,OAEPzO,mBAAS,IAFF,mBAE1BC,EAF0B,KAEnBC,EAFmB,OAGTF,mBAAS,WAHA,mBAG1BU,EAH0B,KAGpBgO,EAHoB,OAIP1O,mBAAS,IAJF,mBAI1B2O,EAJ0B,KAInBM,EAJmB,OAKXjP,mBAAS,IALE,mBAK1BqC,EAL0B,KAKrBC,EALqB,KAM3B4M,EAAchR,YAAH,KACIkE,EAAO,gBAAkB,GAC5CnC,EAAQ,iBAAmB,GACxBS,EAAO,mBAAqB,GACR0B,EAAO,cAAgB,GAC9CnC,EAAQ,gBAAkB,GACvBS,EAAO,aAAe,IAW3B,OACE,kBAAC,IAAD,CACErB,MAAO6P,EACP5P,UAAW,CACT8C,KAAMA,EACNnC,MAAOA,EACPS,KAAMA,GAERgC,YAAa,SAAClD,GACZyP,EAASzP,EAAK2P,aAEhBpM,QAAS,SAACV,GACJA,EAAIW,eACNV,EACED,EAAIW,cAAcC,KAAI,SAACzB,GACrB,OAAOA,EAAM0B,YAIfb,EAAIc,cACNb,EAAOD,EAAIc,aAAaD,YAI3B,YAAkB,IAAfE,EAAc,EAAdA,QAIF,OAHIA,GACFd,EAAO,IAGP,kBAAC,GAAD,iBACMvC,EADN,CAEEqC,KAAMA,EACNqM,QAASA,EACTxO,MAAOA,EACPC,SAAUA,EACVQ,KAAMA,EACNgO,QAASA,EACTC,MAAOA,EACPvL,QAASA,EACT5B,MAAOa,S,mBC5BJ+M,GApCE,SAAC,GAAc,IAAZnQ,EAAW,EAAXA,KACZ+H,EAAMqI,KAAOpQ,EAAK+H,KACxB,OACE,yBACEvG,UAAU,OACV2D,MAAO,CACLkL,SAAU,aAGZ,yBAAK7O,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,iBACb,uBAAGA,UAAU,cACVxB,EAAKqF,UADR,IACoBrF,EAAKwH,WADzB,IACsCxH,EAAKsF,UAE3C,uBAAG9D,UAAU,iBAAiBxB,EAAKgB,SAIvC,yBAAKQ,UAAU,WACb,uBAAGA,UAAU,QAAb,WAA6BxB,EAAKiI,KAClC,uBAAGzG,UAAU,QAAb,YACY,IACTxB,EAAKuF,SACJ,uBAAG/D,UAAU,qBAAqBwD,cAAY,SAE9C,uBAAGxD,UAAU,qBAAqBwD,cAAY,UAGlD,uBAAGxD,UAAU,QAAb,QAA0BuG,EAAIuI,OAAO,2BCiBhCC,GA9CC,SAACzP,GAAW,IAClBqD,EAAwCrD,EAAxCqD,QAAS5D,EAA+BO,EAA/BP,KAAMgC,EAAyBzB,EAAzByB,MAAOiO,EAAkB1P,EAAlB0P,QAAS7L,EAAS7D,EAAT6D,KACvC,OACE,yBAAKnD,UAAU,uBACb,yBAAKA,UAAU,iCACb,4BACE2D,MAAO,CAAEC,OAAQ,UACjB5D,UAAS,4BAAuB2C,EAAU,aAAe,IACzD/B,QAAS,WACPoO,MAJJ,YAUF,yBACEhP,UAAU,yBACV2D,MAAO,CACLsL,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,WAAY,eAGbrO,EAAQ,uBAAGf,UAAU,0BAA0Be,GAAa,KAC5DhC,EACC,uBAAGiB,UAAU,2BAA2BjB,EAAK,UAAD,OAAWoE,KACrD,MAEN,yBAAKnD,UAAU,iCACZe,GAAShC,EACR,4BACE4E,MAAO,CAAEC,OAAQ,UACjB5D,UAAS,4BAAuB2C,EAAU,aAAe,IACzD/B,QAAS,WACPmK,OAAOC,SAASC,WAJpB,UASE,Q,2KCrCZ,IA4CeoE,GA5CU,SAAC/P,GAAW,IAAD,EACZC,mBAAS,IADG,mBAC3BqC,EAD2B,KACtBC,EADsB,KAE1BsB,EAAa7D,EAAb6D,KAAMM,EAAOnE,EAAPmE,GACRzB,EAAWvE,YAAH,KACQ0F,EACLA,GAGjB,OACE,kBAAC,IAAD,CACEb,QAAS,SAACvB,GACJA,GAASA,EAAMwB,cACjBV,EACEd,EAAMwB,cAAcC,KAAI,SAACkL,GACvB,OAAOA,EAAKjL,YAGP1B,GAASA,EAAM2B,cACxBb,EAAOd,EAAM2B,aAAaD,UAG9BT,SAAUA,IAET,SAACsN,EAAD,GAA0C,IAA5B3M,EAA2B,EAA3BA,QAAgB5D,GAAW,EAAlBgC,MAAkB,EAAXhC,MAC7B,OACE,kBAAC,GAAD,iBACMO,EADN,CAEEqD,QAASA,EACT5B,MAAOa,EACPoN,QAAS,WACPM,EAAU,CACRzQ,UAAW,CACT4E,GAAIA,MAIV1E,KAAMA,SCqCHwQ,GA3EO,SAACjQ,GAAW,IACxBP,EAA4BO,EAA5BP,KAAMgC,EAAsBzB,EAAtByB,MAAOyO,EAAelQ,EAAfkQ,WACrB,OACE,6BACE,yBAAKxP,UAAU,uBACb,yBACEA,UAAU,yBACV2D,MAAO,CACLsL,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,WAAY,eAGbrO,EAAQ,uBAAGf,UAAU,0BAA0Be,GAAa,OAGjE,yBAAKf,UAAU,uBACb,yBAAKA,UAAU,UACZjB,EACC,yBAAKiB,UAAU,QACb,4BAAQA,UAAU,eAChB,uBAAGA,UAAU,qBAAb,0BAEF,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,WACb,uBAAGA,UAAU,cACX,gDADF,KACkCjB,EAAK0Q,aAEvC,uBAAGzP,UAAU,iBACX,0CADF,KAC4BjB,EAAK2Q,gBAC/B,6BACA,6CAHF,KAG+B3Q,EAAK4Q,kBAClC,6BACA,6CALF,KAK+B5Q,EAAK6Q,kBAClC,6BACA,2CAPF,KAO6B7Q,EAAK8Q,qBAMxC,uBAAG7P,UAAU,4CAAb,+BAMLwP,EACC,yBAAKxP,UAAU,uBACb,yBACEA,UAAU,yBACV2D,MAAO,CACLsL,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,WAAY,eAGd,kBAAC,IAAD,CACErN,GAAI,CACF+N,SAAU,oBACVC,MAAO,CAAEhR,KAAMA,EAAMkB,KAAMlB,EAAO,SAAW,QAE/CiB,UAAU,qBALZ,YAWF,OCCKgQ,GAvEU,SAAC1Q,GAAW,IAC3BP,EAA4BO,EAA5BP,KAAMgC,EAAsBzB,EAAtByB,MAAOyO,EAAelQ,EAAfkQ,WACrB,OACE,6BACE,yBAAKxP,UAAU,uBACb,yBACEA,UAAU,yBACV2D,MAAO,CACLsL,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,WAAY,eAGbrO,EAAQ,uBAAGf,UAAU,0BAA0Be,GAAa,OAGjE,yBAAKf,UAAU,uBACb,yBAAKA,UAAU,UACZjB,EACC,yBAAKiB,UAAU,QACb,4BAAQA,UAAU,eAChB,uBAAGA,UAAU,qBAAb,8BAEF,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,WACb,uBAAGA,UAAU,iBACX,4DADF,IAC6C,IAC1CjB,EAAKkR,YAAYC,UAClB,6BACA,0DAJF,IAI2C,IACxCnR,EAAKoR,mBAER,kBAAC,GAAD,CAAU3R,KAAMO,EAAKkR,YAAYzR,UAKvC,uBAAGwB,UAAU,4CAAb,mCAMLwP,EACC,yBAAKxP,UAAU,uBACb,yBACEA,UAAU,yBACV2D,MAAO,CACLsL,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,WAAY,eAGd,kBAAC,IAAD,CACErN,GAAI,CACF+N,SAAU,wBACVC,MAAO,CAAEhR,KAAMA,EAAMkB,KAAMlB,EAAO,SAAW,QAE/CiB,UAAU,qBALZ,YAWF,OCwIKiD,GApMC,SAAC3D,GAAW,IAClBb,EAAgBqD,qBAAWd,GAA3BvC,YACAsC,EAAgBzB,EAAhByB,MAAOhC,EAASO,EAATP,KACTqR,EAAerR,EACjB6P,KAAO7P,EAAKqR,cAActB,OAAO,iCACjC,KACJ,OACE,6BACE,6BAAS9O,UAAU,mCACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,qBACb,wBAAIA,UAAU,SAAd,WACsB,kBAArBvB,EAAY0E,MAA6BpE,EAAKP,KAAKuF,SAKhD,KAJF,kBAAC,GAAD,CACEZ,KAAK,UACLM,GAAI1E,EAAKmR,cAKjB,uBAAGlQ,UAAU,4BAA4Be,GAAgB,IACxDhC,EACC,6BACE,yBAAKiB,UAAU,uBACb,yBACEA,UAAU,8BACV2D,MAAO,CAAE0K,QAAS,SAElB,kBAAC,GAAD,CAAU7P,KAAMO,EAAKP,QAEvB,yBAAKwB,UAAU,+BACb,6BAASA,UAAU,SACjB,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,UAAU2D,MAAO,CAAE0K,QAAS,SACzC,2BACE,8CADF,KACgCtP,EAAKmR,UADrC,IACgD,6BAC9C,+CAFF,KAEiCnR,EAAKkI,WAFtC,IAEkD,6BAChD,sDAHF,IAGuC,IACpClI,EAAK4H,kBAJR,IAI2B,6BACzB,+CALF,KAKiC5H,EAAK8H,WALtC,IAKkD,6BAChD,4CANF,KAM8B9H,EAAKoI,SANnC,IAM6C,6BAC3C,kDAPF,KAOoCpI,EAAKsI,cAAe,IACtD,6BACA,oDATF,IASqC,IAClCtI,EAAKwI,gBACN,6BACA,+CAZF,KAYiCxI,EAAK0I,WAZtC,IAYkD,kCAM1D,yBAAKzH,UAAU,+BACb,6BAASA,UAAU,SACjB,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,UAAU2D,MAAO,CAAE0K,QAAS,SACzC,2BACE,6CADF,KAC+BtP,EAAKgJ,SADpC,IAC8C,6BAC5C,6CAFF,KAE+BhJ,EAAKoJ,SAFpC,IAE8C,6BAC5C,4CAHF,KAG8BpJ,EAAKgI,SAHnC,IAG6C,6BAC3C,8CAJF,KAIgChI,EAAK8I,WAJrC,IAIiD,6BAC/C,kDALF,KAKoC9I,EAAKwJ,eAAgB,IACvD,6BACA,2CAPF,KAO6BxJ,EAAK4I,QAPlC,IAO4C,IACzC5I,EAAKyG,QAAQH,OARhB,IAQyBtG,EAAKwF,QAAQQ,YAAa,IACjD,6BACA,iDAVF,KAUmCqL,EAVnC,IAUiD,mCAO3D,6BACA,yBAAKpQ,UAAU,+BACb,wBAAIA,UAAU,cAAd,wBAEF,yBAAKA,UAAU,uBACb,yBACEA,UAAU,8BACV2D,MAAO,CAAE0K,QAAS,SAElB,6BAASrO,UAAU,SACjB,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,UAAU2D,MAAO,CAAE0K,QAAS,SACzC,2BACE,wDADF,IACyC,IACtCtP,EAAK0J,oBAFR,IAE6B,6BAC3B,kDAHF,IAGmC,IAChC1J,EAAKqN,cAAgB,MAAQ,KAJhC,IAIsC,6BACpC,sDALF,IAKuC,IACpCrN,EAAKuN,iBAAmB,MAAQ,KANnC,IAMyC,6BACvC,uCAPF,KAOyBvN,EAAKyN,IAP9B,IAOmC,6BACjC,uCARF,KAQyBzN,EAAK2N,IAR9B,IAQmC,6BACjC,sCATF,KASwB3N,EAAK6N,GAAK,MAAQ,KAT1C,IASgD,6BAC9C,wCAVF,KAU0B7N,EAAK+N,KAAO,MAAQ,KAAM,IAClD,6BACA,yCAZF,KAY2B/N,EAAKiO,MAAQ,MAAQ,KAAM,IACpD,6BACA,wCAdF,KAc0BjO,EAAKmO,KAAO,MAAQ,KAAM,IAClD,6BACA,sCAhBF,KAgBwBnO,EAAKqO,GAAK,MAAQ,KAhB1C,IAgBgD,6BAC9C,sCAjBF,KAiBwBrO,EAAKuO,GAAK,MAAQ,KAjB1C,IAiBgD,kCAMxD,yBACEtN,UAAU,8BACV2D,MAAO,CAAE0K,QAAS,SAElB,yBAAKrO,UAAU,+BACb,wBAAIA,UAAU,cAAd,iBACA,yBAAK2D,MAAO,CAAEC,OAAQ,WACpB,kBAAC,IAAD,CACE5D,UAAU,oBACV+B,GAAE,mBAAchD,EAAKmR,UAAnB,kBAFJ,eAOF,yBAAKvM,MAAO,CAAEC,OAAQ,WACE,wBAArBnF,EAAY0E,KACX,kBAAC,IAAD,CACEnD,UAAU,oBACV+B,GAAE,mBAAchD,EAAKmR,UAAnB,yBAFJ,eAME,OAGR,6BACsB,wBAArBzR,EAAY0E,KACX,yBAAKnD,UAAU,+BACb,wBAAIA,UAAU,cAAd,wBACA,yBAAK2D,MAAO,CAAEC,OAAQ,WACpB,kBAAC,IAAD,CACE5D,UAAU,oBACV+B,GAAE,mBAAchD,EAAKmR,UAAnB,iBAFJ,uBAQF,OAGR,6BACA,yBAAKlQ,UAAU,+BACb,wBAAIA,UAAU,cAAd,gCAEF,yBAAKA,UAAU,uBACb,yBACEA,UAAU,8BACV2D,MAAO,CAAE0K,QAAS,SAEjBtP,EAAKsR,KACJ,kBAAC,GAAD,CACEtR,KAAMA,EAAKsR,KACXb,YAAY,EACZzO,MAAO,OAGT,uBAAGf,UAAU,+CAAb,0CAKJ,yBACEA,UAAU,8BACV2D,MAAO,CAAE0K,QAAS,SAEjBtP,EAAKuR,UACJ,kBAAC,GAAD,CACEvR,KAAMA,EAAKuR,UACXd,YAAY,EACZzO,MAAO,OAGT,uBAAGf,UAAU,+CAAb,wCAON,S,y3CChMd,IA2GeuQ,GA3GY,SAACjR,GAAW,IAAD,EACdC,mBAAS,IADK,mBAC7BqC,EAD6B,KACxBC,EADwB,KAE9BjD,EAAQnB,YAAH,MAwEX,OACE,kBAAC,IAAD,CACEmB,MAAOA,EACP0D,QAAS,SAACvB,GACJA,GAASA,EAAMwB,cACjBV,EACEd,EAAMwB,cAAcC,KAAI,SAACkL,GACvB,OAAOA,EAAKjL,YAGP1B,GAASA,EAAM2B,cACxBb,EAAOd,EAAM2B,aAAaD,YAI7B,YAA+B,IAA5BE,EAA2B,EAA3BA,QAAgB5D,GAAW,EAAlBgC,MAAkB,EAAXhC,MAClB,OAAI4D,GACFd,EAAO,IACA,kBAAC,GAAD,OAGP,kBAAC,GAAD,iBACMvC,EADN,CAEEqD,QAASA,EACT5B,MAAOa,EACP7C,KAAMA,EAAOA,EAAKyR,UAAY,Y,o6CCnG1C,IAiHeC,GAjHc,SAACnR,GAAW,IAAD,EAChBC,mBAAS,IADO,mBAC/BqC,EAD+B,KAC1BC,EAD0B,KAG3B6O,EACPpR,EADFkB,MAASkQ,OAEL9R,EAAQnB,YAAH,MAwEX,OACE,kBAAC,IAAD,CACEmB,MAAOA,EACPC,UAAW,CACT4E,GAAIiN,EAAOjN,IAEbnB,QAAS,SAACvB,GACJA,GAASA,EAAMwB,cACjBV,EACEd,EAAMwB,cAAcC,KAAI,SAACkL,GACvB,OAAOA,EAAKjL,YAGP1B,GAASA,EAAM2B,cACxBb,EAAOd,EAAM2B,aAAaD,YAI7B,YAA+B,IAA5BE,EAA2B,EAA3BA,QAAgB5D,GAAW,EAAlBgC,MAAkB,EAAXhC,MAClB,OAAI4D,GACFd,EAAO,IACA,kBAAC,GAAD,OAGP,kBAAC,GAAD,iBACMvC,EADN,CAEEqD,QAASA,EACT5B,MAAOa,EACP7C,KAAMA,EAAOA,EAAK4R,YAAc,YC0C7BC,GArJI,SAACtR,GAAW,IAE3BuR,EAUEvR,EAVFuR,OACAC,EASExR,EATFwR,UACAC,EAQEzR,EARFyR,OACAC,EAOE1R,EAPF0R,UACAC,EAME3R,EANF2R,SACAC,EAKE5R,EALF4R,YACAnQ,EAIEzB,EAJFyB,MACA4B,EAGErD,EAHFqD,QACAwO,EAEE7R,EAFF6R,MACA3Q,EACElB,EADFkB,MAEF,OACE,6BAASR,UAAU,0BACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,+BACb,wBAAIA,UAAU,SAAd,uBACA,uBAAGA,UAAU,4BAA4Be,GAAgB,IACxD4B,EACC,4BAAQ3C,UAAU,gCAAlB,WAEA,IAGJ,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,WACA,yBAAKA,UAAU,0BACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,UACZC,MAAO0Q,EACPzQ,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3B2Q,EAAU3Q,MAGd,0BAAMH,UAAU,yBACd,uBAAGA,UAAU,aAAawD,cAAY,cAMhD,yBAAKxD,UAAU,uBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,aACA,yBAAKA,UAAU,0BACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,YACZC,MAAO8Q,EACP7Q,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3B+Q,EAAY/Q,MAGhB,0BAAMH,UAAU,yBACd,uBAAGA,UAAU,iBAAiBwD,cAAY,aAKlD,yBAAKxD,UAAU,iCACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,WACA,yBAAKA,UAAU,0BACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,UACZC,MAAO4Q,EACP3Q,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3B6Q,EAAU7Q,MAGd,0BAAMH,UAAU,yBACd,uBAAGA,UAAU,iBAAiBwD,cAAY,cAMpD,wBACExD,UAAU,iBACV2D,MAAO,CAAEwK,gBAAiB,aAE5B,yBAAKnO,UAAU,aACZmR,EAAM3O,KAAI,SAAC4O,EAAU1N,GACpB,OACE,6BACEA,IAAKA,EACL1D,UAAU,QACV2D,MAAO,CACLyK,OAAQ,oBACRC,QAAS,OACTC,aAAc,SAGhB,yBAAKtO,UAAU,iBACb,yBAAKA,UAAU,WACb,2BACE,6CACCoR,EAASP,OAFZ,IAEqB,IACnB,+BACE,kDADF,IACmCO,EAASC,YAE5C,6BACA,6CACCD,EAASE,QAAQC,WARpB,KAQkC,IAC/BH,EAASI,WAAWC,eACrB,6BAVF,cAWc,IACX7C,KAAOwC,EAASM,WAAW5C,OAC1B,iCAEF,6BAfF,mBAgBmB,IAChBF,KAAOwC,EAASO,WAAW7C,OAC1B,iCAEF,6BApBF,UAyBJ,yBAAK9O,UAAU,eACb,kBAAC,IAAD,CACE+B,GAAE,UAAKvB,EAAMoR,IAAX,iBAAuBR,EAASP,QAClC7Q,UAAU,qBAFZ,sB,wjBClIlB,IAyFe6R,GAzFa,SAACvS,GAAW,IAC9Bb,EAAgBqD,qBAAWd,GAA3BvC,YAIFyR,EADF5Q,EADFkB,MAASkQ,OAEcjN,GALY,EAMTlE,mBAAS,IANA,mBAM9BsR,EAN8B,KAMtBC,EANsB,OAOTvR,mBAAS,IAPA,mBAO9BwR,EAP8B,KAOtBC,EAPsB,OAQLzR,mBAAS,IARJ,mBAQ9B0R,EAR8B,KAQpBC,EARoB,OASf3R,mBAAS,IATM,mBAS9BqC,EAT8B,KASzBC,EATyB,OAUXtC,mBAAS,IAVE,mBAU9B4R,EAV8B,KAUvBW,EAVuB,KAW/BlT,EAAQnB,YAAH,MA2BX,OAAKgB,EAIH,kBAAC,IAAD,CACEG,MAAOA,EACPC,UAAW,CACTqR,YACAW,SACAE,SACAE,YAEFhP,YAAa,SAAClD,GACZ+S,EAAS/S,EAAKgT,kBAEhBzP,QAAS,SAACV,GACJA,EAAIW,eACNV,EACED,EAAIW,cAAcC,KAAI,SAACzB,GACrB,OAAOA,EAAM0B,YAIfb,EAAIc,cACNb,EAAOD,EAAIc,aAAaD,YAI3B,YAAkB,IAAfE,EAAc,EAAdA,QAIF,OAHIA,GACFd,EAAO,IAGP,kBAAC,GAAD,iBACMvC,EADN,CAEEuR,OAAQA,EACRC,UAAWA,EACXC,OAAQA,EACRC,UAAWA,EACXC,SAAUA,EACVC,YAAaA,EACbC,MAAOA,EACPxO,QAASA,EACT5B,MAAOa,QA1CR,kBAAC,IAAD,CAAUG,GAAG,OCOTiQ,GAnDI,SAAC1S,GAAW,IAE3BiS,EAOEjS,EAPFiS,WACAU,EAME3S,EANF2S,cACAC,EAKE5S,EALF4S,SACAZ,EAIEhS,EAJFgS,QACAa,EAGE7S,EAHF6S,WACAxP,EAEErD,EAFFqD,QACA5B,EACEzB,EADFyB,MAEF,OACE,yBAAKf,UAAU,SACb,2BAAOA,UAAU,SAAjB,YACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,WACZC,MAAOoR,EACPnR,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3B8R,EAAc9R,OAIpB,yBAAKH,UAAS,iBAAY2C,EAAU,aAAe,KACjD,4BACExC,MAAOmR,EACPlR,SAAU,SAACC,GAAW,IAAD,EACgBA,EAAMC,OAAjCH,EADW,EACXA,MAAOyE,EADI,EACJA,gBACfuN,EAAWhS,GACX8R,EAAcrN,EAAgB,GAAGC,aAGnC,4BAAQ1E,MAAM,GAAGQ,UAAQ,GAAzB,eAGCuR,EAAS1P,KAAI,SAAC4P,EAAS1O,GACtB,OACE,4BAAQA,IAAKA,EAAKvD,MAAOiS,EAAQd,SAC9Bc,EAAQb,iBAMnB,uBAAGvR,UAAU,kBAAkBe,GAAgB,MCKtCsR,GAnDO,SAAC/S,GAAW,IAE9BmS,EAOEnS,EAPFmS,eACAa,EAMEhT,EANFgT,kBACAC,EAKEjT,EALFiT,YACAf,EAIElS,EAJFkS,WACAgB,EAGElT,EAHFkT,cACA7P,EAEErD,EAFFqD,QACA5B,EACEzB,EADFyB,MAEF,OACE,yBAAKf,UAAU,SACb,2BAAOA,UAAU,SAAjB,gBACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,eACZC,MAAOsR,EACPrR,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BmS,EAAkBnS,OAIxB,yBAAKH,UAAS,iBAAY2C,EAAU,aAAe,KACjD,4BACExC,MAAOqR,EACPpR,SAAU,SAACC,GAAW,IAAD,EACgBA,EAAMC,OAAjCH,EADW,EACXA,MAAOyE,EADI,EACJA,gBACf4N,EAAcrS,GACdmS,EAAkB1N,EAAgB,GAAGC,aAGvC,4BAAQ1E,MAAM,GAAGQ,UAAQ,GAAzB,eAGC4R,EAAY/P,KAAI,SAACiQ,EAAY/O,GAC5B,OACE,4BAAQA,IAAKA,EAAKvD,MAAOsS,EAAWjB,YACjCiB,EAAWhB,qBAMtB,uBAAGzR,UAAU,kBAAkBe,GAAgB,MCqCtC2R,GA/Ea,SAACpT,GAAW,IAAD,EACLC,mBAAS,IADJ,mBAC9B2S,EAD8B,KACpBS,EADoB,OAECpT,mBAAS,IAFV,mBAE9BgT,EAF8B,KAEjBK,EAFiB,KAG7BtB,EAAmDhS,EAAnDgS,QAASa,EAA0C7S,EAA1C6S,WAAYX,EAA8BlS,EAA9BkS,WAAYgB,EAAkBlT,EAAlBkT,cAHJ,EAIDjT,mBAClCD,EAAMgS,QAAUhS,EAAMgS,QAAQC,WAAa,IALR,mBAI9BA,EAJ8B,KAIlBU,EAJkB,OAOO1S,mBAC1CD,EAAMkS,WAAalS,EAAMkS,WAAWC,eAAiB,IARlB,mBAO9BA,EAP8B,KAOda,EAPc,KAUrC,OACE,yBAAKtS,UAAU,uBACb,kBAAC,IAAD,CACEpB,MAAOd,EACPe,UAAW,CACT0S,WAAYA,GAA0B,OAGvC,YAAgC,IAA7B5O,EAA4B,EAA5BA,QAASuC,EAAmB,EAAnBA,OAAQnG,EAAW,EAAXA,KAInB,OAHK4D,GAAYuC,GACfyN,EAAY5T,EAAK8T,UAGjB,yBAAK7S,UAAU,+BACb,kBAAC,GAAD,CACEuR,WAAYA,EACZU,cAAeA,EACfC,SAAUA,EACVvP,QAASA,EACT5B,MACEmE,EACIA,EAAO3C,cAAcC,KAAI,SAACzB,GACxB,OAAOA,EAAM0B,WAEf,KAEN6O,QAASA,EACTa,WAAYA,QAMtB,kBAAC,IAAD,CACEvT,MAAOb,EACPc,UAAW,CACT0S,WAAYA,GAA0B,IACtCE,eAAgBA,GAAkC,OAGnD,YAAgC,IAA7B9O,EAA4B,EAA5BA,QAASuC,EAAmB,EAAnBA,OAAQnG,EAAW,EAAXA,KAInB,OAHK4D,GAAYuC,GACf0N,EAAe7T,EAAK+T,aAGpB,yBAAK9S,UAAU,+BACb,kBAAC,GAAD,CACEyR,eAAgBA,EAChBa,kBAAmBA,EACnBC,YAAaA,EACb5P,QAASA,EACT5B,MACEmE,EACIA,EAAO3C,cAAcC,KAAI,SAACzB,GACxB,OAAOA,EAAM0B,WAEf,KAEN+O,WAAYA,EACZgB,cAAeA,UC4HhBO,GAnMI,SAACzT,GAAW,IAE3BqD,EAKErD,EALFqD,QACA5B,EAIEzB,EAJFyB,MACAhC,EAGEO,EAHFP,KACAiU,EAEE1T,EAFF0T,OAGI9C,EADF5Q,EADFkB,MAASkQ,OAEcjN,GARG,EASElE,mBAAS,IATX,mBASrB+R,EATqB,KASZa,EATY,OAUQ5S,mBAAS,IAVjB,mBAUrBiS,EAVqB,KAUTgB,EAVS,OAWNjT,mBAAS,IAXH,mBAWrB0T,EAXqB,KAWhBC,EAXgB,OAYN3T,mBAAS,IAZH,mBAYrB4T,EAZqB,KAYhBC,EAZgB,OAaF7T,mBAAS,IAbP,mBAarB8T,EAbqB,KAadC,EAbc,OAcY/T,mBAAS,IAdrB,mBAcrBgU,EAdqB,KAcPC,EAdO,OAecjU,mBAAS,eAfvB,mBAerBkU,EAfqB,KAeNC,EAfM,OAgB8BnU,oBAAS,GAhBvC,mBAgBrBoU,EAhBqB,KAgBEC,EAhBF,KA+B5B,OACE,6BAAS5T,UAAU,mCACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,+BACb,wBAAIA,UAAU,SAAd,wBAEF,kBAAC,GAAD,CACEsR,QAASA,EACTa,WAAYA,EACZX,WAAYA,EACZgB,cAAeA,IAEjB,yBAAKxS,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,OACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,MACZC,MAAO8S,EACP7S,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3B+S,EAAO/S,SAMjB,yBAAKH,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,OACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,MACZC,MAAOgT,EACP/S,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BiT,EAAOjT,SAMjB,yBAAKH,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,SACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,QACZC,MAAOkT,EACPjT,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BmT,EAASnT,UAOrB,yBAAKH,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,gBACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,eACZC,MAAOoT,EACPnT,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BqT,EAAgBrT,SAM1B,yBAAKH,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,iBACA,yBAAKA,UAAU,UACb,4BACEG,MAAOsT,EACPrT,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BuT,EAAiBvT,KAGnB,4BAAQA,MAAM,eAAd,eACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,WAAd,eAKR,yBAAKH,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,yBACA,yBAAKA,UAAU,UACb,4BACEG,MAAOwT,EACPvT,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3ByT,EAAmC,SAAVzT,KAG3B,4BAAQA,OAAO,GAAf,OACA,4BAAQA,OAAO,GAAf,WAMV,yBAAKH,UAAU,uBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,WACb,4BACEA,UAAS,4BAAuB2C,EAAU,aAAe,IACzD/B,QAAS,SAACP,GACRA,EAAMQ,iBA1IpBmS,EAAO,CACL9C,YACAoB,UACAE,aACAyB,MACAE,MACAE,QACAE,eACAE,gBACAE,2BAoIUhQ,MAAO,CAAEC,OAAQ,WANnB,WAYF,yBAAK5D,UAAU,+CACb,wBAAIA,UAAU,+CACXjB,EAAI,UACEA,EAAK8U,kBAAkBhD,OADzB,wBAED,IAEL9R,EACC,kBAAC,IAAD,CACEiB,UAAU,oBACV+B,GAAIzC,EAAMkB,MAAMoR,IAAIkC,QAClB,SADE,eAEM/U,EAAK8U,kBAAkBhD,UAJnC,cAUA,IAGJ,uBAAG7Q,UAAU,8CACVe,GAAgB,S,2zCCvL/B,IAuEegT,GAvEa,SAACzU,GAAW,IAAD,EACfC,mBAAS,IADM,mBAC9BqC,EAD8B,KACzBC,EADyB,KAE7BpD,EAAgBqD,qBAAWd,GAA3BvC,YACFuD,EAAWvE,YAAH,MA6Bd,OAAKgB,GAAoC,wBAArBA,EAAY0E,KAI9B,kBAAC,IAAD,CACEnB,SAAUA,EACVM,QAAS,SAACvB,GACJA,GAASA,EAAMwB,cACjBV,EACEd,EAAMwB,cAAcC,KAAI,SAACkL,GACvB,OAAOA,EAAKjL,YAGP1B,GAASA,EAAM2B,cACxBb,EAAOd,EAAM2B,aAAaD,YAI7B,SAACuR,EAAD,GAAyC,IAA5BrR,EAA2B,EAA3BA,QAAgB5D,GAAW,EAAlBgC,MAAkB,EAAXhC,MAC5B,OACE,kBAAC,GAAD,iBACMO,EADN,CAEEqD,QAASA,EACT5B,MAAOa,EACPoR,OAAQ,SAACjU,GACPiV,EAAS,CACPnV,UAAU,MACLE,MAITA,KAAMA,QA9BP,kBAAC,IAAD,CAAUgD,GAAG,OCjBTkS,GArBM,SAAC,GAAkB,IAAhB9K,EAAe,EAAfA,SACtB,OACE,yBAAKnJ,UAAU,QACb,4BAAQA,UAAU,eAChB,uBAAGA,UAAU,qBAAb,yBAEF,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,WACb,uBAAGA,UAAU,cAAcmJ,EAASxH,MACpC,uBAAG3B,UAAU,iBACX,2CADF,IAC2B,6BAD3B,IACmCmJ,EAASxB,QAC1C,6BACCwB,EAAS+K,SAHZ,KAGwB/K,EAAS3D,QAAQH,OAHzC,IAGkD,IAC/C8D,EAAS5E,QAAQQ,iBCqKfoP,GA7KE,SAAC7U,GAAW,IACnByB,EAAgBzB,EAAhByB,MAAOhC,EAASO,EAATP,KACPN,EAAgBqD,qBAAWd,GAA3BvC,YACFiT,EAAY3S,EACd6P,KAAO7P,EAAK2S,WAAW5C,OAAO,iCAC9B,KACE6C,EAAY5S,EACd6P,KAAO7P,EAAK4S,WAAW7C,OAAO,iCAC9B,KACEsB,EAAerR,EACjB6P,KAAO7P,EAAKqV,oBAAoBhE,cAActB,OAC5C,iCAEF,KACI4B,EAAWpR,EAAMkB,MAAjBkQ,OACR,OACE,6BACE,6BAAS1Q,UAAU,mCACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,qBACb,wBAAIA,UAAU,SAAd,kBAGJ,uBAAGA,UAAU,4BAA4Be,GAAgB,IACxDhC,EACC,6BACE,yBAAKiB,UAAU,+BACS,wBAArBvB,EAAY0E,KACX,kBAAC,IAAD,CACEnD,UAAU,oBACV+B,GAAE,mBAAc2O,EAAOjN,GAArB,wBAAuCiN,EAAO2D,KAA9C,YAFJ,cAME,MAEN,yBAAKrU,UAAU,uBACb,yBAAKA,UAAU,+BACb,6BAASA,UAAU,SACjB,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,UAAU2D,MAAO,CAAE0K,QAAS,SACzC,2BACE,2CADF,KAC6BtP,EAAK8R,OADlC,IAC0C,6BACxC,8CAFF,KAEgCa,EAFhC,IAE2C,6BACzC,8CAHF,KAGgCC,EAHhC,IAG2C,6BACzC,gDAJF,KAIkC5S,EAAKsS,WAAY,IACjD,6BACA,iDANF,KAMmCtS,EAAKwU,aAAc,IACpD,6BACA,2DARF,IAQ4C,IACzCxU,EAAK4U,sBAAwB,MAAQ,KATxC,IAS8C,6BAC5C,kDAVF,KAUoC5U,EAAK0U,cACvC,kCAMV,yBAAKzT,UAAU,+BACb,6BAASA,UAAU,SACjB,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,UAAU2D,MAAO,CAAE0K,QAAS,SACzC,2BACE,uCADF,KACyBtP,EAAKkU,IAD9B,IACmC,6BACjC,uCAFF,KAEyBlU,EAAKoU,IAF9B,IAEmC,6BACjC,yCAHF,KAG2BpU,EAAKsU,MAHhC,IAGuC,6BACrC,4CAJF,KAI8BtU,EAAKuS,QAAQC,WAAY,IACrD,6BACA,gDANF,IAMiC,IAC9BxS,EAAKyS,WAAWC,eAPnB,IAOmC,mCAO7C,6BACA,yBAAKzR,UAAU,YAAY2D,MAAO,CAAE0K,QAAS,SAC3C,yBAAKrO,UAAU,qBACb,wBAAIA,UAAU,cAAd,sCAKJ,yBAAKA,UAAU,uBACb,yBACEA,UAAU,8BACV2D,MAAO,CAAE0K,QAAS,SAElB,kBAAC,GAAD,CAAU7P,KAAMO,EAAKqV,oBAAoB5V,QAE3C,yBAAKwB,UAAU,+BACb,6BAASA,UAAU,SACjB,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,UAAU2D,MAAO,CAAE0K,QAAS,SACzC,2BACE,2DADF,IAC4C,IACzCtP,EAAKqV,oBAAoBE,KAF5B,IAEkC,6BAChC,yCAHF,IAG0B,IACvBvV,EAAKqV,oBAAoBrK,MAJ5B,IAImC,6BACjC,0CALF,IAK2B,IACxBhL,EAAKqV,oBAAoBvK,OAN5B,IAMoC,6BAClC,2CAPF,IAO4B,IACzB9K,EAAKqV,oBAAoBzM,QAR5B,IAQqC,6BACnC,kDATF,IASmC,IAChC5I,EAAKqV,oBAAoBzK,cAV5B,IAU2C,6BACzC,iDAXF,KAWmCyG,EAXnC,IAWiD,8BAEjD,kBAAC,GAAD,CACEjH,SAAUpK,EAAKqV,oBAAoBjL,gBAO/C,6BACA,yBAAKnJ,UAAU,uBACb,yBACEA,UAAU,8BACV2D,MAAO,CAAE0K,QAAS,SAElB,yBAAKrO,UAAU,+BACb,wBAAIA,UAAU,cAAd,mBACA,yBAAK2D,MAAO,CAAEC,OAAQ,WACpB,kBAAC,IAAD,CACE5D,UAAU,oBACV+B,GAAE,mBAAc2O,EAAOjN,GAArB,8BAA6CiN,EAAO2D,KAApD,oBAFJ,iBAOF,yBAAK1Q,MAAO,CAAEC,OAAQ,WACE,wBAArBnF,EAAY0E,KACX,kBAAC,IAAD,CACEnD,UAAU,oBACV+B,GAAE,mBAAc2O,EAAOjN,GAArB,8BAA6CiN,EAAO2D,KAApD,2BAFJ,iBAME,QAIV,6BACsB,wBAArB5V,EAAY0E,KACX,yBACEnD,UAAU,8BACV2D,MAAO,CAAE0K,QAAS,SAElB,yBAAKrO,UAAU,+BACb,wBAAIA,UAAU,cAAd,0BACA,yBAAK2D,MAAO,CAAEC,OAAQ,WACpB,kBAAC,IAAD,CACE5D,UAAU,oBACV+B,GAAE,mBAAc2O,EAAOjN,GAArB,8BAA6CiN,EAAO2D,KAApD,mBAFJ,0BASJ,OAGN,S,mrCCrKd,IA6GeE,GA7GW,SAACjV,GAAW,IAAD,EACbC,mBAAS,IADI,mBAC5BqC,EAD4B,KACvBC,EADuB,KAE3BpD,EAAgBqD,qBAAWd,GAA3BvC,YAEGiS,EACPpR,EADFkB,MAASkQ,OAELR,EAAYQ,EAAOjN,GACnBoN,EAASH,EAAO2D,KAPa,EAQT9U,mBAAS,IARA,mBAQ5B4R,EAR4B,KAQrBW,EARqB,KAS7BlT,EAAQnB,YAAH,MAwDX,OAAKgB,EAIH,kBAAC,IAAD,CACEG,MAAOA,EACPC,UAAW,CACTqR,YACAW,UAEF5O,YAAa,SAAClD,GACZ+S,EAAS/S,EAAKgT,kBAEhBzP,QAAS,SAACV,GACJA,EAAIW,eACNV,EACED,EAAIW,cAAcC,KAAI,SAACzB,GACrB,OAAOA,EAAM0B,YAIfb,EAAIc,cACNb,EAAOD,EAAIc,aAAaD,YAI3B,YAAkB,IAAfE,EAAc,EAAdA,QACF,OAAIA,GACFd,EAAO,IACA,kBAAC,GAAD,OAGP,kBAAC,GAAD,iBACMvC,EADN,CAEEP,KAAMoS,EAAM,GACZxO,QAASA,EACT5B,MAAOa,QAnCR,kBAAC,IAAD,CAAUG,GAAG,OC+ETyS,GArJM,SAAClV,GAAW,IAE7BmV,EAUEnV,EAVFmV,SACAC,EASEpV,EATFoV,YACA3D,EAQEzR,EARFyR,OACAC,EAOE1R,EAPF0R,UACAC,EAME3R,EANF2R,SACAC,EAKE5R,EALF4R,YACAnQ,EAIEzB,EAJFyB,MACA4B,EAGErD,EAHFqD,QACAgS,EAEErV,EAFFqV,QACAnU,EACElB,EADFkB,MAEF,OACE,6BAASR,UAAU,0BACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,+BACb,wBAAIA,UAAU,SAAd,yBACA,uBAAGA,UAAU,4BAA4Be,GAAgB,IACxD4B,EACC,4BAAQ3C,UAAU,gCAAlB,WAEA,IAGJ,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,aACA,yBAAKA,UAAU,0BACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,YACZC,MAAOsU,EACPrU,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BuU,EAAYvU,MAGhB,0BAAMH,UAAU,yBACd,uBAAGA,UAAU,aAAawD,cAAY,cAMhD,yBAAKxD,UAAU,uBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,aACA,yBAAKA,UAAU,0BACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,YACZC,MAAO8Q,EACP7Q,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3B+Q,EAAY/Q,MAGhB,0BAAMH,UAAU,yBACd,uBAAGA,UAAU,iBAAiBwD,cAAY,aAKlD,yBAAKxD,UAAU,iCACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,WACA,yBAAKA,UAAU,0BACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,UACZC,MAAO4Q,EACP3Q,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3B6Q,EAAU7Q,MAGd,0BAAMH,UAAU,yBACd,uBAAGA,UAAU,iBAAiBwD,cAAY,cAMpD,wBACExD,UAAU,iBACV2D,MAAO,CAAEwK,gBAAiB,aAE5B,yBAAKnO,UAAU,aACZ2U,EAAQnS,KAAI,SAACoS,EAAYlR,GACxB,OACE,6BACEA,IAAKA,EACL1D,UAAU,QACV2D,MAAO,CACLyK,OAAQ,oBACRC,QAAS,OACTC,aAAc,SAGhB,yBAAKtO,UAAU,iBACb,yBAAKA,UAAU,WACb,2BACE,+CACC4U,EAAWH,SAFd,IAEyB,IACvB,+BACE,+CADF,IACgCG,EAAWC,SAE3C,6BANF,cAOc,IACXjG,KAAOgG,EAAWlD,WAAW5C,OAC5B,iCAEF,6BACA,6BACA,kDACC8F,EAAWP,KAAK/C,QAAQC,WAd3B,KAcyC,IACtCqD,EAAWP,KAAK7C,WAAWC,eAC5B,6BAhBF,OAkBE,+BACE,kDAAgC,IAC/BmD,EAAWP,KAAKhD,eAKzB,yBAAKrR,UAAU,eACb,kBAAC,IAAD,CACE+B,GAAE,UAAKvB,EAAMoR,IAAX,iBAAuBgD,EAAWH,UACpCzU,UAAU,qBAFZ,wB,unBClIlB,IA4Fe8U,GA5Fe,SAACxV,GAAW,IAChCb,EAAgBqD,qBAAWd,GAA3BvC,YAIFoS,EADFvR,EADFkB,MAASkQ,OAEW2D,KALiB,EAMP9U,mBAAS,IANF,mBAMhCkV,EANgC,KAMtBC,EANsB,OAOXnV,mBAAS,IAPE,mBAOhCwR,EAPgC,KAOxBC,EAPwB,OAQPzR,mBAAS,IARF,mBAQhC0R,EARgC,KAQtBC,EARsB,OASjB3R,mBAAS,IATQ,mBAShCqC,EATgC,KAS3BC,EAT2B,OAUTtC,mBAAS,IAVA,mBAUhCoV,EAVgC,KAUvBI,EAVuB,KAWjCnW,EAAQnB,YAAH,MA8BX,OAAKgB,EAIH,kBAAC,IAAD,CACEG,MAAOA,EACPC,UAAW,CACTgS,SACA4D,WACA1D,SACAE,YAEFhP,YAAa,SAAClD,GACZgW,EAAWhW,EAAKiW,oBAElB1S,QAAS,SAACV,GACJA,EAAIW,eACNV,EACED,EAAIW,cAAcC,KAAI,SAACzB,GACrB,OAAOA,EAAM0B,YAIfb,EAAIc,cACNb,EAAOD,EAAIc,aAAaD,YAI3B,YAAkB,IAAfE,EAAc,EAAdA,QAIF,OAHIA,GACFd,EAAO,IAGP,kBAAC,GAAD,iBACMvC,EADN,CAEEmV,SAAUA,EACVC,YAAaA,EACb3D,OAAQA,EACRC,UAAWA,EACXC,SAAUA,EACVC,YAAaA,EACbyD,QAASA,EACThS,QAASA,EACT5B,MAAOa,QA1CR,kBAAC,IAAD,CAAUG,GAAG,OCiUTkT,GA/WM,SAAC3V,GAAW,IAE7BqD,EAKErD,EALFqD,QACA5B,EAIEzB,EAJFyB,MACAhC,EAGEO,EAHFP,KACAiU,EAEE1T,EAFF0T,OAGInC,EADFvR,EADFkB,MAASkQ,OAEW2D,KARQ,EASI9U,mBAAS,IATb,mBASvB2V,EATuB,KASZC,EATY,OAUI5V,mBAAS,IAVb,mBAUvB6V,EAVuB,KAUZC,EAVY,OAWV9V,mBAAS,IAXC,mBAWvB+V,EAXuB,KAWnBC,EAXmB,OAYoBhW,mBAAS,IAZ7B,mBAYvBiW,EAZuB,KAYJC,EAZI,OAaFlW,mBAAS,GAbP,mBAavBmW,EAbuB,KAafC,EAbe,OAcFpW,mBAAS,GAdP,mBAcvBqW,EAduB,KAcfC,EAde,OAeNtW,mBAAS,GAfH,mBAevBuW,EAfuB,KAejBC,EAfiB,OAgBNxW,mBAAS,GAhBH,mBAgBvByW,EAhBuB,KAgBjBC,EAhBiB,OAiBE1W,mBAAS,GAjBX,mBAiBvB2W,EAjBuB,KAiBbC,EAjBa,OAkBE5W,mBAAS,GAlBX,mBAkBvB6W,EAlBuB,KAkBbC,EAlBa,OAmB0B9W,mBAAS,IAnBnC,mBAmBvB+W,EAnBuB,KAmBDC,EAnBC,QAoBMhX,mBAAS,IApBf,qBAoBvBiX,GApBuB,MAoBXC,GApBW,SAqBFlX,mBAAS,IArBP,qBAqBvBmX,GArBuB,MAqBfC,GArBe,SAsBJpX,mBAAS,IAtBL,qBAsBvBX,GAtBuB,MAsBhBgY,GAtBgB,SAuB0BrX,mBAAS,IAvBnC,qBAuBvBsX,GAvBuB,MAuBDC,GAvBC,MA4C9B,OACE,6BAAS9W,UAAU,mCACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,+BACb,wBAAIA,UAAU,SAAd,0BAEF,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,cACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,aACZC,MAAO+U,EACP9U,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BgV,EAAahV,SAMvB,yBAAKH,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,aACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,YACZC,MAAOiV,EACPhV,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BkV,EAAalV,SAMvB,yBAAKH,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,MACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,KACZC,MAAOmV,EACPlV,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BoV,EAAMpV,UAOlB,yBAAKH,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,UACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,SACLC,YAAY,SACZ6W,IAAI,IACJ5W,MAAOuV,EACPtV,SAAU,SAACC,GACT,IAAIF,EAAQ6W,SAAS3W,EAAMC,OAAOH,OAClCwV,EAAUxV,SAMpB,yBAAKH,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,UACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,SACLC,YAAY,SACZ6W,IAAI,IACJ5W,MAAOyV,EACPxV,SAAU,SAACC,GACT,IAAIF,EAAQ6W,SAAS3W,EAAMC,OAAOH,OAClC0V,EAAU1V,UAOtB,yBAAKH,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,QACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,SACLC,YAAY,OACZ6W,IAAI,IACJ5W,MAAO2V,EACP1V,SAAU,SAACC,GACT,IAAIF,EAAQ6W,SAAS3W,EAAMC,OAAOH,OAClC4V,EAAQ5V,SAMlB,yBAAKH,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,QACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,SACLC,YAAY,OACZ6W,IAAI,IACJ5W,MAAO6V,EACP5V,SAAU,SAACC,GACT,IAAIF,EAAQ6W,SAAS3W,EAAMC,OAAOH,OAClC8V,EAAQ9V,UAOpB,yBAAKH,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,YACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,SACLC,YAAY,WACZ6W,IAAI,IACJ5W,MAAO+V,EACP9V,SAAU,SAACC,GACT,IAAIF,EAAQ6W,SAAS3W,EAAMC,OAAOH,OAClCgW,EAAYhW,SAMtB,yBAAKH,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,YACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,SACLC,YAAY,WACZ6W,IAAI,IACJ5W,MAAOiW,EACPhW,SAAU,SAACC,GACT,IAAIF,EAAQ6W,SAAS3W,EAAMC,OAAOH,OAClCkW,EAAYlW,UAOxB,yBAAKH,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,sBACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,qBACZC,MAAOqV,EACPpV,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BsV,EAAqBtV,SAM/B,yBAAKH,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,0BACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,yBACZC,MAAOmW,EACPlW,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BoW,EAAwBpW,SAMlC,yBAAKH,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,cACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,aACZC,MAAOqW,GACPpW,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BsW,GAActW,UAO1B,yBAAKH,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,UACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,SACZC,MAAOuW,GACPtW,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BwW,GAAUxW,SAMpB,yBAAKH,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,SACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,QACZC,MAAOvB,GACPwB,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3ByW,GAASzW,SAMnB,yBAAKH,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,0BACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,yBACZC,MAAO0W,GACPzW,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3B2W,GAAwB3W,UAOpC,yBAAKH,UAAU,uBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,WACb,4BACEA,UAAS,4BAAuB2C,EAAU,aAAe,IACzD/B,QAAS,SAACP,GACRA,EAAMQ,iBAhTpBmS,EAAO,CACLqB,KAAMxD,EACNqE,UAAWA,EACXE,UAAWA,EACXE,GAAIA,EACJE,kBAAmBA,EACnBE,OAAQA,EACRE,OAAQA,EACRE,KAAMA,EACNE,KAAMA,EACNE,SAAUA,EACVE,SAAUA,EACVE,qBAAsBA,EACtBE,WAAYA,GACZE,OAAQA,GACR9X,MAAOA,GACPiY,qBAAsBA,MAmSZlT,MAAO,CAAEC,OAAQ,WANnB,WAWF,yBAAK5D,UAAU,+CACb,wBAAIA,UAAU,+CACXjB,EAAI,UACEA,EAAKkY,oBAAoBxC,SAD3B,wBAED,IAEL1V,EACC,kBAAC,IAAD,CACEiB,UAAU,oBACV+B,GAAIzC,EAAMkB,MAAMoR,IAAIkC,QAClB,SADE,eAEM/U,EAAKkY,oBAAoBxC,YAJrC,gBAUA,IAGJ,uBAAGzU,UAAU,8CACVe,GAAgB,S,mrDClW/B,IAqFemW,GArFe,SAAC5X,GAAW,IAAD,EACjBC,mBAAS,IADQ,mBAChCqC,EADgC,KAC3BC,EAD2B,KAE/BpD,EAAgBqD,qBAAWd,GAA3BvC,YACFuD,EAAWvE,YAAH,MA2Cd,OAAKgB,GAAoC,wBAArBA,EAAY0E,KAI9B,kBAAC,IAAD,CACEnB,SAAUA,EACVM,QAAS,SAACvB,GACJA,GAASA,EAAMwB,cACjBV,EACEd,EAAMwB,cAAcC,KAAI,SAACkL,GACvB,OAAOA,EAAKjL,YAGP1B,GAASA,EAAM2B,cACxBb,EAAOd,EAAM2B,aAAaD,YAI7B,SAACuR,EAAD,GAAyC,IAA5BrR,EAA2B,EAA3BA,QAAgB5D,GAAW,EAAlBgC,MAAkB,EAAXhC,MAC5B,OACE,kBAAC,GAAD,iBACMO,EADN,CAEEqD,QAASA,EACT5B,MAAOa,EACPoR,OAAQ,SAACjU,GACPiV,EAAS,CACPnV,UAAU,MACLE,MAITA,KAAMA,QA9BP,kBAAC,IAAD,CAAUgD,GAAG,OC2HToV,GA1KI,SAAC7X,GAAW,IACrByB,EAAgBzB,EAAhByB,MAAOhC,EAASO,EAATP,KACPN,EAAgBqD,qBAAWd,GAA3BvC,YAEGiS,EACPpR,EADFkB,MAASkQ,OAELN,EAAerR,EACjB6P,KAAO7P,EAAKqV,oBAAoBhE,cAActB,OAC5C,iCAEF,KACJ,OACE,6BACE,6BAAS9O,UAAU,mCACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,qBACb,wBAAIA,UAAU,SAAd,oBAGJ,uBAAGA,UAAU,4BAA4Be,GAAgB,IACxDhC,EACC,6BACE,yBAAKiB,UAAU,+BACS,wBAArBvB,EAAY0E,KACX,kBAAC,IAAD,CACEnD,UAAU,oBACV+B,GAAE,mBAAc2O,EAAOjN,GAArB,8BAA6CiN,EAAO2D,KAApD,0BAA0E3D,EAAO0G,OAAjF,YAFJ,gBAME,MAEN,yBAAKpX,UAAU,uBACb,yBAAKA,UAAU,+BACb,6BAASA,UAAU,SACjB,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,UAAU2D,MAAO,CAAE0K,QAAS,SACzC,2BACE,6CADF,KAC+BtP,EAAK0V,SADpC,IAC8C,6BAC5C,4CAFF,KAE8B1V,EAAK8V,QAFnC,IAE4C,6BAC1C,8CAHF,IAG+B,IAC5BjG,KAAO7P,EAAK2S,WAAW5C,OAAO,sBAAuB,IACtD,8CALF,KAKgC/P,EAAKmW,UALrC,IAKgD,6BAC9C,6CANF,KAM+BnW,EAAKqW,UANpC,IAM+C,6BAC7C,sCAPF,KAOwBrW,EAAKuW,GAP7B,IAOiC,6BAC/B,sDARF,IAQuC,IACpCvW,EAAKyW,kBATR,IAS2B,6BACzB,0DAVF,IAU2C,IACxCzW,EAAKuX,qBAXR,IAW8B,6BAC5B,0DAZF,IAY2C,IACxCvX,EAAK8X,qBAbR,IAa8B,6BAC5B,kCAMV,yBAAK7W,UAAU,+BACb,6BAASA,UAAU,SACjB,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,UAAU2D,MAAO,CAAE0K,QAAS,SACzC,2BACE,0CADF,KAC4BtP,EAAK2W,OADjC,IACyC,6BACvC,0CAFF,KAE4B3W,EAAK6W,OAFjC,IAEyC,6BACvC,wCAHF,KAG0B7W,EAAK+W,KAH/B,IAGqC,6BACnC,wCAJF,KAI0B/W,EAAKiX,KAJ/B,IAIqC,6BACnC,4CALF,KAK8BjX,EAAKmX,SALnC,IAK6C,6BAC3C,4CANF,KAM8BnX,EAAKqX,SANnC,IAM6C,6BAC3C,8CAPF,KAOgCrX,EAAKyX,WAPrC,IAOiD,6BAC/C,0CARF,KAQ4BzX,EAAK2X,OARjC,IAQyC,6BACvC,yCATF,KAS2B3X,EAAKH,MAThC,IASuC,mCAOjD,6BACA,yBAAKoB,UAAU,YAAY2D,MAAO,CAAE0K,QAAS,SAC3C,yBAAKrO,UAAU,qBACb,wBAAIA,UAAU,cAAd,8BAGJ,yBAAKA,UAAU,uBACb,yBACEA,UAAU,8BACV2D,MAAO,CAAE0K,QAAS,SAElB,6BAASrO,UAAU,SACjB,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,UAAU2D,MAAO,CAAE0K,QAAS,SACzC,2BACE,4CADF,IAC6B,IAC3B,kBAAC,IAAD,CACEtM,GAAE,mBAAc2O,EAAOjN,GAArB,8BAA6CiN,EAAO2D,KAApD,MAEDtV,EAAKsV,KAAKxD,QACL,IACR,6BACA,4CARF,IAQ6B,IAC1B9R,EAAKsV,KAAK/C,QAAQC,WATrB,IASiC,6BAC/B,gDAVF,IAUiC,IAC9BxS,EAAKsV,KAAK7C,WAAWC,eAXxB,IAWwC,6BACtC,kDAZF,IAYmC,IAChC1S,EAAKsV,KAAKhD,WAbb,IAayB,6BACvB,8CAdF,IAc+B,IAC5BzC,KAAO7P,EAAKsV,KAAK3C,WAAW5C,OAC3B,iCACC,IACH,6BACA,8CAnBF,IAmB+B,IAC5BF,KAAO7P,EAAKsV,KAAK1C,WAAW7C,OAC3B,iCAEF,mCAOZ,6BACA,yBAAK9O,UAAU,YAAY2D,MAAO,CAAE0K,QAAS,SAC3C,yBAAKrO,UAAU,qBACb,wBAAIA,UAAU,cAAd,sCAKJ,yBAAKA,UAAU,uBACb,yBACEA,UAAU,8BACV2D,MAAO,CAAE0K,QAAS,SAElB,kBAAC,GAAD,CAAU7P,KAAMO,EAAKqV,oBAAoB5V,QAE3C,yBAAKwB,UAAU,+BACb,6BAASA,UAAU,SACjB,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,UAAU2D,MAAO,CAAE0K,QAAS,SACzC,2BACE,2DADF,IAC4C,IACzCtP,EAAKqV,oBAAoBE,KAF5B,IAEkC,6BAChC,yCAHF,IAG0B,IACvBvV,EAAKqV,oBAAoBrK,MAJ5B,IAImC,6BACjC,0CALF,IAK2B,IACxBhL,EAAKqV,oBAAoBvK,OAN5B,IAMoC,6BAClC,2CAPF,IAO4B,IACzB9K,EAAKqV,oBAAoBzM,QAR5B,IAQqC,6BACnC,kDATF,IASmC,IAChC5I,EAAKqV,oBAAoBzK,cAV5B,IAU2C,6BACzC,iDAXF,KAWmCyG,EAXnC,IAWiD,8BAEjD,kBAAC,GAAD,CACEjH,SAAUpK,EAAKqV,oBAAoBjL,iBAQ/C,S,46CClKd,IA0HekO,GA1Ha,SAAC/X,GAAW,IAAD,EACfC,mBAAS,IADM,mBAC9BqC,EAD8B,KACzBC,EADyB,KAE7BpD,EAAgBqD,qBAAWd,GAA3BvC,YAEGiS,EACPpR,EADFkB,MAASkQ,OAELG,EAASH,EAAO2D,KAChBI,EAAW/D,EAAO0G,OAPa,EAQP7X,mBAAS,IARF,mBAQ9BoV,EAR8B,KAQrBI,EARqB,KAS/BnW,EAAQnB,YAAH,MAqEX,OAAKgB,EAIH,kBAAC,IAAD,CACEG,MAAOA,EACPC,UAAW,CACT4V,WACA5D,UAEF5O,YAAa,SAAClD,GACZgW,EAAWhW,EAAKiW,oBAElB1S,QAAS,SAACV,GACJA,EAAIW,eACNV,EACED,EAAIW,cAAcC,KAAI,SAACzB,GACrB,OAAOA,EAAM0B,YAIfb,EAAIc,cACNb,EAAOD,EAAIc,aAAaD,YAI3B,YAAkB,IAAfE,EAAc,EAAdA,QACF,OAAIA,GACFd,EAAO,IACA,kBAAC,GAAD,OAGP,kBAAC,GAAD,iBACMvC,EADN,CAEEP,KAAM4V,EAAQ,GACdhS,QAASA,EACT5B,MAAOa,QAnCR,kBAAC,IAAD,CAAUG,GAAG,OCrDTuV,GA3BgB,SAAChY,GAAW,IACjCkB,EAAUlB,EAAVkB,MAER,OADwBsB,qBAAWd,GAA3BvC,YAKN,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEkM,OAAK,EACLC,KAAI,UAAKpK,EAAMoK,MACfC,UAAWiK,KAEb,kBAAC,IAAD,CACEnK,OAAK,EACLC,KAAI,UAAKpK,EAAMoK,KAAX,WACJC,UAAWqM,KAEb,kBAAC,IAAD,CACEvM,OAAK,EACLC,KAAI,UAAKpK,EAAMoK,KAAX,iBACJC,UAAWwM,MAjBR,kBAAC,IAAD,CAAUtV,GAAG,OCkETwV,GA3EH,SAACjY,GAAW,IACdiY,EAAgBjY,EAAhBiY,IAAK1G,EAAWvR,EAAXuR,OADQ,EAECtR,mBAAS,IAFV,mBAEdiY,EAFc,KAETC,EAFS,KAGfC,EAAcC,iBAAO,MAE3B,OACE,6BACE,0BACEhU,MAAO,CAAEiU,OAAQ,WACjBhX,QAAS,WACPiX,UAAUC,UAAUC,UAAUR,GAC9BE,EAAO,uBACPO,YAAW,WACTP,EAAO,MACN,OAGL,0BAAMzX,UAAU,QACd,uBAAGA,UAAU,gBAXjB,iBADF,eAiBE,0BACE2D,MAAO,CAAEiU,OAAQ,WACjBhX,QAAS,WACP,IAAMqX,EAAUC,SAASC,cAAc,KACjCC,EAAO,IAAIC,KAAK,CAACd,GAAM,CAC3BtX,KAAM,eAERgY,EAAQ1U,KAAO+U,IAAIC,gBAAgBH,GACnCH,EAAQO,SAAR,UAAsB3H,EAAtB,QACAqH,SAASO,KAAKC,YAAYT,GAC1BA,EAAQU,QACRlB,EAAO,mBACPO,YAAW,WACTP,EAAO,MACN,OAGL,0BAAMzX,UAAU,QACd,uBAAGA,UAAU,oBAlBjB,mBAsBA,yBAAKA,UAAU,SACb,yBAAKA,UAAU,WACb,8BACE2D,MAAO,CAAEiV,OAAQ,OAAQhB,OAAQ,WACjC5X,UAAU,mBACV6Y,KAAK,IACLC,KAAK,KACLnY,UAAQ,EACRoY,IAAKrB,EACLsB,aAAczB,MAInBC,EACC,yBACExX,UAAU,0BACV2D,MAAO,CACLkL,SAAU,QACVoK,OAAQ,OACRC,MAAO,OACPC,OAAQ,UAGT3B,GAED,OCmGK4B,GAtKY,SAAC9Z,GAAW,IAEnCqD,EAKErD,EALFqD,QACA5B,EAIEzB,EAJFyB,MACAhC,EAGEO,EAHFP,KACAiU,EAEE1T,EAFF0T,OACStC,EACPpR,EADFkB,MAASkQ,OANyB,EAQJnR,mBAAS,IARL,mBAQ7B8Z,EAR6B,KAQnBC,EARmB,KAYpC,OACE,6BAAStZ,UAAU,mCACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,+BACb,wBAAIA,UAAU,SAAd,iCAEF,yBAAKA,UAAU,sBAAsB2D,MAAO,CAAEC,OAAQ,WACpD,yBAAK5D,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,iBACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,gBACZC,MAAOkZ,EACPjZ,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BmZ,EAAYnZ,EAAM2T,QAAQ,IAAK,YAO3C,yBAAK9T,UAAU,uBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,WACb,4BACEA,UAAS,4BAAuB2C,EAAU,aAAe,IACzD/B,QAAS,SAACP,GACRA,EAAMQ,iBAjCpBmS,EAAOqG,IAoCK1V,MAAO,CAAEC,OAAQ,WANnB,WAYF,yBAAK5D,UAAU,+CACb,wBAAIA,UAAU,+CACXjB,EAAI,oCAAyC,KAGlD,uBAAGiB,UAAU,8CACVe,GAAgB,MAItBhC,EACC,6BACEiB,UAAU,QACV2D,MAAO,CACLyK,OAAQ,oBACRC,QAAS,OACTC,aAAc,SAGhB,yBAAKtO,UAAU,iBACb,yBAAKA,UAAU,WACb,2BACE,+CACA,kBAAC,IAAD,CACE+B,GAAE,mBAAc2O,EAAOjN,GAArB,8BAA6CiN,EAAO2D,KAApD,gCAAgF3D,EAAO0G,SAExFrY,EAAKwa,mBAAmBnC,OAAO3C,UALpC,IAOI,IACF,+BACE,8CAA4B,IAC3B1V,EAAKwa,mBAAmBnC,OAAOvC,SAElC,6BAZF,cAac,IACXjG,KAAO7P,EAAKwa,mBAAmBnC,OAAO1F,WAAW5C,OAChD,iCAEF,6BACA,6CACA,kBAAC,IAAD,CACE/M,GAAE,mBAAc2O,EAAOjN,GAArB,8BAA6CiN,EAAO2D,OAErDtV,EAAKwa,mBAAmBlF,KAAKxD,QAtBlC,IAwBI,IACF,+BACE,kDAAgC,IAC/B9R,EAAKwa,mBAAmBlF,KAAKhD,YAEhC,6BACA,6CACCtS,EAAKwa,mBAAmBlF,KAAK/C,QAAQC,WA/BxC,KA+BsD,IACnDxS,EAAKwa,mBAAmBlF,KAAK7C,WAAWC,eACzC,6BAjCF,cAkCc,IACX7C,KAAO7P,EAAKwa,mBAAmBlF,KAAK3C,WAAW5C,OAC9C,iCAEF,6BAtCF,mBAuCmB,IAChBF,KAAO7P,EAAKwa,mBAAmBlF,KAAK1C,WAAW7C,OAC9C,iCAEF,6BA3CF,QA8CA,2BACE,4CACC/P,EAAKwa,mBAAmBC,OAAOhb,KAAKqF,UAAW,IAC/C9E,EAAKwa,mBAAmBC,OAAOhb,KAAKsF,SAHvC,IAGkD,IAChD,sCACQ,yCAAuB,IAC7B,kBAAC,IAAD,CACE/B,GAAE,+BAA0BhD,EAAKwa,mBAAmBC,OAAOlF,OAE1DvV,EAAKwa,mBAAmBC,OAAOlF,OAGpC,6BACA,8CACCvV,EAAKwa,mBAAmBF,SAAS7a,KAAKqF,UAAW,IACjD9E,EAAKwa,mBAAmBF,SAAS7a,KAAKsF,SAfzC,IAeoD,IAClD,sCACQ,yCAAuB,IAC7B,kBAAC,IAAD,CACE/B,GAAE,+BAA0BhD,EAAKwa,mBAAmBF,SAAS/E,OAE5DvV,EAAKwa,mBAAmBF,SAAS/E,OAGtC,6BAxBF,aAyBa,IACV1F,KAAO7P,EAAKwa,mBAAmBE,UAAU3K,OACxC,iCAEF,6BA7BF,UAkCJ,yBAAK9O,UAAU,eACb,kBAAC,GAAD,CACEuX,IAAKxY,EAAKwa,mBAAmBhC,IAC7B1G,OAAQ9R,EAAKwa,mBAAmBlF,KAAKxD,WAIzC,Q,k4BC9JZ,IAyFe6I,GAzFqB,SAACpa,GAAW,IAAD,EACvBC,mBAAS,IADc,mBACtCqC,EADsC,KACjCC,EADiC,KAErCpD,EAAgBqD,qBAAWd,GAA3BvC,YAIFgW,EADFnV,EADFkB,MAASkQ,OAEa0G,OAClBpV,EAAWvE,YAAH,MA0Cd,OAAKgB,GAAoC,wBAArBA,EAAY0E,KAI9B,kBAAC,IAAD,CACEnB,SAAUA,EACVM,QAAS,SAACvB,GACJA,GAASA,EAAMwB,cACjBV,EACEd,EAAMwB,cAAcC,KAAI,SAACkL,GACvB,OAAOA,EAAKjL,YAGP1B,GAASA,EAAM2B,cACxBb,EAAOd,EAAM4Y,iBAAiBlX,YAIjC,SAACuR,EAAD,GAAyC,IAA5BrR,EAA2B,EAA3BA,QAAgB5D,GAAW,EAAlBgC,MAAkB,EAAXhC,MAC5B,OACE,kBAAC,GAAD,iBACMO,EADN,CAEEqD,QAASA,EACT5B,MAAOa,EACPoR,OAAQ,SAACqG,GACPrF,EAAS,CACPnV,UAAW,CACTuY,OAAQ3C,EACR4E,eAINta,KAAMA,QA/BP,kBAAC,IAAD,CAAUgD,GAAG,OCqJT6X,GAzMY,SAACta,GAAW,IAEnCmV,EAUEnV,EAVFmV,SACAC,EASEpV,EATFoV,YACA3D,EAQEzR,EARFyR,OACAC,EAOE1R,EAPF0R,UACAC,EAME3R,EANF2R,SACAC,EAKE5R,EALF4R,YACAnQ,EAIEzB,EAJFyB,MACA4B,EAGErD,EAHFqD,QACAgS,EAEErV,EAFFqV,QACSjE,EACPpR,EADFkB,MAASkQ,OAEX,OACE,6BAAS1Q,UAAU,0BACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,+BACb,wBAAIA,UAAU,SAAd,iCACA,uBAAGA,UAAU,4BAA4Be,GAAgB,IACxD4B,EACC,4BAAQ3C,UAAU,gCAAlB,WAEA,IAGJ,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,aACA,yBAAKA,UAAU,0BACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,YACZC,MAAOsU,EACPrU,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BuU,EAAYvU,MAGhB,0BAAMH,UAAU,yBACd,uBAAGA,UAAU,aAAawD,cAAY,cAMhD,yBAAKxD,UAAU,uBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,aACA,yBAAKA,UAAU,0BACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,YACZC,MAAO8Q,EACP7Q,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3B+Q,EAAY/Q,MAGhB,0BAAMH,UAAU,yBACd,uBAAGA,UAAU,iBAAiBwD,cAAY,aAKlD,yBAAKxD,UAAU,iCACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,WACA,yBAAKA,UAAU,0BACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,UACZC,MAAO4Q,EACP3Q,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3B6Q,EAAU7Q,MAGd,0BAAMH,UAAU,yBACd,uBAAGA,UAAU,iBAAiBwD,cAAY,cAMpD,wBACExD,UAAU,iBACV2D,MAAO,CAAEwK,gBAAiB,aAE5B,yBAAKnO,UAAU,aACZ2U,EAAQnS,KAAI,SAACoS,EAAYlR,GACxB,OACE,6BACEA,IAAKA,EACL1D,UAAU,QACV2D,MAAO,CACLyK,OAAQ,oBACRC,QAAS,OACTC,aAAc,SAGhB,yBAAKtO,UAAU,iBACb,yBAAKA,UAAU,WACb,2BACE,+CACA,kBAAC,IAAD,CACE+B,GAAE,mBAAc2O,EAAOjN,GAArB,8BAA6CiN,EAAO2D,KAApD,gCAAgF3D,EAAO0G,SAExFxC,EAAWwC,OAAO3C,UALvB,IAOI,IACF,+BACE,8CADF,IAC+BG,EAAWwC,OAAOvC,SAEjD,6BAXF,cAYc,IACXjG,KAAOgG,EAAWwC,OAAO1F,WAAW5C,OACnC,iCAEF,6BACA,6CACA,kBAAC,IAAD,CACE/M,GAAE,mBAAc2O,EAAOjN,GAArB,8BAA6CiN,EAAO2D,OAErDO,EAAWP,KAAKxD,QArBrB,IAuBI,IACF,+BACE,kDAAgC,IAC/B+D,EAAWP,KAAKhD,YAEnB,6BACA,6CACCuD,EAAWP,KAAK/C,QAAQC,WA9B3B,KA8ByC,IACtCqD,EAAWP,KAAK7C,WAAWC,eAC5B,6BAhCF,cAiCc,IACX7C,KAAOgG,EAAWP,KAAK3C,WAAW5C,OACjC,iCAEF,6BArCF,mBAsCmB,IAChBF,KAAOgG,EAAWP,KAAK1C,WAAW7C,OACjC,iCAEF,6BA1CF,QA6CA,2BACE,4CACC8F,EAAW4E,OAAOhb,KAAKqF,UAAW,IAClC+Q,EAAW4E,OAAOhb,KAAKsF,SAH1B,IAGqC,IACnC,sCACQ,yCAAuB,IAC7B,kBAAC,IAAD,CACE/B,GAAE,+BAA0B6S,EAAW4E,OAAOlF,OAE7CM,EAAW4E,OAAOlF,OAGvB,6BACA,8CACCM,EAAWyE,SAAS7a,KAAKqF,UAAW,IACpC+Q,EAAWyE,SAAS7a,KAAKsF,SAf5B,IAeuC,IACrC,sCACQ,yCAAuB,IAC7B,kBAAC,IAAD,CACE/B,GAAE,+BAA0B6S,EAAWyE,SAAS/E,OAE/CM,EAAWyE,SAAS/E,OAGzB,6BAxBF,aAyBa,IACV1F,KAAOgG,EAAW6E,UAAU3K,OAC3B,iCAEF,6BA7BF,UAkCJ,yBAAK9O,UAAU,eACb,kBAAC,GAAD,CACEuX,IAAK3C,EAAW2C,IAChB1G,OAAQ+D,EAAWP,KAAKxD,kB,ogCC3L5C,IAkHegJ,GAlHqB,SAACva,GAAW,IACtCb,EAAgBqD,qBAAWd,GAA3BvC,YAIFoS,EADFvR,EADFkB,MAASkQ,OAEW2D,KALuB,EAMb9U,mBAAS,IANI,mBAMtCkV,EANsC,KAM5BC,EAN4B,OAOjBnV,mBAAS,IAPQ,mBAOtCwR,EAPsC,KAO9BC,EAP8B,OAQbzR,mBAAS,IARI,mBAQtC0R,EARsC,KAQ5BC,EAR4B,OASvB3R,mBAAS,IATc,mBAStCqC,EATsC,KASjCC,EATiC,OAUftC,mBAAS,IAVM,mBAUtCoV,EAVsC,KAU7BI,EAV6B,KAWvCnW,EAAQnB,YAAH,MAoDX,OAAKgB,EAIH,kBAAC,IAAD,CACEG,MAAOA,EACPC,UAAW,CACTgS,SACA4D,WACA1D,SACAE,YAEFhP,YAAa,SAAClD,GACZgW,EAAWhW,EAAK+a,mBAElBxX,QAAS,SAACV,GACJA,EAAIW,eACNV,EACED,EAAIW,cAAcC,KAAI,SAACzB,GACrB,OAAOA,EAAM0B,YAIfb,EAAIc,cACNb,EAAOD,EAAIc,aAAaD,YAI3B,YAAkB,IAAfE,EAAc,EAAdA,QAIF,OAHIA,GACFd,EAAO,IAGP,kBAAC,GAAD,iBACMvC,EADN,CAEEmV,SAAUA,EACVC,YAAaA,EACb3D,OAAQA,EACRC,UAAWA,EACXC,SAAUA,EACVC,YAAaA,EACbyD,QAASA,EACThS,QAASA,EACT5B,MAAOa,QA1CR,kBAAC,IAAD,CAAUG,GAAG,OC3CTgY,GAtBe,SAACza,GAAW,IAChCkB,EAAUlB,EAAVkB,MAER,OADwBsB,qBAAWd,GAA3BvC,YAKN,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEkM,OAAK,EACLC,KAAI,UAAKpK,EAAMoK,MACfC,UAAWgP,KAEb,kBAAC,IAAD,CACElP,OAAK,EACLC,KAAI,UAAKpK,EAAMoK,KAAX,mBACJC,UAAW6O,MAZR,kBAAC,IAAD,CAAU3X,GAAG,OCkCTiY,GAnCc,SAAC1a,GAAW,IAC/BkB,EAAUlB,EAAVkB,MAER,OADwBsB,qBAAWd,GAA3BvC,YAKN,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEkM,OAAK,EACLC,KAAI,UAAKpK,EAAMoK,MACfC,UAAWgH,KAEb,kBAAC,IAAD,CACElH,OAAK,EACLC,KAAI,UAAKpK,EAAMoK,KAAX,WACJC,UAAWkJ,KAEb,kBAAC,IAAD,CACEpJ,OAAK,EACLC,KAAI,UAAKpK,EAAMoK,KAAX,eACJC,UAAW0J,KAEb,kBAAC,IAAD,CACE3J,KAAI,UAAKpK,EAAMoK,KAAX,8BACJC,UAAWyM,KAEb,kBAAC,IAAD,CACE1M,KAAI,UAAKpK,EAAMoK,KAAX,6BACJC,UAAWkP,MAzBR,kBAAC,IAAD,CAAUhY,GAAG,OC4ITkY,GApJU,SAAC3a,GAAW,IAC3BqD,EAAwCrD,EAAxCqD,QAAS5B,EAA+BzB,EAA/ByB,MAAOhC,EAAwBO,EAAxBP,KAAMiU,EAAkB1T,EAAlB0T,OAAQxS,EAAUlB,EAAVkB,MADJ,EAEFjB,mBAAS,IAFP,mBAE3B8Z,EAF2B,KAEjBC,EAFiB,KAMlC,OACE,6BAAStZ,UAAU,mCACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,+BACb,wBAAIA,UAAU,SAAd,+BAEF,yBAAKA,UAAU,sBAAsB2D,MAAO,CAAEC,OAAQ,WACpD,yBAAK5D,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,iBACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,gBACZC,MAAOkZ,EACPjZ,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BmZ,EAAYnZ,EAAM2T,QAAQ,IAAK,YAO3C,yBAAK9T,UAAU,uBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,WACb,4BACEA,UAAS,4BAAuB2C,EAAU,aAAe,IACzD/B,QAAS,SAACP,GACRA,EAAMQ,iBAjCpBmS,EAAOqG,IAoCK1V,MAAO,CAAEC,OAAQ,WANnB,WAYF,yBAAK5D,UAAU,+CACb,wBAAIA,UAAU,+CACXjB,EAAI,kCAAuC,KAGhD,uBAAGiB,UAAU,8CACVe,GAAgB,MAItBhC,EACC,6BACEiB,UAAU,QACV2D,MAAO,CACLyK,OAAQ,oBACRC,QAAS,OACTC,aAAc,SAGhB,yBAAKtO,UAAU,iBACb,yBAAKA,UAAU,WACb,2BACE,6CACA,kBAAC,IAAD,CACE+B,GAAE,UAAKvB,EAAMoR,IACVkC,QACC,eAFG,4BAGkB/U,EAAKmb,iBAAiB7F,KAAKxD,SAEjDiD,QAAQ,SAAU,MAEpB/U,EAAKmb,iBAAiB7F,KAAKxD,QAVhC,IAYI,IACF,+BACE,kDAAgC,IAC/B9R,EAAKmb,iBAAiB7F,KAAKhD,YAE9B,6BACA,6CACCtS,EAAKmb,iBAAiB7F,KAAK/C,QAAQC,WAnBtC,KAmBoD,IACjDxS,EAAKmb,iBAAiB7F,KAAK7C,WAAWC,eACvC,6BArBF,cAsBc,IACX7C,KAAO7P,EAAKmb,iBAAiB7F,KAAK3C,WAAW5C,OAC5C,iCAEF,6BA1BF,mBA2BmB,IAChBF,KAAO7P,EAAKmb,iBAAiB7F,KAAK1C,WAAW7C,OAC5C,iCAEF,6BA/BF,QAkCA,2BACE,4CACC/P,EAAKmb,iBAAiBV,OAAOhb,KAAKqF,UAAW,IAC7C9E,EAAKmb,iBAAiBV,OAAOhb,KAAKsF,SAHrC,IAGgD,IAC9C,sCACQ,yCAAuB,IAC7B,kBAAC,IAAD,CACE/B,GAAE,+BAA0BhD,EAAKmb,iBAAiBV,OAAOlF,OAExDvV,EAAKmb,iBAAiBV,OAAOlF,OAGlC,6BACA,8CACCvV,EAAKmb,iBAAiBb,SAAS7a,KAAKqF,UAAW,IAC/C9E,EAAKmb,iBAAiBb,SAAS7a,KAAKsF,SAfvC,IAekD,IAChD,sCACQ,yCAAuB,IAC7B,kBAAC,IAAD,CACE/B,GAAE,+BAA0BhD,EAAKmb,iBAAiBb,SAAS/E,OAE1DvV,EAAKmb,iBAAiBb,SAAS/E,OAGpC,6BAxBF,aAyBa,IACV1F,KAAO7P,EAAKmb,iBAAiBT,UAAU3K,OACtC,iCAEF,6BA7BF,UAkCJ,yBAAK9O,UAAU,eACb,kBAAC,GAAD,CACEuX,IAAKxY,EAAKmb,iBAAiB3C,IAC3B1G,OAAQ9R,EAAKmb,iBAAiB7F,KAAKxD,WAIvC,Q,6xBC5IZ,IAoFesJ,GApFmB,SAAC7a,GAAW,IAAD,EACrBC,mBAAS,IADY,mBACpCqC,EADoC,KAC/BC,EAD+B,KAEnCpD,EAAgBqD,qBAAWd,GAA3BvC,YAIFoS,EADFvR,EADFkB,MAASkQ,OAEW2D,KAChBrS,EAAWvE,YAAH,MAqCd,OAAKgB,GAAoC,wBAArBA,EAAY0E,KAI9B,kBAAC,IAAD,CACEnB,SAAUA,EACVM,QAAS,SAACvB,GACJA,GAASA,EAAMwB,cACjBV,EACEd,EAAMwB,cAAcC,KAAI,SAACkL,GACvB,OAAOA,EAAKjL,YAGP1B,GAASA,EAAM2B,cACxBb,EAAOd,EAAM4Y,iBAAiBlX,YAIjC,SAACuR,EAAD,GAAyC,IAA5BrR,EAA2B,EAA3BA,QAAgB5D,GAAW,EAAlBgC,MAAkB,EAAXhC,MAC5B,OACE,kBAAC,GAAD,iBACMO,EADN,CAEEqD,QAASA,EACT5B,MAAOa,EACPoR,OAAQ,SAACqG,GACPrF,EAAS,CACPnV,UAAW,CACTwV,KAAMxD,EACNwI,eAINta,KAAMA,QA/BP,kBAAC,IAAD,CAAUgD,GAAG,OCyITqY,GAxLU,SAAC9a,GAAW,IAEjCuR,EAUEvR,EAVFuR,OACAC,EASExR,EATFwR,UACAC,EAQEzR,EARFyR,OACAC,EAOE1R,EAPF0R,UACAC,EAME3R,EANF2R,SACAC,EAKE5R,EALF4R,YACAnQ,EAIEzB,EAJFyB,MACA4B,EAGErD,EAHFqD,QACAwO,EAEE7R,EAFF6R,MACA3Q,EACElB,EADFkB,MAEF,OACE,6BAASR,UAAU,0BACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,+BACb,wBAAIA,UAAU,SAAd,8BACA,uBAAGA,UAAU,4BAA4Be,GAAgB,IACxD4B,EACC,4BAAQ3C,UAAU,gCAAlB,WAEA,IAGJ,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,WACA,yBAAKA,UAAU,0BACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,UACZC,MAAO0Q,EACPzQ,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3B2Q,EAAU3Q,MAGd,0BAAMH,UAAU,yBACd,uBAAGA,UAAU,aAAawD,cAAY,cAMhD,yBAAKxD,UAAU,uBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,aACA,yBAAKA,UAAU,0BACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,YACZC,MAAO8Q,EACP7Q,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3B+Q,EAAY/Q,MAGhB,0BAAMH,UAAU,yBACd,uBAAGA,UAAU,iBAAiBwD,cAAY,aAKlD,yBAAKxD,UAAU,iCACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,WACA,yBAAKA,UAAU,0BACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,UACZC,MAAO4Q,EACP3Q,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3B6Q,EAAU7Q,MAGd,0BAAMH,UAAU,yBACd,uBAAGA,UAAU,iBAAiBwD,cAAY,cAMpD,wBACExD,UAAU,iBACV2D,MAAO,CAAEwK,gBAAiB,aAE5B,yBAAKnO,UAAU,aACZmR,EAAM3O,KAAI,SAAC4O,EAAU1N,GACpB,OACE,6BACEA,IAAKA,EACL1D,UAAU,QACV2D,MAAO,CACLyK,OAAQ,oBACRC,QAAS,OACTC,aAAc,SAGhB,yBAAKtO,UAAU,iBACb,yBAAKA,UAAU,WACb,2BACE,6CACA,kBAAC,IAAD,CACE+B,GAAE,UAAKvB,EAAMoR,IAAIkC,QAAQ,SAAU,WAAjC,iBACA1C,EAASiD,KAAKxD,SAGfO,EAASiD,KAAKxD,QAPnB,IASI,IACF,+BACE,kDAAgC,IAC/BO,EAASiD,KAAKhD,YAEjB,6BACA,6CACCD,EAASiD,KAAK/C,QAAQC,WAhBzB,KAgBuC,IACpCH,EAASiD,KAAK7C,WAAWC,eAC1B,6BAlBF,cAmBc,IACX7C,KAAOwC,EAASiD,KAAK3C,WAAW5C,OAC/B,iCAEF,6BAvBF,mBAwBmB,IAChBF,KAAOwC,EAASiD,KAAK1C,WAAW7C,OAC/B,iCAEF,6BA5BF,QA+BA,2BACE,4CACCsC,EAASoI,OAAOhb,KAAKqF,UAAW,IAChCuN,EAASoI,OAAOhb,KAAKsF,SAHxB,IAGmC,IACjC,sCACQ,yCAAuB,IAC7B,kBAAC,IAAD,CACE/B,GAAE,+BAA0BqP,EAASoI,OAAOlF,OAE3ClD,EAASoI,OAAOlF,OAGrB,6BACA,8CACClD,EAASiI,SAAS7a,KAAKqF,UAAW,IAClCuN,EAASiI,SAAS7a,KAAKsF,SAf1B,IAeqC,IACnC,sCACQ,yCAAuB,IAC7B,kBAAC,IAAD,CACE/B,GAAE,+BAA0BqP,EAASiI,SAAS/E,OAE7ClD,EAASiI,SAAS/E,OAGvB,6BAxBF,aAyBa,IACV1F,KAAOwC,EAASqI,UAAU3K,OACzB,iCAEF,6BA7BF,UAkCJ,yBAAK9O,UAAU,eACb,kBAAC,GAAD,CAAKuX,IAAKnG,EAASmG,IAAK1G,OAAQO,EAASiD,KAAKxD,kB,w6BC3KhE,IA6GewJ,GA7GmB,SAAC/a,GAAW,IACpCb,EAAgBqD,qBAAWd,GAA3BvC,YAIFyR,EADF5Q,EADFkB,MAASkQ,OAEcjN,GALkB,EAMflE,mBAAS,IANM,mBAMpCsR,EANoC,KAM5BC,EAN4B,OAOfvR,mBAAS,IAPM,mBAOpCwR,EAPoC,KAO5BC,EAP4B,OAQXzR,mBAAS,IARE,mBAQpC0R,EARoC,KAQ1BC,EAR0B,OASrB3R,mBAAS,IATY,mBASpCqC,EAToC,KAS/BC,EAT+B,OAUjBtC,mBAAS,IAVQ,mBAUpC4R,EAVoC,KAU7BW,EAV6B,KAWrClT,EAAQnB,YAAH,MA+CX,OAAKgB,EAIH,kBAAC,IAAD,CACEG,MAAOA,EACPC,UAAW,CACTqR,YACAW,SACAE,SACAE,YAEFhP,YAAa,SAAClD,GACZ+S,EAAS/S,EAAKub,iBAEhBhY,QAAS,SAACV,GACJA,EAAIW,eACNV,EACED,EAAIW,cAAcC,KAAI,SAACzB,GACrB,OAAOA,EAAM0B,YAIfb,EAAIc,cACNb,EAAOD,EAAIc,aAAaD,YAI3B,YAAkB,IAAfE,EAAc,EAAdA,QAIF,OAHIA,GACFd,EAAO,IAGP,kBAAC,GAAD,iBACMvC,EADN,CAEEuR,OAAQA,EACRC,UAAWA,EACXC,OAAQA,EACRC,UAAWA,EACXC,SAAUA,EACVC,YAAaA,EACbC,MAAOA,EACPxO,QAASA,EACT5B,MAAOa,QA1CR,kBAAC,IAAD,CAAUG,GAAG,OCtCTwY,GAtBa,SAACjb,GAAW,IAC9BkB,EAAUlB,EAAVkB,MAER,OADwBsB,qBAAWd,GAA3BvC,YAKN,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEkM,OAAK,EACLC,KAAI,UAAKpK,EAAMoK,MACfC,UAAWwP,KAEb,kBAAC,IAAD,CACE1P,OAAK,EACLC,KAAI,UAAKpK,EAAMoK,KAAX,iBACJC,UAAWsP,MAZR,kBAAC,IAAD,CAAUpY,GAAG,OC4BTyY,GA9BU,SAAClb,GAAW,IAC3BkB,EAAUlB,EAAVkB,MAER,OADwBsB,qBAAWd,GAA3BvC,YAKN,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEkM,OAAK,EACLC,KAAI,UAAKpK,EAAMoK,MACfC,UAAW0F,KAEb,kBAAC,IAAD,CACE5F,OAAK,EACLC,KAAI,UAAKpK,EAAMoK,KAAX,QACJC,UAAW4F,KAEb,kBAAC,IAAD,CACE7F,KAAI,UAAKpK,EAAMoK,KAAX,oBACJC,UAAW0P,KAEb,kBAAC,IAAD,CACE3P,KAAI,UAAKpK,EAAMoK,KAAX,qBACJC,UAAWmP,MApBR,kBAAC,IAAD,CAAUjY,GAAG,OCoDTiB,GAzDa,SAAC1D,GAAW,IAC9Bb,EAAgBqD,qBAAWd,GAA3BvC,YACAsC,EAAgBzB,EAAhByB,MAAOhC,EAASO,EAATP,KACTqR,EAAerR,EACjB6P,KAAO7P,EAAKqR,cAActB,OAAO,iCACjC,KACJ,OACE,6BACE,6BAAS9O,UAAU,mCACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,qBACb,wBAAIA,UAAU,SAAd,WACsB,kBAArBvB,EAAY0E,MAA6BpE,EAAKP,KAAKuF,SAKhD,KAJF,kBAAC,GAAD,CACEZ,KAAK,sBACLM,GAAI1E,EAAKuV,SAKjB,uBAAGtU,UAAU,4BAA4Be,GAAgB,IACxDhC,EACC,yBAAKiB,UAAU,uBACb,yBACEA,UAAU,8BACV2D,MAAO,CAAE0K,QAAS,SAElB,kBAAC,GAAD,CAAU7P,KAAMO,EAAKP,QAEvB,yBAAKwB,UAAU,+BACb,6BAASA,UAAU,SACjB,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,UAAU2D,MAAO,CAAE0K,QAAS,SACzC,2BACE,2DADF,KAC6CtP,EAAKuV,KAAM,IACtD,6BACA,yCAHF,KAG2BvV,EAAKgL,MAHhC,IAGuC,6BACrC,0CAJF,KAI4BhL,EAAK8K,OAJjC,IAIyC,6BACvC,2CALF,KAK6B9K,EAAK4I,QALlC,IAK2C,6BACzC,kDANF,KAMoC5I,EAAK4K,cAAe,IACtD,6BACA,iDARF,KAQmCyG,EARnC,IAQiD,8BAEjD,kBAAC,GAAD,CAAcjH,SAAUpK,EAAKoK,gBAMrC,S,opBCnDd,IAqEesR,GArEwB,SAACnb,GAAW,IAAD,EAC1BC,mBAAS,IADiB,mBACzCqC,EADyC,KACpCC,EADoC,KAE1CjD,EAAQnB,YAAH,MAmCX,OACE,kBAAC,IAAD,CACEmB,MAAOA,EACP0D,QAAS,SAACvB,GACJA,GAASA,EAAMwB,cACjBV,EACEd,EAAMwB,cAAcC,KAAI,SAACkL,GACvB,OAAOA,EAAKjL,YAGP1B,GAASA,EAAM2B,cACxBb,EAAOd,EAAM2B,aAAaD,YAI7B,YAA+B,IAA5BE,EAA2B,EAA3BA,QAAgB5D,GAAW,EAAlBgC,MAAkB,EAAXhC,MAClB,OAAI4D,GACFd,EAAO,IACA,kBAAC,GAAD,OAGP,kBAAC,GAAD,CACEc,QAASA,EACT5B,MAAOa,EACP7C,KAAMA,EAAOA,EAAK2b,sBAAwB,W,2sBC7DtD,IA2EeC,GA3E0B,SAACrb,GAAW,IAAD,EAC5BC,mBAAS,IADmB,mBAC3CqC,EAD2C,KACtCC,EADsC,KAGvC6O,EACPpR,EADFkB,MAASkQ,OAEL9R,EAAQnB,YAAH,MAmCX,OACE,kBAAC,IAAD,CACEmB,MAAOA,EACPC,UAAW,CACT4E,GAAIiN,EAAOjN,IAEbnB,QAAS,SAACvB,GACJA,GAASA,EAAMwB,cACjBV,EACEd,EAAMwB,cAAcC,KAAI,SAACkL,GACvB,OAAOA,EAAKjL,YAGP1B,GAASA,EAAM2B,cACxBb,EAAOd,EAAM2B,aAAaD,YAI7B,YAA+B,IAA5BE,EAA2B,EAA3BA,QAAgB5D,GAAW,EAAlBgC,MAAkB,EAAXhC,MAClB,OAAI4D,GACFd,EAAO,IACA,kBAAC,GAAD,OAGP,kBAAC,GAAD,CACEc,QAASA,EACT5B,MAAOa,EACP7C,KAAMA,EAAOA,EAAK6b,wBAA0B,WC7CzCC,GAtBsB,SAACvb,GAAW,IACvCkB,EAAUlB,EAAVkB,MAER,OADwBsB,qBAAWd,GAA3BvC,YAKN,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEkM,OAAK,EACLC,KAAI,UAAKpK,EAAMoK,MACfC,UAAW4P,KAEb,kBAAC,IAAD,CACE9P,OAAK,EACLC,KAAI,UAAKpK,EAAMoK,KAAX,QACJC,UAAW8P,MAZR,kBAAC,IAAD,CAAU5Y,GAAG,OCyCTe,GA9CO,SAACxD,GAAW,IACxByB,EAAgBzB,EAAhByB,MAAOhC,EAASO,EAATP,KACTqR,EAAerR,EACjB6P,KAAO7P,EAAKqR,cAActB,OAAO,iCACjC,KAEJ,OACE,6BACE,6BAAS9O,UAAU,mCACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,+BACb,wBAAIA,UAAU,SAAd,YAEF,6BACA,uBAAGA,UAAU,4BAA4Be,GAAgB,IACxDhC,EACC,yBAAKiB,UAAU,uBACb,yBACEA,UAAU,8BACV2D,MAAO,CAAE0K,QAAS,SAElB,kBAAC,GAAD,CAAU7P,KAAMO,EAAKP,QAEvB,yBAAKwB,UAAU,+BACb,6BAASA,UAAU,SACjB,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,UAAU2D,MAAO,CAAE0K,QAAS,SACzC,2BACE,2CADF,KAC6BtP,EAAKqL,QADlC,IAC2C,6BACzC,2CAFF,KAE6BrL,EAAK4I,QAFlC,IAE4C,IACzC5I,EAAKwF,QAAQQ,YAHhB,IAG6B,6BAC3B,iDAJF,KAImCqL,EAJnC,IAIiD,8BAEjD,kBAAC,GAAD,CAAcjH,SAAUpK,EAAKoK,gBAMrC,S,uqBCtCd,IAkEe2R,GAlEgB,SAACxb,GAAW,IAAD,EAClBC,mBAAS,IADS,mBACjCqC,EADiC,KAC5BC,EAD4B,KAElCjD,EAAQnB,YAAH,MAoCX,OACE,kBAAC,IAAD,CAAOmB,MAAOA,IACX,YAA+B,IAA5B+D,EAA2B,EAA3BA,QAAS5B,EAAkB,EAAlBA,MAAOhC,EAAW,EAAXA,KAUlB,OATIgC,GAASA,EAAMwB,cACjBV,EACEd,EAAMwB,cAAcC,KAAI,SAACkL,GACvB,OAAOA,EAAKjL,YAGP1B,GAASA,EAAM2B,cACxBb,EAAOd,EAAM2B,aAAaD,SAExBE,GACFd,EAAO,IACA,kBAAC,GAAD,OAGP,kBAAC,GAAD,CACEc,QAASA,EACT5B,MAAOa,EACP7C,KAAMA,EAAOA,EAAKgc,gBAAkB,W,gRC/D3BC,G,YACnB,WAAY1b,GAAQ,IAAD,+BACjB,8CAAMA,KACDyQ,MAAQ,CACXkL,UAAU,EACVla,MAAO,GACPma,KAAM,IALS,E,iFAQDna,EAAOma,GAAO,IAAD,OAC7BC,KAAKC,S,2VAAL,IAEOD,KAAKpL,MAFZ,CAGIkL,UAAU,EACVla,MAAOA,EACPma,KAAMA,KAER,WACEG,QAAQC,IAAI,EAAKvL,Y,+BAKrB,OAAOoL,KAAKpL,MAAMkL,SAChB,yBAAKtX,MAAO,CAAEC,OAAQ,WACpB,yBAAK5D,UAAU,+BACb,uBAAGA,UAAU,gBAAgBwD,cAAY,SACzC,wBAAIxD,UAAU,SAAd,4BACA,0EAC8C,6BAD9C,0BAIA,6BACA,4BACEA,UAAU,oBACVY,QAAS,SAAC2a,GACRxQ,OAAOC,SAASC,WAHpB,YAWJkQ,KAAK7b,MAAM8B,a,GA5C0Boa,a,6RCO3C,IAmDeC,GAnDY,SAACnc,GAAW,IAC7Bb,EAAgBqD,qBAAWd,GAA3BvC,YAD4B,EAEdc,mBAAS,IAFK,mBAE7BqC,EAF6B,KAExBC,EAFwB,KAG9BjD,EAAQnB,YAAH,MAaX,OAAKgB,GAAoC,YAArBA,EAAY0E,KAI9B,kBAAC,IAAD,CACEvE,MAAOA,EACP0D,QAAS,SAACvB,GACJA,GAASA,EAAMwB,cACjBV,EACEd,EAAMwB,cAAcC,KAAI,SAACkL,GACvB,OAAOA,EAAKjL,YAGP1B,GAASA,EAAM2B,cACxBb,EAAOd,EAAM2B,aAAaD,YAI7B,YAA+B,IAA5BE,EAA2B,EAA3BA,QAAgB5D,GAAW,EAAlBgC,MAAkB,EAAXhC,MAClB,OAAI4D,GACFd,EAAO,IACA,kBAAC,GAAD,OAGP,kBAAC,GAAD,CACEd,MAAOa,EACP7C,KAAMA,EAAKyR,UAAUF,UACrBd,YAAY,OA1Bb,kBAAC,IAAD,CAAUzN,GAAG,OC2HT2Z,GAlJS,SAACpc,GAAW,IAC1BqD,EAAiDrD,EAAjDqD,QAAS5D,EAAwCO,EAAxCP,KAAM4c,EAAkCrc,EAAlCqc,SAAU5a,EAAwBzB,EAAxByB,MAAOd,EAAiBX,EAAjBW,KAAM2b,EAAWtc,EAAXsc,OADb,EAELrc,mBAC1Boc,EAAWA,EAASjM,gBAAkB,IAHP,mBAE1BmM,EAF0B,KAElBC,EAFkB,OAKDvc,mBAC9Boc,EAAWA,EAAShM,kBAAoB,IANT,mBAK1BoM,EAL0B,KAKhBC,EALgB,OAQDzc,mBAC9Boc,EAAWA,EAAS/L,kBAAoB,IATT,mBAQ1BqM,EAR0B,KAQhBC,EARgB,OAWH3c,mBAC5Boc,EAAWA,EAAS9L,iBAAmB,IAZR,mBAW1BsM,EAX0B,KAWjBC,EAXiB,KAkBjC,OACE,6BAASpc,UAAU,kCACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,+BACb,wBAAIA,UAAU,SAAd,aACA,8BAEF,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,oBACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,mBACZC,MAAO0b,EACPzb,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3B2b,EAAU3b,UAOtB,yBAAKH,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,uBACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,sBACZC,MAAO4b,EACP3b,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3B6b,EAAY7b,SAMtB,yBAAKH,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,uBACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,sBACZC,MAAO8b,EACP7b,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3B+b,EAAY/b,UAOxB,yBAAKH,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,qBACA,yBAAKA,UAAU,WACb,8BACEA,UAAU,WACVC,KAAK,OACLC,YAAY,oBACZC,MAAOgc,EACP/b,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3Bic,EAAWjc,UAOvB,yBAAKH,UAAU,uBACb,yBACEA,UAAU,yBACV2D,MAAO,CACLsL,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,WAAY,eAGd,yBAAKpP,UAAU,WACb,4BACEA,UAAS,4BAAuB2C,EAAU,aAAe,IACzD/B,QAAS,SAACP,GACRA,EAAMQ,iBAjGpB+a,EAAOC,EAAQE,EAAUE,EAAUE,IAoGvBxY,MAAO,CAAEC,OAAQ,cANnB,aAaN,yBAAK5D,UAAU,uBACb,yBACEA,UAAU,yBACV2D,MAAO,CACLsL,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,WAAY,eAGbrO,EAAQ,uBAAGf,UAAU,0BAA0Be,GAAa,KAC5DhC,EACC,uBAAGiB,UAAU,2BACVjB,EAAK,GAAD,OAAIkB,EAAJ,cAAqBwP,YAD5B,IAC0CxP,EAD1C,oBAGE,U,ycCrIhB,IA2Deoc,GA3DkB,SAAC/c,GAAW,IACnCb,EAAgBqD,qBAAWd,GAA3BvC,YADkC,EAEpBc,mBAAS,IAFW,mBAEnCqC,EAFmC,KAE9BC,EAF8B,OAKtCvC,EAAM0L,SADR+E,MAAS9P,EAJ+B,EAI/BA,KAEL0b,EANoC,EAIzB5c,KAIjB,IAAKN,GAAoC,YAArBA,EAAY0E,KAC9B,OAAO,kBAAC,IAAD,CAAUpB,GAAG,MAEtB,IAAMC,EAAWvE,YAAH,KACGwC,EACLA,GAKZ,OACE,kBAAC,IAAD,CACE+B,SAAUA,EACVM,QAAS,SAACvB,GACJA,EAAMwB,eACRV,EACEd,EAAMwB,cAAcC,KAAI,SAAC8Z,GACvB,OAAOA,EAAQ7Z,YAIjB1B,EAAM2B,cACRb,EAAOd,EAAM2B,aAAaD,YAI7B,SAAC8Z,EAAD,GAAkC,IAArB5Z,EAAoB,EAApBA,QAAS5D,EAAW,EAAXA,KACrB,OACE,kBAAC,GAAD,CACE6c,OAAQ,SAACC,EAAQE,EAAUE,EAAUE,GACnCI,EAAS,CACP1d,UAAW,CACT6Q,gBAAiBmM,EACjBlM,kBAAmBoM,EACnBnM,kBAAmBqM,EACnBpM,iBAAkBsM,MAIxBxZ,QAASA,EACT5B,MAAOa,EACP+Z,SAAUA,EACV1b,KAAMA,EACNlB,KAAMA,Q,ybClDlB,IA4Deyd,GA5De,SAACld,GAAW,IAChCb,EAAgBqD,qBAAWd,GAA3BvC,YAD+B,EAEjBc,mBAAS,IAFQ,mBAEhCqC,EAFgC,KAE3BC,EAF2B,KAGjCjD,EAAQnB,YAAH,MAsBX,OAAKgB,GAAoC,YAArBA,EAAY0E,KAI9B,kBAAC,IAAD,CACEvE,MAAOA,EACP0D,QAAS,SAACvB,GACJA,GAASA,EAAMwB,cACjBV,EACEd,EAAMwB,cAAcC,KAAI,SAACkL,GACvB,OAAOA,EAAKjL,YAGP1B,GAASA,EAAM2B,cACxBb,EAAOd,EAAM2B,aAAaD,YAI7B,YAA+B,IAA5BE,EAA2B,EAA3BA,QAAgB5D,GAAW,EAAlBgC,MAAkB,EAAXhC,MAClB,OAAI4D,GACFd,EAAO,IACA,kBAAC,GAAD,OAGP,kBAAC,GAAD,CACEd,MAAOa,EACP7C,KAAMA,EAAKyR,UAAUH,KACrBb,YAAY,OA1Bb,kBAAC,IAAD,CAAUzN,GAAG,OC8ET0a,GA9GY,SAACnd,GAAW,IAC7BqD,EAAiDrD,EAAjDqD,QAAS5D,EAAwCO,EAAxCP,KAAM4c,EAAkCrc,EAAlCqc,SAAU5a,EAAwBzB,EAAxByB,MAAOd,EAAiBX,EAAjBW,KAAM2b,EAAWtc,EAAXsc,OADV,EAEFrc,mBAChCoc,EAAWA,EAAS1L,YAAYC,UAAY,IAHV,mBAE7BA,EAF6B,KAElBwM,EAFkB,OAKQnd,qBAC1Coc,GAAYA,EAAS1L,YAAY0M,QAAU,IANT,mBAK7BC,EAL6B,KAKbC,EALa,OAQJtd,mBAC9Boc,EAAWA,EAASxL,kBAAoB,IATN,mBAQ7B2M,EAR6B,KAQnBC,EARmB,KAcpC,OACE,6BAAS/c,UAAU,kCACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,+BACb,wBAAIA,UAAU,SAAd,iBACA,8BAEF,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,4BACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,2BACZC,MAAO+P,EACP9P,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MACrByc,EAAiBzc,EAAMwc,QAAU,GACvCE,EAAkBD,GAClBF,EAAavc,OAInB,uBAAGH,UAAU,kBACT4c,EAAwC,GAAvB,wBAIzB,yBAAK5c,UAAU,+BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,oBACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVC,KAAK,OACLC,YAAY,mBACZC,MAAO2c,EACP1c,SAAU,SAACC,GACT,IAAMF,EAAQE,EAAMC,OAAOH,MAC3B4c,EAAY5c,UAOxB,yBAAKH,UAAU,uBACb,yBACEA,UAAU,yBACV2D,MAAO,CACLsL,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,WAAY,eAGd,yBAAKpP,UAAU,WACb,4BACEA,UAAS,4BAAuB2C,EAAU,aAAe,IACzD/B,QAAS,SAACP,GACRA,EAAMQ,iBAhEpB+a,EAAO1L,EAAW4M,IAmENnc,UAAWic,EACXjZ,MAAO,CAAEC,OAAQ,cAPnB,aAcN,yBAAK5D,UAAU,uBACb,yBACEA,UAAU,yBACV2D,MAAO,CACLsL,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,WAAY,eAGbrO,EAAQ,uBAAGf,UAAU,0BAA0Be,GAAa,KAC5DhC,EACC,uBAAGiB,UAAU,2BACVjB,EAAK,GAAD,OAAIkB,EAAJ,iBAAwBwD,GAD/B,IACoCxD,EADpC,oBAGE,U,0TCjGhB,IAyDe+c,GAzDqB,SAAC1d,GAAW,IACtCb,EAAgBqD,qBAAWd,GAA3BvC,YADqC,EAEvBc,mBAAS,IAFc,mBAEtCqC,EAFsC,KAEjCC,EAFiC,OAKzCvC,EAAM0L,SADR+E,MAAS9P,EAJkC,EAIlCA,KAEL0b,EANuC,EAI5B5c,KAIjB,IAAKN,GAAoC,YAArBA,EAAY0E,KAC9B,OAAO,kBAAC,IAAD,CAAUpB,GAAG,MAEtB,IAAMC,EAAWvE,YAAH,KACGwC,EACLA,GAKZ,OACE,kBAAC,IAAD,CACE+B,SAAUA,EACVM,QAAS,SAACvB,GACJA,EAAMwB,eACRV,EACEd,EAAMwB,cAAcC,KAAI,SAAC8Z,GACvB,OAAOA,EAAQ7Z,YAIjB1B,EAAM2B,cACRb,EAAOd,EAAM2B,aAAaD,YAI7B,SAAC8Z,EAAD,GAAkC,IAArB5Z,EAAoB,EAApBA,QAAS5D,EAAW,EAAXA,KACrB,OACE,kBAAC,GAAD,CACE6c,OAAQ,SAAC1L,EAAW4M,GAClBP,EAAS,CACP1d,UAAW,CACToR,YAAaC,EACbC,kBAAmB2M,MAIzBna,QAASA,EACT5B,MAAOa,EACP+Z,SAAUA,EACV1b,KAAMA,EACNlB,KAAMA,QCgDHke,uBACbvb,YAAQhE,EAAI,CAAEiE,KAAM,OACpBD,YAAQtC,EAAkB,CAAEuC,KAAM,mBAFrBsb,EA5EH,SAAC3d,GAAW,IACd4d,EAAuB5d,EAAvB4d,GAAI/e,EAAmBmB,EAAnBnB,eACJ+C,EAAmBY,qBAAWd,GAA9BE,eAaR,OAZAic,qBAAU,WACR,IAAKD,EAAGva,UAAYua,EAAGnc,MAAO,CAC5B,IAAMhC,EAAOme,EAAGA,GAChB/e,EAAe,CACbU,UAAW,CACTL,KAAMO,KAGVsC,aAAac,QpFtCM,YoFsCaZ,KAAK6b,UAAUre,IAC/CmC,EAAenC,MAEhB,CAACme,EAAI/e,EAAgB+C,IACjBgc,EAAGva,QACR,kBAAC,GAAD,MAEA,yBAAK3C,UAAU,YACb,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAQe,MAAOmc,EAAGnc,MAAQmc,EAAGnc,MAAQ,OACrC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO4J,OAAK,EAACC,KAAK,IAAIC,UAAWjI,IACjC,kBAAC,IAAD,CAAO+H,OAAK,EAACC,KAAK,SAASC,UAAWwS,IACtC,kBAAC,IAAD,CAAO1S,OAAK,EAACC,KAAK,UAAUC,UAAWyS,KACvC,kBAAC,IAAD,CAAO3S,OAAK,EAACC,KAAK,UAAUC,UAAW0D,KACvC,kBAAC,IAAD,CAAO5D,OAAK,EAACC,KAAK,aAAaC,UAAW4Q,KAC1C,kBAAC,IAAD,CACE9Q,OAAK,EACLC,KAAK,oBACLC,UAAWwR,KAEb,kBAAC,IAAD,CACE1R,OAAK,EACLC,KAAK,iBACLC,UAAW2R,KAEb,kBAAC,IAAD,CACE7R,OAAK,EACLC,KAAK,wBACLC,UAAWmS,KAEb,kBAAC,IAAD,CAAOpS,KAAK,YAAYC,UAAWH,KACnC,kBAAC,IAAD,CAAOE,KAAK,UAAUC,UAAWiD,KACjC,kBAAC,IAAD,CAAOlD,KAAK,WAAWC,UAAW2P,KAClC,kBAAC,IAAD,CACE5P,KAAK,iBACLC,UAAWiQ,KAEb,kBAAC,IAAD,CACElQ,KAAK,uBACLC,UAAWgQ,KAEb,kBAAC,IAAD,CACEjQ,KAAK,IACL2S,OAAQ,WACN,OACE,yBAAKvd,UAAU,oBACb,6BAASA,UAAU,kCACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,+BACb,wBAAIA,UAAU,YAAd,sCAShB,kBAAC,GAAD,WCtFYwd,QACW,cAA7BzS,OAAOC,SAASyS,UAEe,UAA7B1S,OAAOC,SAASyS,UAEhB1S,OAAOC,SAASyS,SAASjd,MACvB,2D,6jBCGN,IAAMkd,GAAWC,YAAe,CAC9BC,IAAK,2BAGDC,GAAWC,aAAW,SAACC,EAAD,GAAqB,IAAfC,EAAc,EAAdA,QAC1B9b,EAAQb,aAAaC,QtF1BH,csF2BxB,MAAO,CACL0c,QAAQ,MACHA,EADE,CAELC,cAAe/b,EAAK,iBAAaA,GAAU,SAM3CxD,GAAQ,IAAIwf,IAEZC,GAAS,IAAIC,IAAa,CAC9Brb,KAAM8a,GAASQ,OAAOX,IACtBhf,SACAV,WACAC,cAGFkgB,GAAOG,UAAU,CACfvf,KAAM,CACJN,YAAa,CACX0F,WAAY,GACZV,GAAI,GACJI,UAAW,GACXC,SAAU,GACVX,KAAM,GACNiB,QAAS,GACTL,SAAU,OAKhBwa,IAAShB,OACP,kBAAC,IAAD,CAAgBY,OAAQA,IACtB,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,SAINjG,SAASsG,eAAe,SD8DpB,kBAAmB3G,WACrBA,UAAU4G,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.6fb10ba1.chunk.js","sourcesContent":["import { gql } from \"apollo-boost\";\n// All queries stored in here\n// @client implies we are querying on client side\nexport const GET_CURRENT_USER = gql`\n  {\n    currentUser @client {\n      __typename\n      id\n      firstName\n      lastName\n      role\n      isAdmin\n      verified\n    }\n  }\n`;\n\nexport const ME = gql`\n  {\n    me {\n      id\n      firstName\n      lastName\n      role\n      isAdmin\n      verified\n    }\n  }\n`;\n\nexport const GET_REGION = gql`\n  query GetRegion($name: String!) {\n    getRegion(name: $name, skip: 0) {\n      id\n      pincode\n      region\n    }\n  }\n`;\n\nexport const GET_COUNTRY = gql`\n  query GetCountry($name: String!) {\n    getCountry(name: $name, skip: 0) {\n      id\n      countryCode\n      countryName\n    }\n  }\n`;\n\nexport const GET_HOSPITAL = gql`\n  query GetHospital($name: String!) {\n    getHospital(name: $name, skip: 0) {\n      hospitalId\n      name\n    }\n  }\n`;\n\nexport const GET_ICD_CODE = gql`\n  query GetIcdCode($commonName: String!) {\n    icdcodes(commonName: $commonName) {\n      id\n      icdCode\n      commonName\n    }\n  }\n`;\n\nexport const GET_ICD_SUB_CODE = gql`\n  query GetIcdSubCode($commonName: String!, $scientificName: String) {\n    icdsubcodes(commonName: $commonName, scientificName: $scientificName) {\n      id\n      icdSubCode\n      scientificName\n    }\n  }\n`;\n","// Object passed to client to let know what value to resolve in query on client side\nimport { gql } from \"apollo-boost\";\nimport { GET_CURRENT_USER } from \"./queries\";\n\n// We define schema for the client side\n// to make local chanes in cache or make request and store in cache which acts a management service\nexport const typeDefs = gql`\n  extend type User {\n    token: String\n  }\n`;\n// quantity to check how many we have put in to our cart\n// extend implies to extend mutation or item type already existing in graphql\n\n// resolver for the typedefs we created on the client side\nexport const resolvers = {\n  Mutation: {\n    addCurrentUser: (_parent, _args, _ctx, _info) => {\n      const { user } = _args;\n      const { currentUser } = _ctx.cache.readQuery({\n        query: GET_CURRENT_USER,\n        variables: {},\n      });\n\n      _ctx.cache.writeQuery({\n        query: GET_CURRENT_USER,\n        data: {\n          currentUser: user,\n        },\n      });\n      return currentUser;\n    },\n  },\n};\n","import { gql } from \"apollo-boost\";\n\nexport const REGISTER_PATIENT = gql`\n  mutation registerPatient(\n    $firstName: String!\n    $middleName: String!\n    $lastName: String!\n    $dob: String!\n    $sex: Gender!\n    $email: String!\n    $principleLanguage: String!\n    $motherName: String!\n    $aadharNo: String!\n    $password: String!\n    $address: String!\n    $bloodGroup: String!\n    $religion: String!\n    $maritalStatus: MaritalStatus!\n    $primaryLanguage: String!\n    $birthPlace: String!\n    $pincode: String!\n    $country: String!\n    $occupation: String!\n    $contact1: String!\n    $contact2: String!\n    $socioEcoStatus: String!\n    $immunizationHistory: String!\n  ) {\n    registerPatient(\n      data: {\n        firstName: $firstName\n        middleName: $middleName\n        lastName: $lastName\n        dob: $dob\n        sex: $sex\n        email: $email\n        principleLanguage: $principleLanguage\n        motherName: $motherName\n        aadharNo: $aadharNo\n        password: $password\n        address: $address\n        bloodGroup: $bloodGroup\n        religion: $religion\n        maritalStatus: $maritalStatus\n        primaryLanguage: $primaryLanguage\n        birthPlace: $birthPlace\n        pincode: $pincode\n        country: $country\n        occupation: $occupation\n        contact1: $contact1\n        contact2: $contact2\n        socioEcoStatus: $socioEcoStatus\n        immunizationHistory: $immunizationHistory\n        PMH: \"-\"\n        DHx: \"-\"\n      }\n    )\n  }\n`;\n\nexport const REGISTER_MEDICAL_PRACTITIONER = gql`\n  mutation registerMedicalPractitioner(\n    $firstName: String!\n    $middleName: String!\n    $lastName: String!\n    $dob: String!\n    $sex: Gender!\n    $email: String!\n    $password: String!\n    $address: String!\n    $clinicAddress: String!\n    $degree: String!\n    $field: String!\n    $hospital: String!\n  ) {\n    registerMedicalPractitioner(\n      data: {\n        firstName: $firstName\n        middleName: $middleName\n        lastName: $lastName\n        dob: $dob\n        sex: $sex\n        email: $email\n        password: $password\n        address: $address\n        clinicAddress: $clinicAddress\n        degree: $degree\n        field: $field\n        hospital: $hospital\n      }\n    )\n  }\n`;\n\nexport const REGISTER_DATABASE_ADMIN = gql`\n  mutation registerDatabaseAdmin(\n    $firstName: String!\n    $middleName: String!\n    $lastName: String!\n    $dob: String!\n    $sex: Gender!\n    $email: String!\n    $password: String!\n    $address: String!\n    $country: String!\n    $contact: String!\n    $hospital: String!\n  ) {\n    registerDatabaseAdmin(\n      data: {\n        firstName: $firstName\n        middleName: $middleName\n        lastName: $lastName\n        dob: $dob\n        sex: $sex\n        email: $email\n        password: $password\n        address: $address\n        country: $country\n        contact: $contact\n        hospital: $hospital\n      }\n    )\n  }\n`;\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(data: { email: $email, password: $password }) {\n      token\n      user {\n        id\n        firstName\n        lastName\n        role\n        isAdmin\n        verified\n      }\n    }\n  }\n`;\n\nexport const ADD_CURRENT_USER = gql`\n  mutation AddCurrentUser($user: User!) {\n    addCurrentUser(user: $user) @client\n  }\n`;\n","import React, { useState } from \"react\";\n\nconst Login = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [isValidEmail, setValidEmail] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [isValidPassword, setValidPassword] = useState(false);\n  const onSubmit = () => {\n    props.login(email, password);\n  };\n  return (\n    <section className=\"hero is-medium is-light is-bold\">\n      <div className=\"hero-body\">\n        <div className=\"container has-text-centered\">\n          <h1 className=\"title\">Login</h1>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-half-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Email</label>\n              <div className=\"control has-icons-left has-icons-right\">\n                <input\n                  className=\"input\"\n                  type=\"email\"\n                  placeholder=\"Email input\"\n                  value={email}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    const emailValid = value.match(\n                      /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i\n                    );\n                    setValidEmail(emailValid);\n                    setEmail(value);\n                  }}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fa fa-envelope\"></i>\n                </span>\n              </div>\n              <p className=\"help is-danger\">\n                {!isValidEmail ? \"This email is invalid\" : \"\"}\n              </p>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-half-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Password</label>\n              <div className=\"control has-icons-left has-icons-right\">\n                <input\n                  className=\"input\"\n                  type=\"password\"\n                  placeholder=\"Password input\"\n                  value={password}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    const passwordValid = value.match(\n                      /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,32}$/\n                    );\n                    setValidPassword(passwordValid);\n                    setPassword(value);\n                  }}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fa fa-unlock\"></i>\n                </span>\n              </div>\n              <p className=\"help is-danger\">\n                {!isValidPassword ? \"This password is invalid\" : \"\"}\n              </p>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-half-desktop\">\n            <div className=\"buttons\">\n              <button\n                className={`button is-success ${\n                  props.isLoading ? \"is-loading\" : \"\"\n                }`}\n                disabled={!isValidEmail || !isValidPassword}\n                onClick={(event) => {\n                  event.preventDefault();\n                  onSubmit();\n                }}\n              >\n                Login\n              </button>\n            </div>\n            <p className=\"help is-size-5 is-danger\">\n              {props.error ? props.error : \"\"}\n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Login;\n","import React, { createContext, useState } from \"react\";\nimport { USER_DATA } from \"../constants\";\n\nexport const CurrentUserContext = createContext({\n  currentUser: null,\n  setCurrentUser: () => {},\n});\n\n// We create a provider like Redux provider in index.js\nconst CurrentUserProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(\n    localStorage.getItem(USER_DATA)\n      ? JSON.parse(localStorage.getItem(USER_DATA))\n      : null\n  );\n\n  return (\n    <CurrentUserContext.Provider\n      value={{\n        currentUser,\n        setCurrentUser,\n      }}\n    >\n      {children}\n    </CurrentUserContext.Provider>\n  );\n};\n\nexport default CurrentUserProvider;\n","export const AUTH_TOKEN = \"AUTH_TOKEN\";\nexport const USER_DATA = \"USER_DATA\";\n","import React, { useState, useContext } from \"react\";\nimport { Mutation, graphql } from \"react-apollo\";\n\nimport { LOGIN, ADD_CURRENT_USER } from \"../../graphql/mutation\";\nimport Login from \"./login.component\";\nimport { AUTH_TOKEN } from \"../../constants\";\nimport { CurrentUserContext } from \"../../providers/currentUser.provider\";\nimport { Redirect } from \"react-router-dom\";\n\nconst LoginContainer = (props) => {\n  const [err, setErr] = useState(\"\");\n  const { currentUser, setCurrentUser } = useContext(CurrentUserContext);\n  if (currentUser) {\n    return <Redirect to=\"/\"></Redirect>;\n  }\n  return (\n    <Mutation\n      mutation={LOGIN}\n      onCompleted={(data) => {\n        const { token, user } = data.login;\n        localStorage.setItem(AUTH_TOKEN, token);\n        props.history.push(\"/\");\n        props.addCurrentUser({\n          variables: {\n            user,\n          },\n        });\n        setCurrentUser(user);\n      }}\n      onError={(err) => {\n        if (err.graphQLErrors) {\n          setErr(\n            err.graphQLErrors.map((error) => {\n              return error.message;\n            })\n          );\n        }\n        if (err.networkError) {\n          setErr(err.networkError.message);\n        }\n      }}\n    >\n      {(login, { loading }) => {\n        if (loading) {\n          setErr(\"\");\n        }\n        return (\n          <Login\n            {...props}\n            currentUser={currentUser}\n            login={(email, password) => {\n              login({\n                variables: { email, password },\n              });\n            }}\n            error={err}\n            isLoading={loading}\n          ></Login>\n        );\n      }}\n    </Mutation>\n  );\n};\n\nexport default graphql(ADD_CURRENT_USER, { name: \"addCurrentUser\" })(\n  LoginContainer\n);\n","import React from \"react\";\nimport \"./homepage.styles.scss\";\nconst Homepage = (props) => {\n  return (\n    <div className=\"homepage-wrapper\">\n      <section className=\"hero is-large is-light is-bold\">\n        <div className=\"hero-body\">\n          <div className=\"container has-text-centered\">\n            <h1 className=\"title\">Welcome to Medrec</h1>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Homepage;\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { CurrentUserContext } from \"../../providers/currentUser.provider\";\n\nconst headerLinks = {\n  DatabaseAdmin: [{ name: \"Search User\", link: \"/search\" }],\n  MedicalPractitioner: [{ name: \"Search User\", link: \"/search\" }],\n  Patient: [\n    { name: \"Insurance\", link: \"/insurance\" },\n    { name: \"Care Provider\", link: \"/care-provider\" },\n  ],\n};\n\nconst Header = (props) => {\n  const error = props.error ? props.error : null;\n  const networkError = error\n    ? error.networkError\n      ? error.networkError\n      : null\n    : null;\n  const { currentUser } = useContext(CurrentUserContext);\n  return (\n    <nav\n      className=\"navbar is-dark\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"navbar-brand\">\n        <Link className=\"navbar-item\" to=\"/\">\n          Medrec\n        </Link>\n        <a\n          role=\"button\"\n          className=\"navbar-burger burger\"\n          aria-label=\"menu\"\n          aria-expanded=\"false\"\n          data-target=\"navbarBasicExample\"\n          href=\"/#\"\n        >\n          <span aria-hidden=\"true\"></span>\n          <span aria-hidden=\"true\"></span>\n          <span aria-hidden=\"true\"></span>\n        </a>\n      </div>\n\n      <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n        {currentUser ? (\n          <div className=\"navbar-start\">\n            {headerLinks[currentUser.role].map((link, key) => {\n              return (\n                <Link className=\"navbar-item\" key={[key]} to={link.link}>\n                  {link.name}\n                </Link>\n              );\n            })}\n          </div>\n        ) : (\n          <div className=\"navbar-start\">\n            <Link className=\"navbar-item\" to=\"/login\">\n              Login\n            </Link>\n\n            <div className=\"navbar-item has-dropdown is-hoverable\">\n              <Link to=\"/register\" className=\"navbar-link\">\n                Register\n              </Link>\n\n              <div className=\"navbar-dropdown\">\n                <Link to=\"/register/patient\" className=\"navbar-item\">\n                  Patient\n                </Link>\n                <Link\n                  to=\"/register/medical-practitioner\"\n                  className=\"navbar-item\"\n                >\n                  Medical Practitioner\n                </Link>\n                <Link to=\"/register/database-admin\" className=\"navbar-item\">\n                  Database Admin\n                </Link>\n              </div>\n            </div>\n          </div>\n        )}\n        <div className=\"navbar-end\">\n          {networkError ? (\n            <div\n              className=\"navbar-item notification is-danger\"\n              style={{ margin: \"0 auto\" }}\n            >\n              It seems like server is taking a nap\n            </div>\n          ) : null}\n          {currentUser ? (\n            <div className=\"navbar-item has-dropdown is-hoverable\">\n              <p className=\"navbar-link\">\n                Hello, {currentUser.firstName} {currentUser.lastName}\n              </p>\n\n              <div className=\"navbar-dropdown\">\n                <p className=\"navbar-item\">\n                  {currentUser.verified ? (\n                    <i className=\"fa fa-check-circle\" aria-hidden=\"true\"></i>\n                  ) : null}\n                  &nbsp;\n                  {currentUser.role}\n                </p>\n                <Link\n                  to={`/${currentUser.role.toLowerCase()}`}\n                  className=\"navbar-item\"\n                >\n                  My Profile\n                </Link>\n                <hr className=\"navbar-divider\"></hr>\n                <Link to={`/update`} className=\"navbar-item\">\n                  Update Details\n                </Link>\n                <Link to={`/update/password`} className=\"navbar-item\">\n                  Update Password\n                </Link>\n                <hr className=\"navbar-divider\"></hr>\n                <Link to=\"/logout\" className=\"navbar-item\">\n                  Logout\n                </Link>\n              </div>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"./spinner.styles.scss\";\n\nexport const Spinner = () => {\n  return (\n    <div className=\"spinner-overlay\">\n      <div className=\"spinner-container\"></div>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { AUTH_TOKEN, USER_DATA } from \"../../constants\";\nimport { Redirect } from \"react-router-dom\";\nimport { CurrentUserContext } from \"../../providers/currentUser.provider\";\nimport { graphql } from \"react-apollo\";\nimport { ADD_CURRENT_USER } from \"../../graphql/mutation\";\n\nconst Logout = (props) => {\n  const { currentUser, setCurrentUser } = useContext(CurrentUserContext);\n  localStorage.removeItem(AUTH_TOKEN);\n  localStorage.removeItem(USER_DATA);\n  setCurrentUser(null);\n  props.addCurrentUser({\n    variables: {\n      user: {\n        __typename: \"\",\n        id: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        role: \"\",\n        isAdmin: \"\",\n        verified: \"\",\n      },\n    },\n  });\n  if (!currentUser) {\n    return <Redirect to=\"/\"></Redirect>;\n  }\n  return <div>Logging out...</div>;\n};\n\nexport default graphql(ADD_CURRENT_USER, { name: \"addCurrentUser\" })(Logout);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nconst Register = (props) => {\n  return (\n    <div className=\"homepage-wrapper\">\n      <section className=\"hero is-large is-light is-bold\">\n        <div className=\"hero-body\">\n          <div className=\"container has-text-centered\">\n            <h1 className=\"title\">Register</h1>\n            <Link to=\"/register/patient\">Register as Patient</Link>\n            <Link to=\"/register/medical-practitioner\">\n              Register as Medical Practitioner\n            </Link>\n            <Link to=\"/register/database-admin\">\n              Register as Database Admin\n            </Link>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Register;\n","import React from \"react\";\n\nconst GetCountry = (props) => {\n  const {\n    country,\n    setCountry,\n    countries,\n    countryCode,\n    setCountryCode,\n    loading,\n    error,\n  } = props;\n  return (\n    <div className=\"field\">\n      <label className=\"label\">Country</label>\n      <div className=\"control\">\n        <input\n          className=\"input\"\n          type=\"text\"\n          placeholder=\"Country\"\n          value={country}\n          onChange={(event) => {\n            const value = event.target.value;\n            setCountry(value);\n          }}\n        />\n      </div>\n      <div className={`select ${loading ? \"is-loading\" : \"\"}`}>\n        <select\n          value={countryCode}\n          onChange={(event) => {\n            const { value, selectedOptions } = event.target;\n            setCountryCode(value);\n            setCountry(selectedOptions[0].innerText);\n          }}\n        >\n          <option value=\"\" disabled>\n            Choose here\n          </option>\n          {countries.map((eachCountry, key) => {\n            return (\n              <option key={key} value={eachCountry.countryCode}>\n                {eachCountry.countryName}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n      <p className=\"help is-danger\">{error ? error : \"\"}</p>\n    </div>\n  );\n};\n\nexport default GetCountry;\n","import React, { useState } from \"react\";\nimport { Query } from \"react-apollo\";\nimport GetCountry from \"./get-country.component\";\nimport { GET_COUNTRY } from \"../../graphql/queries\";\n\nconst GetCountryContainer = (props) => {\n  const [countries, setCountries] = useState([]);\n  const { countryCode, setCountryCode } = props;\n  const [country, setCountry] = useState(props.country ? props.country : \"\");\n  return (\n    <Query\n      query={GET_COUNTRY}\n      variables={{\n        name: country ? country : \"a\",\n      }}\n    >\n      {({ loading, errors, data }) => {\n        if (!loading && !errors) {\n          setCountries(data.getCountry);\n        }\n        return (\n          <GetCountry\n            country={country}\n            setCountry={setCountry}\n            countries={countries}\n            loading={loading}\n            error={\n              errors\n                ? errors.graphQLErrors.map((error) => {\n                    return error.message;\n                  })\n                : null\n            }\n            countryCode={countryCode}\n            setCountryCode={setCountryCode}\n          ></GetCountry>\n        );\n      }}\n    </Query>\n  );\n};\n\nexport default GetCountryContainer;\n","import React from \"react\";\n\nconst GetRegion = (props) => {\n  const {\n    region,\n    setRegion,\n    regions,\n    pincode,\n    setPincode,\n    loading,\n    error,\n  } = props;\n  return (\n    <div className=\"field\">\n      <label className=\"label\">Region</label>\n      <div className=\"control\">\n        <input\n          className=\"input\"\n          type=\"text\"\n          placeholder=\"Region\"\n          value={region}\n          onChange={(event) => {\n            const value = event.target.value;\n            setRegion(value);\n          }}\n        />\n      </div>\n      <div className={`select ${loading ? \"is-loading\" : \"\"}`}>\n        <select\n          value={pincode}\n          onChange={(event) => {\n            const { value, selectedOptions } = event.target;\n            setPincode(value);\n            setRegion(selectedOptions[0].innerText);\n          }}\n        >\n          <option value=\"\" disabled>\n            Choose here\n          </option>\n          {regions.map((eachRegion, key) => {\n            return (\n              <option key={key} value={eachRegion.pincode}>\n                {eachRegion.region}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n      <p className=\"help is-danger\">{error ? error : \"\"}</p>\n    </div>\n  );\n};\n\nexport default GetRegion;\n","import React, { useState } from \"react\";\nimport { Query } from \"react-apollo\";\nimport GetRegion from \"./get-region.component\";\nimport { GET_REGION } from \"../../graphql/queries\";\n\nconst GetRegionContainer = (props) => {\n  const [regions, setRegions] = useState([]);\n  const { pincode, setPincode } = props;\n  const [region, setRegion] = useState(props.region ? props.region : \"\");\n  return (\n    <Query\n      query={GET_REGION}\n      variables={{\n        name: region ? region : \"a\",\n      }}\n    >\n      {({ loading, errors, data }) => {\n        if (!loading && !errors) {\n          setRegions(data.getRegion);\n        }\n        return (\n          <GetRegion\n            region={region}\n            setRegion={setRegion}\n            regions={regions}\n            loading={loading}\n            error={\n              errors\n                ? errors.graphQLErrors.map((error) => {\n                    return error.message;\n                  })\n                : null\n            }\n            pincode={pincode}\n            setPincode={setPincode}\n          ></GetRegion>\n        );\n      }}\n    </Query>\n  );\n};\n\nexport default GetRegionContainer;\n","import React, { useState } from \"react\";\nimport GetCountryContainer from \"../../../components/get-country/get-country.container\";\nimport GetRegionContainer from \"../../../components/get-region/get-region.container\";\n\nconst RegisterPatient = (props) => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [middleName, setMiddleName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isValidEmail, setValidEmail] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [isValidPassword, setValidPassword] = useState(false);\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [isValidConfirmPassword, setValidConfirmPassword] = useState(false);\n  const [dob, setDOB] = useState(\"\");\n  const [sex, setSex] = useState(\"Male\");\n  const [principleLanguage, setPrincipleLanguage] = useState(\"\");\n  const [motherName, setMotherName] = useState(\"\");\n  const [aadharNo, setAadharNo] = useState(\"\");\n  const [bloodGroup, setBloodGroup] = useState(\"\");\n  const [religion, setReligion] = useState(\"\");\n  const [maritalStatus, setMaritalStatus] = useState(\"Single\");\n  const [primaryLanguage, setPrimaryLanguage] = useState(\"\");\n  const [birthPlace, setBirthPlace] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [pincode, setPincode] = useState(\"\");\n  const [countryCode, setCountryCode] = useState(\"\");\n  const [occupation, setOccupation] = useState(\"\");\n  const [contact1, setContact1] = useState(\"\");\n  const [isValidContact1, setValidContact1] = useState(false);\n  const [contact2, setContact2] = useState(\"\");\n  const [isValidContact2, setValidContact2] = useState(false);\n  const [socioEcoStatus, setSocioEcoStatus] = useState(\"\");\n  const [immunizationHistory, setImmunizationHistory] = useState(\"\");\n  const { registerPatient, loading, error, data } = props;\n  const onSubmit = () => {\n    registerPatient({\n      firstName,\n      middleName,\n      lastName,\n      dob,\n      sex,\n      email,\n      principleLanguage,\n      aadharNo,\n      motherName,\n      password,\n      address,\n      bloodGroup,\n      religion,\n      maritalStatus,\n      primaryLanguage,\n      birthPlace,\n      pincode,\n      country: countryCode,\n      occupation,\n      contact1,\n      contact2,\n      socioEcoStatus,\n      immunizationHistory,\n    });\n  };\n  return (\n    <section className=\"hero is-small is-light is-bold\">\n      <div className=\"hero-body\">\n        <div className=\"container has-text-centered\">\n          <h1 className=\"title\">Register as Patient</h1>\n          <br />\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">First Name</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"First Name\"\n                  value={firstName}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setFirstName(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Middle Name</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Middle Name\"\n                  value={middleName}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setMiddleName(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Last Name</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Last Name\"\n                  value={lastName}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setLastName(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Date of Birth</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"date\"\n                  placeholder=\"DOB\"\n                  value={dob}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setDOB(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Email</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  value={email}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    const emailValid = value.match(\n                      /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i\n                    );\n                    setValidEmail(emailValid);\n                    setEmail(value);\n                  }}\n                />\n              </div>\n              <p className=\"help is-danger\">\n                {!isValidEmail ? \"This email is invalid\" : \"\"}\n              </p>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Gender</label>\n              <div className=\"select\">\n                <select\n                  value={sex}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setSex(value);\n                  }}\n                >\n                  <option value=\"Male\">Male</option>\n                  <option value=\"Female\">Female</option>\n                  <option value=\"Transgender\">Transgender</option>\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Password</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  value={password}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    const passwordValid = value.match(\n                      /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,32}$/\n                    );\n                    setValidPassword(passwordValid);\n                    setPassword(value);\n                  }}\n                />\n              </div>\n              <p className=\"help is-danger\">\n                {!isValidPassword\n                  ? \"This password should have atleast one number and one character from @$!%*#?&\"\n                  : \"\"}\n              </p>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Confirm Password</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"password\"\n                  placeholder=\"Confirm Password\"\n                  value={confirmPassword}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    const passwordValid = value.match(\n                      /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,32}$/\n                    );\n                    setValidConfirmPassword(passwordValid);\n                    setConfirmPassword(value);\n                  }}\n                />\n              </div>\n              <p className=\"help is-danger\">\n                {!isValidConfirmPassword\n                  ? \"This password is invalid\"\n                  : password !== confirmPassword\n                  ? \"Passwords Do not Match\"\n                  : \"\"}\n              </p>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Principle Language</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Principle Language\"\n                  value={principleLanguage}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setPrincipleLanguage(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Mother Name</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Mother Name\"\n                  value={motherName}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setMotherName(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Aadhar no</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Aadhar no\"\n                  value={aadharNo}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setAadharNo(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Blood Group</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Blood Group\"\n                  value={bloodGroup}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setBloodGroup(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Religion</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Religion\"\n                  value={religion}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setReligion(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Marital Status</label>\n              <div className=\"select\">\n                <select\n                  value={maritalStatus}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setMaritalStatus(value);\n                  }}\n                >\n                  <option value=\"Single\">Single</option>\n                  <option value=\"Married\">Married</option>\n                  <option value=\"Divorced\">Divorced</option>\n                  <option value=\"Widowed\">Widowed</option>\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Primary Language</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Primary Language\"\n                  value={primaryLanguage}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setPrimaryLanguage(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Birth Place</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Birth Place\"\n                  value={birthPlace}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setBirthPlace(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Address</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Address\"\n                  value={address}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setAddress(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <GetRegionContainer\n              pincode={pincode}\n              setPincode={setPincode}\n            ></GetRegionContainer>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <GetCountryContainer\n              countryCode={countryCode}\n              setCountryCode={setCountryCode}\n            ></GetCountryContainer>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Occupation</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Occupation\"\n                  value={occupation}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setOccupation(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Contact 1</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Contact 1\"\n                  value={contact1}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    const contactValid = value.match(\n                      /^[+]\\d{2,4}-\\d{3}\\d{3}\\d{4}$/\n                    );\n                    setValidContact1(contactValid);\n                    setContact1(value);\n                  }}\n                />\n              </div>\n              <p className=\"help is-danger\">\n                {!isValidContact1\n                  ? \"Supported format +[CountryCode]-[10 digit number]\"\n                  : \"\"}\n              </p>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Contact 2</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Contact 2\"\n                  value={contact2}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    const contactValid = value.match(\n                      /^[+]\\d{2,4}-\\d{3}\\d{3}\\d{4}$/\n                    );\n                    setValidContact2(contactValid);\n                    setContact2(value);\n                  }}\n                />\n              </div>\n              <p className=\"help is-danger\">\n                {!isValidContact2\n                  ? \"Supported format +[CountryCode]-[10 digit number]\"\n                  : \"\"}\n              </p>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Socio Eco Status</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Socio Eco Status\"\n                  value={socioEcoStatus}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setSocioEcoStatus(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Immunization History</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Immunization History\"\n                  value={immunizationHistory}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setImmunizationHistory(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-quarter-desktop\">\n            <div className=\"buttons\">\n              <button\n                className={`button is-success ${loading ? \"is-loading\" : \"\"}`}\n                onClick={(event) => {\n                  event.preventDefault();\n                  onSubmit();\n                }}\n                disabled={\n                  !isValidEmail ||\n                  !isValidPassword ||\n                  !isValidContact1 ||\n                  !isValidConfirmPassword ||\n                  !isValidContact2 ||\n                  password !== confirmPassword\n                }\n                style={{ margin: \"0 auto\" }}\n              >\n                Submit\n              </button>\n            </div>\n            <h1 className=\"help has-text-centered is-size-5 is-success\">\n              {data ? data.registerPatient : \"\"}\n            </h1>\n            <p className=\"help has-text-centered is-size-5 is-danger\">\n              {error ? error : \"\"}\n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default RegisterPatient;\n","import React, { useState } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport { REGISTER_PATIENT } from \"../../../graphql/mutation\";\nimport RegisterPatient from \"./register-patient.component\";\n\nconst RegisterPatientContainer = (props) => {\n  const [err, setErr] = useState(\"\");\n  return (\n    <Mutation\n      mutation={REGISTER_PATIENT}\n      onError={(err) => {\n        if (err.graphQLErrors) {\n          setErr(\n            err.graphQLErrors.map((error) => {\n              return error.message;\n            })\n          );\n        }\n        if (err.networkError) {\n          setErr(err.networkError.message);\n        }\n      }}\n    >\n      {(registerPatient, { loading, error, data }) => {\n        if (loading) {\n          setErr(\"\");\n        }\n        return (\n          <RegisterPatient\n            {...props}\n            registerPatient={(args) => {\n              registerPatient({\n                variables: { ...args },\n              });\n            }}\n            loading={loading}\n            error={err}\n            data={data}\n          ></RegisterPatient>\n        );\n      }}\n    </Mutation>\n  );\n};\n\nexport default RegisterPatientContainer;\n","import React from \"react\";\n\nconst Gethospital = (props) => {\n  const {\n    hospitalSelected,\n    setHospitalSelected,\n    hospitals,\n    hospital,\n    setHospital,\n    loading,\n    error,\n  } = props;\n  return (\n    <div className=\"field\">\n      <label className=\"label\">Hospital</label>\n      <div className=\"control\">\n        <input\n          className=\"input\"\n          type=\"text\"\n          placeholder=\"Hospital\"\n          value={hospitalSelected}\n          onChange={(event) => {\n            const value = event.target.value;\n            setHospitalSelected(value);\n          }}\n        />\n      </div>\n      <div className={`select ${loading ? \"is-loading\" : \"\"}`}>\n        <select\n          value={hospital}\n          onChange={(event) => {\n            const { value, selectedOptions } = event.target;\n            setHospital(value);\n            setHospitalSelected(selectedOptions[0].innerText);\n          }}\n        >\n          <option value=\"\" disabled>\n            Choose here\n          </option>\n          {hospitals.map((eachHospital, key) => {\n            return (\n              <option key={key} value={eachHospital.hospitalId}>\n                {eachHospital.name}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n      <p className=\"help is-danger\">{error ? error : \"\"}</p>\n    </div>\n  );\n};\n\nexport default Gethospital;\n","import React, { useState } from \"react\";\nimport { Query } from \"react-apollo\";\nimport { GET_HOSPITAL } from \"../../graphql/queries\";\nimport Gethospital from \"./get-hospital.component\";\n\nconst GetHospitalContainer = (props) => {\n  const [hospitalSelected, setHospitalSelected] = useState(\"\");\n  const [hospitals, setHospitals] = useState([]);\n  const { hospital, setHospital } = props;\n  return (\n    <Query\n      query={GET_HOSPITAL}\n      variables={{\n        name: hospitalSelected ? hospitalSelected : \"a\",\n      }}\n    >\n      {({ loading, errors, data }) => {\n        if (!loading && !errors) {\n          setHospitals(data.getHospital);\n        }\n        return (\n          <Gethospital\n            hospitalSelected={hospitalSelected}\n            setHospitalSelected={setHospitalSelected}\n            hospitals={hospitals}\n            loading={loading}\n            error={\n              errors\n                ? errors.graphQLErrors.map((error) => {\n                    return error.message;\n                  })\n                : null\n            }\n            hospital={hospital}\n            setHospital={setHospital}\n          ></Gethospital>\n        );\n      }}\n    </Query>\n  );\n};\n\nexport default GetHospitalContainer;\n","import React, { useState } from \"react\";\nimport GetHospitalContainer from \"../../../components/get-hospital/get-hospital.container\";\n\nconst RegisterMedicalPractitioner = (props) => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [middleName, setMiddleName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isValidEmail, setValidEmail] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [isValidPassword, setValidPassword] = useState(false);\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [isValidConfirmPassword, setValidConfirmPassword] = useState(false);\n  const [dob, setDOB] = useState(\"\");\n  const [sex, setSex] = useState(\"Male\");\n  const [address, setAddress] = useState(\"\");\n  const [clinicAddress, setClinicAddress] = useState(\"\");\n  const [degree, setDegree] = useState(\"\");\n  const [field, setField] = useState(\"\");\n  const [hospital, setHospital] = useState(\"\");\n  const { registerMedicalPractitioner, loading, error, data } = props;\n  const onSubmit = () => {\n    registerMedicalPractitioner({\n      firstName,\n      middleName,\n      lastName,\n      dob,\n      sex,\n      email,\n      password,\n      address,\n      clinicAddress,\n      degree,\n      field,\n      hospital,\n    });\n  };\n  return (\n    <section className=\"hero is-small is-light is-bold\">\n      <div className=\"hero-body\">\n        <div className=\"container has-text-centered\">\n          <h1 className=\"title\">Register as Medical Practitioner</h1>\n          <br />\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">First Name</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"First Name\"\n                  value={firstName}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setFirstName(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Middle Name</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Middle Name\"\n                  value={middleName}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setMiddleName(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Last Name</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Last Name\"\n                  value={lastName}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setLastName(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Date of Birth</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"date\"\n                  placeholder=\"DOB\"\n                  value={dob}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setDOB(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Email</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  value={email}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    const emailValid = value.match(\n                      /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i\n                    );\n                    setValidEmail(emailValid);\n                    setEmail(value);\n                  }}\n                />\n              </div>\n              <p className=\"help is-danger\">\n                {!isValidEmail ? \"This email is invalid\" : \"\"}\n              </p>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Gender</label>\n              <div className=\"select\">\n                <select\n                  value={sex}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setSex(value);\n                  }}\n                >\n                  <option value=\"Male\">Male</option>\n                  <option value=\"Female\">Female</option>\n                  <option value=\"Transgender\">Transgender</option>\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Password</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  value={password}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    const passwordValid = value.match(\n                      /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,32}$/\n                    );\n                    setValidPassword(passwordValid);\n                    setPassword(value);\n                  }}\n                />\n              </div>\n              <p className=\"help is-danger\">\n                {!isValidPassword\n                  ? \"This password should have atleast one number and one character from @$!%*#?&\"\n                  : \"\"}\n              </p>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Confirm Password</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"password\"\n                  placeholder=\"Confirm Password\"\n                  value={confirmPassword}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    const passwordValid = value.match(\n                      /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,32}$/\n                    );\n                    setValidConfirmPassword(passwordValid);\n                    setConfirmPassword(value);\n                  }}\n                />\n              </div>\n              <p className=\"help is-danger\">\n                {!isValidConfirmPassword\n                  ? \"This password is invalid\"\n                  : password !== confirmPassword\n                  ? \"Passwords Do not Match\"\n                  : \"\"}\n              </p>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Address</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Address\"\n                  value={address}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setAddress(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Clinic Address</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Clinic Address\"\n                  value={clinicAddress}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setClinicAddress(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <GetHospitalContainer\n              hospital={hospital}\n              setHospital={setHospital}\n            ></GetHospitalContainer>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Degree</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Degree\"\n                  value={degree}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setDegree(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Field</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Field\"\n                  value={field}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setField(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-quarter-desktop\">\n            <div className=\"buttons\">\n              <button\n                className={`button is-success ${loading ? \"is-loading\" : \"\"}`}\n                onClick={(event) => {\n                  event.preventDefault();\n                  onSubmit();\n                }}\n                disabled={\n                  !isValidEmail ||\n                  !isValidPassword ||\n                  !isValidConfirmPassword ||\n                  password !== confirmPassword\n                }\n                style={{ margin: \"0 auto\" }}\n              >\n                Submit\n              </button>\n            </div>\n            <h1 className=\"help has-text-centered is-size-5 is-success\">\n              {data ? data.registerMedicalPractitioner : \"\"}\n            </h1>\n            <p className=\"help has-text-centered is-size-5 is-danger\">\n              {error ? error : \"\"}\n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default RegisterMedicalPractitioner;\n","import React, { useState } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport { REGISTER_MEDICAL_PRACTITIONER } from \"../../../graphql/mutation\";\nimport RegisterMedicalPractitioner from \"./register-medical-practitioner.component\";\n\nconst RegisterMedicalPractitionerContainer = (props) => {\n  const [err, setErr] = useState(\"\");\n  return (\n    <Mutation\n      mutation={REGISTER_MEDICAL_PRACTITIONER}\n      onError={(err) => {\n        if (err.graphQLErrors) {\n          setErr(\n            err.graphQLErrors.map((error) => {\n              return error.message;\n            })\n          );\n        }\n        if (err.networkError) {\n          setErr(err.networkError.message);\n        }\n      }}\n    >\n      {(registerMedicalPractitioner, { loading, error, data }) => {\n        if (loading) {\n          setErr(\"\");\n        }\n        return (\n          <RegisterMedicalPractitioner\n            {...props}\n            registerMedicalPractitioner={(args) => {\n              registerMedicalPractitioner({\n                variables: { ...args },\n              });\n            }}\n            loading={loading}\n            error={err}\n            data={data}\n          ></RegisterMedicalPractitioner>\n        );\n      }}\n    </Mutation>\n  );\n};\n\nexport default RegisterMedicalPractitionerContainer;\n","import React, { useState } from \"react\";\nimport GetCountryContainer from \"../../../components/get-country/get-country.container\";\nimport GetHospitalContainer from \"../../../components/get-hospital/get-hospital.container\";\n\nconst RegisterDatabaseAdmin = (props) => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [middleName, setMiddleName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isValidEmail, setValidEmail] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [isValidPassword, setValidPassword] = useState(false);\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [isValidConfirmPassword, setValidConfirmPassword] = useState(false);\n  const [dob, setDOB] = useState(\"\");\n  const [sex, setSex] = useState(\"Male\");\n  const [address, setAddress] = useState(\"\");\n  const [countryCode, setCountryCode] = useState(\"\");\n  const [contact, setContact] = useState(\"\");\n  const [isValidContact, setValidContact] = useState(false);\n  const [hospital, setHospital] = useState(\"\");\n  const { registerDatabaseAdmin, loading, error, data } = props;\n  const onSubmit = () => {\n    registerDatabaseAdmin({\n      firstName,\n      middleName,\n      lastName,\n      dob,\n      sex,\n      email,\n      password,\n      address,\n      country: countryCode,\n      contact,\n      hospital,\n    });\n  };\n  return (\n    <section className=\"hero is-small is-light is-bold\">\n      <div className=\"hero-body\">\n        <div className=\"container has-text-centered\">\n          <h1 className=\"title\">Register as Database Admin</h1>\n          <br />\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">First Name</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"First Name\"\n                  value={firstName}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setFirstName(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Middle Name</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Middle Name\"\n                  value={middleName}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setMiddleName(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Last Name</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Last Name\"\n                  value={lastName}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setLastName(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Date of Birth</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"date\"\n                  placeholder=\"DOB\"\n                  value={dob}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setDOB(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Email</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  value={email}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    const emailValid = value.match(\n                      /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i\n                    );\n                    setValidEmail(emailValid);\n                    setEmail(value);\n                  }}\n                />\n              </div>\n              <p className=\"help is-danger\">\n                {!isValidEmail ? \"This email is invalid\" : \"\"}\n              </p>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Gender</label>\n              <div className=\"select\">\n                <select\n                  value={sex}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setSex(value);\n                  }}\n                >\n                  <option value=\"Male\">Male</option>\n                  <option value=\"Female\">Female</option>\n                  <option value=\"Transgender\">Transgender</option>\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Password</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  value={password}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    const passwordValid = value.match(\n                      /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,32}$/\n                    );\n                    setValidPassword(passwordValid);\n                    setPassword(value);\n                  }}\n                />\n              </div>\n              <p className=\"help is-danger\">\n                {!isValidPassword\n                  ? \"This password should have atleast one number and one character from @$!%*#?&\"\n                  : \"\"}\n              </p>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Confirm Password</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"password\"\n                  placeholder=\"Confirm Password\"\n                  value={confirmPassword}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    const passwordValid = value.match(\n                      /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,32}$/\n                    );\n                    setValidConfirmPassword(passwordValid);\n                    setConfirmPassword(value);\n                  }}\n                />\n              </div>\n              <p className=\"help is-danger\">\n                {!isValidConfirmPassword\n                  ? \"This password is invalid\"\n                  : password !== confirmPassword\n                  ? \"Passwords Do not Match\"\n                  : \"\"}\n              </p>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Address</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Address\"\n                  value={address}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setAddress(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <GetCountryContainer\n              countryCode={countryCode}\n              setCountryCode={setCountryCode}\n            ></GetCountryContainer>\n          </div>\n          <div className=\"column is-oreturn <div>Register Database Admin</div>;ne-third-desktop\">\n            <GetHospitalContainer\n              hospital={hospital}\n              setHospital={setHospital}\n            ></GetHospitalContainer>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Contact</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Contact\"\n                  value={contact}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    const contactValid = value.match(\n                      /^[+]\\d{2,4}-\\d{3}\\d{3}\\d{4}$/\n                    );\n                    setValidContact(contactValid);\n                    setContact(value);\n                  }}\n                />\n              </div>\n              <p className=\"help is-danger\">\n                {!isValidContact\n                  ? \"Supported format +[CountryCode]-[10 digit number]\"\n                  : \"\"}\n              </p>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-quarter-desktop\">\n            <div className=\"buttons\">\n              <button\n                className={`button is-success ${loading ? \"is-loading\" : \"\"}`}\n                onClick={(event) => {\n                  event.preventDefault();\n                  onSubmit();\n                }}\n                disabled={\n                  !isValidEmail ||\n                  !isValidPassword ||\n                  !isValidConfirmPassword ||\n                  !isValidContact ||\n                  password !== confirmPassword\n                }\n                style={{ margin: \"0 auto\" }}\n              >\n                Submit\n              </button>\n            </div>\n            <h1 className=\"help has-text-centered is-size-5 is-success\">\n              {data ? data.registerDatabaseAdmin : \"\"}\n            </h1>\n            <p className=\"help has-text-centered is-size-5 is-danger\">\n              {error ? error : \"\"}\n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default RegisterDatabaseAdmin;\n","import React, { useState } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport { REGISTER_DATABASE_ADMIN } from \"../../../graphql/mutation\";\nimport RegisterDatabaseAdmin from \"./register-database-admin.component\";\n\nconst RegisterDatabaseAdminContainer = (props) => {\n  const [err, setErr] = useState(\"\");\n  return (\n    <Mutation\n      mutation={REGISTER_DATABASE_ADMIN}\n      onError={(err) => {\n        if (err.graphQLErrors) {\n          setErr(\n            err.graphQLErrors.map((error) => {\n              return error.message;\n            })\n          );\n        }\n        if (err.networkError) {\n          setErr(err.networkError.message);\n        }\n      }}\n    >\n      {(registerDatabaseAdmin, { loading, error, data }) => {\n        if (loading) {\n          setErr(\"\");\n        }\n        return (\n          <RegisterDatabaseAdmin\n            {...props}\n            registerDatabaseAdmin={(args) => {\n              registerDatabaseAdmin({\n                variables: { ...args },\n              });\n            }}\n            loading={loading}\n            error={err}\n            data={data}\n          ></RegisterDatabaseAdmin>\n        );\n      }}\n    </Mutation>\n  );\n};\n\nexport default RegisterDatabaseAdminContainer;\n","import React, { useContext } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport Register from \"./register.component\";\nimport { CurrentUserContext } from \"../../providers/currentUser.provider\";\nimport RegisterPatientContainer from \"./patient/register-patient.container\";\nimport RegisterMedicalPractitionerContainer from \"./medical-practitioner/register-medical-practitioner.container\";\nimport RegisterDatabaseAdminContainer from \"./database-admin/register-database-admin.container\";\n\nconst RegisterContainer = (props) => {\n  const { match } = props;\n  const { currentUser } = useContext(CurrentUserContext);\n  if (currentUser) {\n    return <Redirect to=\"/\"></Redirect>;\n  }\n  return (\n    <Switch>\n      <Route exact path={`${match.path}`} component={Register}></Route>\n      <Route\n        exact\n        path={`${match.path}/patient`}\n        component={RegisterPatientContainer}\n      ></Route>\n      <Route\n        exact\n        path={`${match.path}/medical-practitioner`}\n        component={RegisterMedicalPractitionerContainer}\n      ></Route>\n      <Route\n        exact\n        path={`${match.path}/database-admin`}\n        component={RegisterDatabaseAdminContainer}\n      ></Route>\n    </Switch>\n  );\n};\n\nexport default RegisterContainer;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer is-dark\">\n      <div className=\"content has-text-centered\">\n        <p>\n          <strong className=\"is-size-4 is-uppercase is-family-code\">\n            Medrec\n          </strong>\n          <br />\n          <a href=\"https://github.com/TnSor06/MedRec-Server_v2\">\n            Server Code\n          </a>{\" \"}\n          built over Node, Prisma, GraphQL.{\" \"}\n          <a href=\"https://github.com/TnSor06/MedRec-Client\">Client Code</a>{\" \"}\n          built over React, React-GraphQL, Apollo-Client, Bulma.\n        </p>\n        <p>\n          <strong className=\"is-size-5 is-uppercase is-family-code\">\n            Note\n          </strong>\n          <br />\n          Don't see some changes immediately?\n          <br />\n          <button\n            className=\"button is-dark\"\n            onClick={() => {\n              window.location.reload();\n            }}\n          >\n            Press This!\n          </button>\n        </p>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { CurrentUserContext } from \"../../providers/currentUser.provider\";\nconst Update = (props) => {\n  const { currentUser } = useContext(CurrentUserContext);\n  return (\n    <div className=\"homepage-wrapper\">\n      <section className=\"hero is-large is-light is-bold\">\n        <div className=\"hero-body\">\n          <div className=\"container has-text-centered\">\n            <h1 className=\"title\">Update Details</h1>\n            <Link to=\"/update/password\">Change Password</Link>\n            {currentUser.role === \"Patient\" ? (\n              <div>\n                <Link to=\"/update/patient-details\">\n                  Change Personal Details\n                </Link>\n                <Link to=\"/update/patient-health\">\n                  Change Health Related Details\n                </Link>\n              </div>\n            ) : (\n              <Link to=\"/update/details\">Change Personal Details</Link>\n            )}\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Update;\n","import React, { useState } from \"react\";\n\nconst ChangePassword = (props) => {\n  const [passwordTouch, setPasswordTouch] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [isValidPassword, setValidPassword] = useState(false);\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [isValidConfirmPassword, setValidConfirmPassword] = useState(false);\n  const { update, loading, error, data } = props;\n  const onSubmit = () => {\n    update(password);\n    window.location.reload();\n  };\n  return (\n    <section className=\"hero is-small is-light is-bold\">\n      <div className=\"hero-body\">\n        <div className=\"container has-text-centered\">\n          <h1 className=\"title\">Update Password</h1>\n          <br />\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Password</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  value={password}\n                  onChange={(event) => {\n                    setPasswordTouch(true);\n                    const value = event.target.value;\n                    const passwordValid = value.match(\n                      /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,32}$/\n                    );\n                    setValidPassword(passwordValid);\n                    setPassword(value);\n                  }}\n                />\n              </div>\n              <p className=\"help is-danger\">\n                {!isValidPassword\n                  ? \"This password should have atleast one number and one character from @$!%*#?&\"\n                  : \"\"}\n              </p>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Confirm Password</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"password\"\n                  placeholder=\"Confirm Password\"\n                  value={confirmPassword}\n                  onChange={(event) => {\n                    setPasswordTouch(true);\n                    const value = event.target.value;\n                    const passwordValid = value.match(\n                      /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,32}$/\n                    );\n                    setValidConfirmPassword(passwordValid);\n                    setConfirmPassword(value);\n                  }}\n                />\n              </div>\n              <p className=\"help is-danger\">\n                {!isValidConfirmPassword\n                  ? \"This password is invalid\"\n                  : password !== confirmPassword\n                  ? \"Passwords Do not Match\"\n                  : \"\"}\n              </p>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-quarter-desktop\">\n            <div className=\"buttons\">\n              <button\n                className={`button is-success ${loading ? \"is-loading\" : \"\"}`}\n                onClick={(event) => {\n                  event.preventDefault();\n                  onSubmit();\n                }}\n                disabled={\n                  !passwordTouch ||\n                  !isValidPassword ||\n                  !isValidConfirmPassword ||\n                  password !== confirmPassword\n                }\n                style={{ margin: \"0 auto\" }}\n              >\n                Update\n              </button>\n            </div>\n            {data ? (\n              <div>\n                <h1 className=\"help has-text-centered is-size-5 is-success\">\n                  Password Changed Successfully\n                </h1>\n                <button\n                  className={`button is-success is-centered`}\n                  onClick={(event) => {\n                    event.preventDefault();\n                    window.location.reload();\n                  }}\n                  style={{ margin: \"0 auto\", width: \"100%\" }}\n                >\n                  Reload\n                </button>\n              </div>\n            ) : (\n              \"\"\n            )}\n            <p className=\"help has-text-centered is-size-5 is-danger\">\n              {error ? error : \"\"}\n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default ChangePassword;\n","import React, { useContext, useState } from \"react\";\nimport ChangePassword from \"./change-password.component\";\nimport { CurrentUserContext } from \"../../providers/currentUser.provider\";\nimport { gql } from \"apollo-boost\";\nimport { Mutation } from \"react-apollo\";\n\nconst ChangePasswordContainer = (props) => {\n  const [err, setErr] = useState(\"\");\n  const { currentUser } = useContext(CurrentUserContext);\n  const UPDATE_PASSWORD = gql`\n  mutation update${currentUser.role}($password: String!) {\n    update${currentUser.role}(data: { password: $password }) \n  }\n`;\n  return (\n    <Mutation\n      mutation={UPDATE_PASSWORD}\n      onError={(err) => {\n        setErr(\n          err.graphQLErrors.map((error) => {\n            return error.message;\n          })\n        );\n      }}\n    >\n      {(updateFn, { loading, error, data }) => {\n        return (\n          <ChangePassword\n            {...props}\n            loading={loading}\n            data={data}\n            error={err}\n            update={(password) => {\n              updateFn({\n                variables: { password },\n              });\n            }}\n          ></ChangePassword>\n        );\n      }}\n    </Mutation>\n  );\n};\n\nexport default ChangePasswordContainer;\n","import React, { useState } from \"react\";\n\nconst Details = (props) => {\n  const { dataFromQuery, labels, error, loading, data, update } = props;\n  const [value1, setValue1] = useState(dataFromQuery[labels[0].key]);\n  const [value2, setValue2] = useState(dataFromQuery[labels[1].key]);\n  const [isValidContact, setValidContact] = useState(true);\n  const onSubmit = () => {\n    update(value1, value2);\n    window.location.reload();\n  };\n  return (\n    <section className=\"hero is-small is-light is-bold\">\n      <div className=\"hero-body\">\n        <div className=\"container has-text-centered\">\n          <h1 className=\"title\">Update Details</h1>\n          <br />\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">{labels[0].name}</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder={labels[0].name}\n                  value={value1}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setValue1(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            {labels[1].name === \"Contact\" ? (\n              <div className=\"field\">\n                <label className=\"label\">{labels[1].name}</label>\n                <div className=\"control\">\n                  <input\n                    className=\"input\"\n                    type=\"text\"\n                    placeholder={labels[1].name}\n                    value={value2}\n                    onChange={(event) => {\n                      const value = event.target.value;\n                      const contactValid = value.match(\n                        /^[+]\\d{2,4}-\\d{3}\\d{3}\\d{4}$/\n                      );\n                      setValidContact(contactValid);\n                      setValue2(value);\n                    }}\n                  />\n                </div>\n                <p className=\"help is-danger\">\n                  {!isValidContact\n                    ? \"Supported format +[CountryCode]-[10 digit number]\"\n                    : \"\"}\n                </p>\n              </div>\n            ) : (\n              <div className=\"field\">\n                <label className=\"label\">{labels[1].name}</label>\n                <div className=\"control\">\n                  <input\n                    className=\"input\"\n                    type=\"text\"\n                    placeholder={labels[1].name}\n                    value={value2}\n                    onChange={(event) => {\n                      const value = event.target.value;\n                      setValue2(value);\n                    }}\n                  />\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-quarter-desktop\">\n            <div className=\"buttons\">\n              <button\n                className={`button is-success ${loading ? \"is-loading\" : \"\"}`}\n                onClick={(event) => {\n                  event.preventDefault();\n                  onSubmit();\n                }}\n                style={{ margin: \"0 auto\" }}\n              >\n                Update\n              </button>\n            </div>\n\n            {data ? (\n              <div>\n                <h1 className=\"help has-text-centered is-size-5 is-success\">\n                  Information Updated Successfully. Reload to watch the changes\n                </h1>\n                <button\n                  className={`button is-success is-centered`}\n                  onClick={(event) => {\n                    event.preventDefault();\n                    window.location.reload();\n                  }}\n                  style={{ margin: \"0 auto\", width: \"100%\" }}\n                >\n                  Reload\n                </button>\n              </div>\n            ) : (\n              \"\"\n            )}\n\n            <p className=\"help has-text-centered is-size-5 is-danger\">\n              {error ? error : \"\"}\n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Details;\n","import React, { useState, useContext } from \"react\";\nimport { CurrentUserContext } from \"../../../providers/currentUser.provider\";\nimport { Redirect } from \"react-router-dom\";\nimport { Query, Mutation } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\nimport { Spinner } from \"../../../components/spinner/spinner.component\";\nimport Details from \"./details.component\";\n\nconst DetailsContainer = (props) => {\n  const [err, setErr] = useState(\"\");\n  const { currentUser } = useContext(CurrentUserContext);\n  if (!currentUser || currentUser.role === \"Patient\") {\n    return <Redirect to=\"/update\"></Redirect>;\n  }\n  const query = gql`\n        {\n          me${currentUser.role} {\n              address\n            ${\n              currentUser.role === \"MedicalPractitioner\"\n                ? \"clinicAddress\"\n                : \"contact\"\n            }\n          }\n        }\n      `;\n  const mutation = gql`\n        mutation update${currentUser.role}($address: String!,${\n    currentUser.role === \"MedicalPractitioner\"\n      ? \"$clinicAddress: String!\"\n      : \"$contact: String!\"\n  }) {\n            update${currentUser.role}(data: { address: $address,${\n    currentUser.role === \"MedicalPractitioner\"\n      ? \"clinicAddress:$clinicAddress\"\n      : \"contact:$contact\"\n  } }) \n        }\n      `;\n  return (\n    <Query\n      query={query}\n      onError={(err) => {\n        if (err.graphQLErrors) {\n          setErr(\n            err.graphQLErrors.map((error) => {\n              return error.message;\n            })\n          );\n        }\n        if (err.networkError) {\n          setErr(err.networkError.message);\n        }\n      }}\n    >\n      {({ loading, errors, data }) => {\n        const labels = [\n          { name: \"Address\", key: \"address\" },\n          currentUser.role === \"MedicalPractitioner\"\n            ? { name: \"Clinic Address\", key: \"clinicAddress\" }\n            : { name: \"Contact\", key: \"contact\" },\n        ];\n        const dataFromQuery = data ? data[`me${currentUser.role}`] : null;\n        if (loading) {\n          setErr(\"\");\n          return <Spinner></Spinner>;\n        }\n        if (err) {\n          return (\n            <section className=\"hero is-small is-light is-bold\">\n              <div className=\"hero-body\">\n                <div className=\"container has-text-centered\">\n                  <h1 className=\"title\">Update Details</h1>\n                  <br />\n                  <p className=\"help is-size-5 is-danger\">{err ? err : \"\"}</p>\n                </div>\n              </div>\n            </section>\n          );\n        }\n        return (\n          <Mutation mutation={mutation}>\n            {(updateFn, { loading, error, data }) => {\n              return (\n                <Details\n                  {...props}\n                  labels={labels}\n                  dataFromQuery={dataFromQuery}\n                  loading={loading}\n                  error={\n                    error\n                      ? error.graphQLErrors.map((error) => {\n                          return error.message;\n                        })\n                      : null\n                  }\n                  update={(value1, value2) => {\n                    updateFn({\n                      variables: {\n                        address: value1,\n                        ...(currentUser.role === \"MedicalPractitioner\" && {\n                          clinicAddress: value2,\n                        }),\n                        ...(currentUser.role === \"DatabaseAdmin\" && {\n                          contact: value2,\n                        }),\n                      },\n                    });\n                  }}\n                  data={data}\n                ></Details>\n              );\n            }}\n          </Mutation>\n        );\n      }}\n    </Query>\n  );\n};\n\nexport default DetailsContainer;\n","import React, { useState } from \"react\";\n\nconst PatientHealth = (props) => {\n  const { dataFromQuery, error, loading, data, update } = props;\n  const [immunizationHistory, setImmunizationHistory] = useState(\n    dataFromQuery.immunizationHistory\n  );\n  const [allergyStatus, setAllergyStatus] = useState(\n    dataFromQuery.allergyStatus\n  );\n  const [organDonorStatus, setOrganDonorStatus] = useState(\n    dataFromQuery.organDonorStatus\n  );\n  const [PMH, setPMH] = useState(dataFromQuery.PMH);\n  const [DHx, setDHx] = useState(dataFromQuery.DHx);\n  const [Ca, setCa] = useState(dataFromQuery.Ca);\n  const [IDDM, setIDDM] = useState(dataFromQuery.IDDM);\n  const [NIDDM, setNIDDM] = useState(dataFromQuery.NIDDM);\n  const [COPD, setCOPD] = useState(dataFromQuery.COPD);\n  const [MI, setMI] = useState(dataFromQuery.MI);\n  const [AF, setAF] = useState(dataFromQuery.AF);\n  const onSubmit = () => {\n    update({\n      immunizationHistory,\n      allergyStatus,\n      organDonorStatus,\n      PMH,\n      DHx,\n      Ca,\n      IDDM,\n      NIDDM,\n      COPD,\n      MI,\n      AF,\n    });\n  };\n  return (\n    <section className=\"hero is-small is-light is-bold\">\n      <div className=\"hero-body\">\n        <div className=\"container has-text-centered\">\n          <h1 className=\"title\">Update Patient Health Details</h1>\n          <br />\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Immunization History</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Immunization History\"\n                  value={immunizationHistory}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setImmunizationHistory(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">PMH</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"PMH\"\n                  value={PMH}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setPMH(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">DHx</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"DHx\"\n                  value={DHx}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setDHx(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Allergy Status</label>\n              <div className=\"select\">\n                <select\n                  value={allergyStatus}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setAllergyStatus(value === \"true\" ? true : false);\n                  }}\n                >\n                  <option value={true}>Yes</option>\n                  <option value={false}>No</option>\n                </select>\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Organ Donor Status</label>\n              <div className=\"select\">\n                <select\n                  value={organDonorStatus}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setOrganDonorStatus(value === \"true\" ? true : false);\n                  }}\n                >\n                  <option value={true}>Yes</option>\n                  <option value={false}>No</option>\n                </select>\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Ca</label>\n              <div className=\"select\">\n                <select\n                  value={Ca}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setCa(value === \"true\" ? true : false);\n                  }}\n                >\n                  <option value={true}>Yes</option>\n                  <option value={false}>No</option>\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">IDDM</label>\n              <div className=\"select\">\n                <select\n                  value={IDDM}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setIDDM(value === \"true\" ? true : false);\n                  }}\n                >\n                  <option value={true}>Yes</option>\n                  <option value={false}>No</option>\n                </select>\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">NIDDM</label>\n              <div className=\"select\">\n                <select\n                  value={NIDDM}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setNIDDM(value === \"true\" ? true : false);\n                  }}\n                >\n                  <option value={true}>Yes</option>\n                  <option value={false}>No</option>\n                </select>\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">COPD</label>\n              <div className=\"select\">\n                <select\n                  value={COPD}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setCOPD(value === \"true\" ? true : false);\n                  }}\n                >\n                  <option value={true}>Yes</option>\n                  <option value={false}>No</option>\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">MI</label>\n              <div className=\"select\">\n                <select\n                  value={MI}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setMI(value === \"true\" ? true : false);\n                  }}\n                >\n                  <option value={true}>Yes</option>\n                  <option value={false}>No</option>\n                </select>\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">AF</label>\n              <div className=\"select\">\n                <select\n                  value={AF}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setAF(value === \"true\" ? true : false);\n                  }}\n                >\n                  <option value={true}>Yes</option>\n                  <option value={false}>No</option>\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-quarter-desktop\">\n            <div className=\"buttons\">\n              <button\n                className={`button is-success ${loading ? \"is-loading\" : \"\"}`}\n                onClick={(event) => {\n                  event.preventDefault();\n                  onSubmit();\n                }}\n                style={{ margin: \"0 auto\" }}\n              >\n                Update\n              </button>\n            </div>\n            <h1 className=\"help has-text-centered is-size-5 is-success\">\n              {data ? data.updatePatient : \"\"}\n            </h1>\n            <p className=\"help has-text-centered is-size-5 is-danger\">\n              {error ? error : \"\"}\n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default PatientHealth;\n","import { gql } from \"apollo-boost\";\nimport React, { useContext, useState } from \"react\";\nimport { Mutation, Query } from \"react-apollo\";\nimport { Redirect } from \"react-router-dom\";\nimport { Spinner } from \"../../../components/spinner/spinner.component\";\nimport { CurrentUserContext } from \"../../../providers/currentUser.provider\";\nimport PatientHealth from \"./patient-health.component\";\n\nconst PatientHealthContainer = (props) => {\n  const { currentUser } = useContext(CurrentUserContext);\n  const [err, setErr] = useState(\"\");\n  const query = gql`\n    {\n      mePatient {\n        immunizationHistory\n        allergyStatus\n        organDonorStatus\n        PMH\n        DHx\n        Ca\n        IDDM\n        NIDDM\n        COPD\n        MI\n        AF\n      }\n    }\n  `;\n  const mutation = gql`\n    mutation updatePatient(\n      $immunizationHistory: String\n      $allergyStatus: Boolean\n      $organDonorStatus: Boolean\n      $PMH: String\n      $DHx: String\n      $Ca: Boolean\n      $IDDM: Boolean\n      $NIDDM: Boolean\n      $COPD: Boolean\n      $MI: Boolean\n      $AF: Boolean\n    ) {\n      updatePatient(\n        data: {\n          immunizationHistory: $immunizationHistory\n          allergyStatus: $allergyStatus\n          organDonorStatus: $organDonorStatus\n          PMH: $PMH\n          DHx: $DHx\n          Ca: $Ca\n          IDDM: $IDDM\n          NIDDM: $NIDDM\n          COPD: $COPD\n          MI: $MI\n          AF: $AF\n        }\n      )\n    }\n  `;\n  if (!currentUser || currentUser.role !== \"Patient\") {\n    return <Redirect to=\"/\"></Redirect>;\n  }\n  return (\n    <Query\n      query={query}\n      onError={(error) => {\n        if (error && error.graphQLErrors) {\n          setErr(\n            error.graphQLErrors.map((each) => {\n              return each.message;\n            })\n          );\n        } else if (error && error.networkError) {\n          setErr(error.networkError.message);\n        }\n      }}\n    >\n      {({ loading, error, data }) => {\n        if (loading) {\n          setErr(\"\");\n          return <Spinner></Spinner>;\n        }\n        const dataFromQuery = data ? data[\"mePatient\"] : null;\n        if (err) {\n          return (\n            <section className=\"hero is-small is-light is-bold\">\n              <div className=\"hero-body\">\n                <div className=\"container has-text-centered\">\n                  <h1 className=\"title\">Update Patient Details</h1>\n                  <br />\n                  <p className=\"help is-size-5 is-danger\">{err ? err : \"\"}</p>\n                </div>\n              </div>\n            </section>\n          );\n        }\n        return (\n          <Mutation mutation={mutation}>\n            {(updateFn, { loading, error, data }) => {\n              return (\n                <PatientHealth\n                  {...props}\n                  dataFromQuery={dataFromQuery}\n                  loading={loading}\n                  error={\n                    error\n                      ? error.graphQLErrors.map((error) => {\n                          return error.message;\n                        })\n                      : null\n                  }\n                  update={(data) => {\n                    updateFn({\n                      variables: {\n                        ...data,\n                      },\n                    });\n                  }}\n                  data={data}\n                ></PatientHealth>\n              );\n            }}\n          </Mutation>\n        );\n      }}\n    </Query>\n  );\n};\n\nexport default PatientHealthContainer;\n","import React, { useState } from \"react\";\nimport GetCountryContainer from \"../../../components/get-country/get-country.container\";\nimport GetRegionContainer from \"../../../components/get-region/get-region.container\";\n\nconst PatientDetails = (props) => {\n  const { dataFromQuery, error, loading, data, update } = props;\n  const [religion, setReligion] = useState(dataFromQuery.religion);\n  const [maritalStatus, setMaritalStatus] = useState(\n    dataFromQuery.maritalStatus\n  );\n  const [primaryLanguage, setPrimaryLanguage] = useState(\n    dataFromQuery.primaryLanguage\n  );\n  const [address, setAddress] = useState(dataFromQuery.address);\n  const [pincode, setPincode] = useState(dataFromQuery.pincode.pincode);\n  const [countryCode, setCountryCode] = useState(\n    dataFromQuery.country.countryCode\n  );\n  const [occupation, setOccupation] = useState(dataFromQuery.occupation);\n  const [contact1, setContact1] = useState(dataFromQuery.contact1);\n  const [isValidContact1, setValidContact1] = useState(true);\n  const [contact2, setContact2] = useState(dataFromQuery.contact2);\n  const [isValidContact2, setValidContact2] = useState(true);\n  const [socioEcoStatus, setSocioEcoStatus] = useState(\n    dataFromQuery.socioEcoStatus\n  );\n  const onSubmit = () => {\n    update({\n      religion,\n      maritalStatus,\n      primaryLanguage,\n      address,\n      pincode: pincode.toString(),\n      country: countryCode.toString(),\n      occupation,\n      contact1,\n      contact2,\n      socioEcoStatus,\n    });\n  };\n  return (\n    <section className=\"hero is-small is-light is-bold\">\n      <div className=\"hero-body\">\n        <div className=\"container has-text-centered\">\n          <h1 className=\"title\">Update Patient Details</h1>\n          <br />\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Religion</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Religion\"\n                  value={religion}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setReligion(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Marital Status</label>\n              <div className=\"select\">\n                <select\n                  value={maritalStatus}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setMaritalStatus(value);\n                  }}\n                >\n                  <option value=\"Single\">Single</option>\n                  <option value=\"Married\">Married</option>\n                  <option value=\"Divorced\">Divorced</option>\n                  <option value=\"Widowed\">Widowed</option>\n                </select>\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Primary Language</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Primary Language\"\n                  value={primaryLanguage}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setPrimaryLanguage(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Address</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Address\"\n                  value={address}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setAddress(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <GetRegionContainer\n              region={dataFromQuery.pincode.region}\n              pincode={pincode}\n              setPincode={setPincode}\n            ></GetRegionContainer>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <GetCountryContainer\n              country={dataFromQuery.country.countryName}\n              countryCode={countryCode}\n              setCountryCode={setCountryCode}\n            ></GetCountryContainer>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Contact 1</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Contact 1\"\n                  value={contact1}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    const contactValid = value.match(\n                      /^[+]\\d{2,4}-\\d{3}\\d{3}\\d{4}$/\n                    );\n                    setValidContact1(contactValid);\n                    setContact1(value);\n                  }}\n                />\n              </div>\n              <p className=\"help is-danger\">\n                {!isValidContact1\n                  ? \"Supported format +[CountryCode]-[10 digit number]\"\n                  : \"\"}\n              </p>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Contact 2</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Contact 2\"\n                  value={contact2}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    const contactValid = value.match(\n                      /^[+]\\d{2,4}-\\d{3}\\d{3}\\d{4}$/\n                    );\n                    setValidContact2(contactValid);\n                    setContact2(value);\n                  }}\n                />\n              </div>\n              <p className=\"help is-danger\">\n                {!isValidContact2\n                  ? \"Supported format +[CountryCode]-[10 digit number]\"\n                  : \"\"}\n              </p>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Occupation</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Occupation\"\n                  value={occupation}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setOccupation(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Socio Eco Status</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Socio Eco Status\"\n                  value={socioEcoStatus}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setSocioEcoStatus(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-quarter-desktop\">\n            <div className=\"buttons\">\n              <button\n                className={`button is-success ${loading ? \"is-loading\" : \"\"}`}\n                onClick={(event) => {\n                  event.preventDefault();\n                  onSubmit();\n                }}\n                disabled={!isValidContact1 || !isValidContact2}\n                style={{ margin: \"0 auto\" }}\n              >\n                Update\n              </button>\n            </div>\n            <h1 className=\"help has-text-centered is-size-5 is-success\">\n              {data ? data.updatePatient : \"\"}\n            </h1>\n            <p className=\"help has-text-centered is-size-5 is-danger\">\n              {error ? error : \"\"}\n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default PatientDetails;\n","import { gql } from \"apollo-boost\";\nimport React, { useContext, useState } from \"react\";\nimport { Mutation, Query } from \"react-apollo\";\nimport { Redirect } from \"react-router-dom\";\nimport { Spinner } from \"../../../components/spinner/spinner.component\";\nimport { CurrentUserContext } from \"../../../providers/currentUser.provider\";\nimport PatientDetails from \"./patient-details.component\";\n\nconst PatientDetailsContainer = (props) => {\n  const { currentUser } = useContext(CurrentUserContext);\n  const [err, setErr] = useState(\"\");\n  const query = gql`\n    {\n      mePatient {\n        religion\n        maritalStatus\n        primaryLanguage\n        address\n        pincode {\n          pincode\n          region\n        }\n        country {\n          countryCode\n          countryName\n        }\n        occupation\n        contact1\n        contact2\n        socioEcoStatus\n      }\n    }\n  `;\n  const mutation = gql`\n    mutation updatePatient(\n      $religion: String\n      $maritalStatus: MaritalStatus\n      $primaryLanguage: String\n      $address: String\n      $pincode: String\n      $country: String\n      $occupation: String\n      $contact1: String\n      $contact2: String\n      $socioEcoStatus: String\n    ) {\n      updatePatient(\n        data: {\n          religion: $religion\n          maritalStatus: $maritalStatus\n          primaryLanguage: $primaryLanguage\n          address: $address\n          pincode: $pincode\n          country: $country\n          occupation: $occupation\n          contact1: $contact1\n          contact2: $contact2\n          socioEcoStatus: $socioEcoStatus\n        }\n      )\n    }\n  `;\n  if (!currentUser || currentUser.role !== \"Patient\") {\n    return <Redirect to=\"/\"></Redirect>;\n  }\n  return (\n    <Query\n      query={query}\n      onError={(error) => {\n        if (error && error.graphQLErrors) {\n          setErr(\n            error.graphQLErrors.map((each) => {\n              return each.message;\n            })\n          );\n        } else if (error && error.networkError) {\n          setErr(error.networkError.message);\n        }\n      }}\n    >\n      {({ loading, error, data }) => {\n        if (loading) {\n          setErr(\"\");\n          return <Spinner></Spinner>;\n        }\n        const dataFromQuery = data ? data[\"mePatient\"] : null;\n        if (err) {\n          return (\n            <section className=\"hero is-small is-light is-bold\">\n              <div className=\"hero-body\">\n                <div className=\"container has-text-centered\">\n                  <h1 className=\"title\">Update Patient Details</h1>\n                  <br />\n                  <p className=\"help is-size-5 is-danger\">{err ? err : \"\"}</p>\n                </div>\n              </div>\n            </section>\n          );\n        }\n        return (\n          <Mutation mutation={mutation}>\n            {(updateFn, { loading, error, data }) => {\n              return (\n                <PatientDetails\n                  {...props}\n                  dataFromQuery={dataFromQuery}\n                  loading={loading}\n                  error={\n                    error\n                      ? error.graphQLErrors.map((error) => {\n                          return error.message;\n                        })\n                      : null\n                  }\n                  update={(data) => {\n                    updateFn({\n                      variables: {\n                        ...data,\n                      },\n                    });\n                  }}\n                  data={data}\n                ></PatientDetails>\n              );\n            }}\n          </Mutation>\n        );\n      }}\n    </Query>\n  );\n};\n\nexport default PatientDetailsContainer;\n","import React, { useContext } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { CurrentUserContext } from \"../../providers/currentUser.provider\";\nimport Update from \"./update.component\";\nimport ChangePasswordContainer from \"../../components/change-password/change-password.container\";\nimport DetailsContainer from \"./details/details.container\";\nimport PatientHealthContainer from \"./patient-health/patient-health.container\";\nimport PatientDetailsContainer from \"./patient-details/patient-details.container\";\n\nconst UpdateContainer = (props) => {\n  const { match } = props;\n  const { currentUser } = useContext(CurrentUserContext);\n  if (!currentUser) {\n    return <Redirect to=\"/\"></Redirect>;\n  }\n  return (\n    <Switch>\n      <Route exact path={`${match.path}`} component={Update}></Route>\n      <Route\n        exact\n        path={`${match.path}/password`}\n        component={ChangePasswordContainer}\n      ></Route>\n      <Route\n        exact\n        path={`${match.path}/details`}\n        component={DetailsContainer}\n      ></Route>\n      <Route\n        exact\n        path={`${match.path}/patient-health`}\n        component={PatientHealthContainer}\n      ></Route>\n      <Route\n        exact\n        path={`${match.path}/patient-details`}\n        component={PatientDetailsContainer}\n      ></Route>\n    </Switch>\n  );\n};\n\nexport default UpdateContainer;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nconst Search = (props) => {\n  const {\n    email,\n    setEmail,\n    name,\n    setName,\n    type,\n    setType,\n    error,\n    loading,\n    users,\n  } = props;\n  return (\n    <section className=\"hero is-small is-light\">\n      <div className=\"hero-body\">\n        <div className=\"container has-text-centered\">\n          <h1 className=\"title\">Search User</h1>\n          <p className=\"help is-size-5 is-danger\">{error ? error : \"\"}</p>\n          {loading ? (\n            <button className=\"button is-success is-loading\">Loading</button>\n          ) : (\n            \"\"\n          )}\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Email</label>\n              <div className=\"control has-icons-left has-icons-right\">\n                <input\n                  className=\"input\"\n                  type=\"email\"\n                  placeholder=\"Email input\"\n                  value={email}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setEmail(value);\n                  }}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fa fa-envelope\"></i>\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Name</label>\n              <div className=\"control has-icons-left has-icons-right\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Name\"\n                  value={name}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setName(value);\n                  }}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fa fa-user\" aria-hidden=\"true\"></i>\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Type</label>\n              <div className=\"select is-rounded\">\n                <select\n                  value={type}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setType(value);\n                  }}\n                >\n                  <option value=\"Patient\">Patient</option>\n                  <option value=\"MedicalPractitioner\">\n                    Medical Practitioner\n                  </option>\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>\n        <hr\n          className=\"navbar-divider\"\n          style={{ backgroundColor: \"#363636\" }}\n        ></hr>\n        <div className=\"container\">\n          {users.map((user, key) => {\n            return (\n              <article\n                key={key}\n                className=\"media\"\n                style={{\n                  border: \"1px solid #dbdbdb\",\n                  padding: \"10px\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                <div className=\"media-content\">\n                  <div className=\"content\">\n                    <p>\n                      <strong>\n                        {user.firstName} {user.middleName} {user.lastName}\n                      </strong>{\" \"}\n                      <small>{user.email}</small>\n                      <br />\n                      {user.verified ? (\n                        <i\n                          className=\"fa fa-check-circle\"\n                          aria-hidden=\"true\"\n                        ></i>\n                      ) : (\n                        <i\n                          className=\"fa fa-times-circle\"\n                          aria-hidden=\"true\"\n                        ></i>\n                      )}\n                      &nbsp;\n                      {user.role}\n                    </p>\n                  </div>\n                </div>\n                <div className=\"media-right\">\n                  <Link\n                    to={`${user.role.toLowerCase()}/${user.id}`}\n                    className=\"button is-success\"\n                  >\n                    View Profile\n                  </Link>\n                </div>\n              </article>\n            );\n          })}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Search;\n","import React, { useState } from \"react\";\nimport { Query } from \"react-apollo\";\nimport Search from \"./search.component\";\nimport { gql } from \"apollo-boost\";\nconst SearchContainer = (props) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [type, setType] = useState(\"Patient\");\n  const [users, setUsers] = useState([]);\n  const [err, setErr] = useState(\"\");\n  const SEARCH_USER = gql`\n    query searchUser(${name ? \"$name: String\" : \"\"}, ${\n    email ? \"$email: String\" : \"\"\n  }, ${type ? \"$type: UserType_\" : \"\"}) {\n      searchUser(data: { ${name ? \"name: $name\" : \"\"}, ${\n    email ? \"email: $email\" : \"\"\n  }, ${type ? \"type:$type\" : \"\"} }) {\n        id\n        firstName\n        middleName\n        lastName\n        email\n        role\n        verified\n      }\n    }\n  `;\n  return (\n    <Query\n      query={SEARCH_USER}\n      variables={{\n        name: name,\n        email: email,\n        type: type,\n      }}\n      onCompleted={(data) => {\n        setUsers(data.searchUser);\n      }}\n      onError={(err) => {\n        if (err.graphQLErrors) {\n          setErr(\n            err.graphQLErrors.map((error) => {\n              return error.message;\n            })\n          );\n        }\n        if (err.networkError) {\n          setErr(err.networkError.message);\n        }\n      }}\n    >\n      {({ loading }) => {\n        if (loading) {\n          setErr(\"\");\n        }\n        return (\n          <Search\n            {...props}\n            name={name}\n            setName={setName}\n            email={email}\n            setEmail={setEmail}\n            type={type}\n            setType={setType}\n            users={users}\n            loading={loading}\n            error={err}\n          ></Search>\n        );\n      }}\n    </Query>\n  );\n};\n\nexport default SearchContainer;\n","import React from \"react\";\nimport moment from \"moment\";\nconst UserCard = ({ user }) => {\n  const dob = moment(user.dob);\n  return (\n    <div\n      className=\"card\"\n      style={{\n        position: \"relative\",\n      }}\n    >\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-content\">\n            <p className=\"title is-4\">\n              {user.firstName} {user.middleName} {user.lastName}\n            </p>\n            <p className=\"subtitle is-5\">{user.email}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          <p className=\"is-6\">Gender: {user.sex}</p>\n          <p className=\"is-6\">\n            Verified:{\" \"}\n            {user.verified ? (\n              <i className=\"fa fa-check-circle\" aria-hidden=\"true\"></i>\n            ) : (\n              <i className=\"fa fa-times-circle\" aria-hidden=\"true\"></i>\n            )}\n          </p>\n          <p className=\"is-6\">DOB: {dob.format(\"dddd, MMMM Do YYYY\")}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserCard;\n","import React from \"react\";\n\nconst Approve = (props) => {\n  const { loading, data, error, approve, role } = props;\n  return (\n    <div className=\"columns is-centered\">\n      <div className=\"column is-one-quarter-desktop\">\n        <button\n          style={{ margin: \"10px 0\" }}\n          className={`button is-success ${loading ? \"is-loading\" : \"\"}`}\n          onClick={() => {\n            approve();\n          }}\n        >\n          Approve\n        </button>\n      </div>\n      <div\n        className=\"column is-half-desktop\"\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          alignItems: \"flex-start\",\n        }}\n      >\n        {error ? <p className=\"notification is-danger\">{error}</p> : null}\n        {data ? (\n          <p className=\"notification is-success\">{data[`approve${role}`]}</p>\n        ) : null}\n      </div>\n      <div className=\"column is-one-quarter-desktop\">\n        {error || data ? (\n          <button\n            style={{ margin: \"10px 0\" }}\n            className={`button is-success ${loading ? \"is-loading\" : \"\"}`}\n            onClick={() => {\n              window.location.reload();\n            }}\n          >\n            Reload\n          </button>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default Approve;\n","import React, { useState } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { Mutation } from \"react-apollo\";\nimport Approve from \"./approve.component\";\n\nconst ApproveContainer = (props) => {\n  const [err, setErr] = useState(\"\");\n  const { role, id } = props;\n  const mutation = gql`\n      mutation approve${role}($id: String!) {\n          approve${role}(data: { id: $id})\n      }\n      `;\n  return (\n    <Mutation\n      onError={(error) => {\n        if (error && error.graphQLErrors) {\n          setErr(\n            error.graphQLErrors.map((each) => {\n              return each.message;\n            })\n          );\n        } else if (error && error.networkError) {\n          setErr(error.networkError.message);\n        }\n      }}\n      mutation={mutation}\n    >\n      {(approveFn, { loading, error, data }) => {\n        return (\n          <Approve\n            {...props}\n            loading={loading}\n            error={err}\n            approve={() => {\n              approveFn({\n                variables: {\n                  id: id,\n                },\n              });\n            }}\n            data={data}\n          ></Approve>\n        );\n      }}\n    </Mutation>\n  );\n};\n\nexport default ApproveContainer;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst InsuranceCard = (props) => {\n  const { data, error, modifiable } = props;\n  return (\n    <div>\n      <div className=\"columns is-centered\">\n        <div\n          className=\"column is-half-desktop\"\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"center\",\n            alignItems: \"flex-start\",\n          }}\n        >\n          {error ? <p className=\"notification is-danger\">{error}</p> : null}\n        </div>\n      </div>\n      <div className=\"columns is-centered\">\n        <div className=\"column\">\n          {data ? (\n            <div className=\"card\">\n              <header className=\"card-header\">\n                <p className=\"card-header-title\">Insurance Information</p>\n              </header>\n              <div className=\"card-content\">\n                <div className=\"content\">\n                  <p className=\"title is-5\">\n                    <strong>Insurance ID</strong>: {data.insuranceId}\n                  </p>\n                  <p className=\"subtitle is-6\">\n                    <strong>Status</strong>: {data.insuranceStatus}\n                    <br />\n                    <strong>Company 1</strong>: {data.insuranceCompany1}\n                    <br />\n                    <strong>Company 2</strong>: {data.insuranceCompany2}\n                    <br />\n                    <strong>Details</strong>: {data.sponsorerDetails}\n                  </p>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <p className=\"notification is-danger has-text-centered\">\n              No Insurance Detail Found\n            </p>\n          )}\n        </div>\n      </div>\n      {modifiable ? (\n        <div className=\"columns is-centered\">\n          <div\n            className=\"column is-half-desktop\"\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n              alignItems: \"flex-start\",\n            }}\n          >\n            <Link\n              to={{\n                pathname: \"/insurance/modify\",\n                state: { data: data, type: data ? \"update\" : \"add\" },\n              }}\n              className=\"button is-success\"\n            >\n              Change\n            </Link>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default InsuranceCard;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport UserCard from \"../user-card/user-card.component\";\nconst CareProviderCard = (props) => {\n  const { data, error, modifiable } = props;\n  return (\n    <div>\n      <div className=\"columns is-centered\">\n        <div\n          className=\"column is-half-desktop\"\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"center\",\n            alignItems: \"flex-start\",\n          }}\n        >\n          {error ? <p className=\"notification is-danger\">{error}</p> : null}\n        </div>\n      </div>\n      <div className=\"columns is-centered\">\n        <div className=\"column\">\n          {data ? (\n            <div className=\"card\">\n              <header className=\"card-header\">\n                <p className=\"card-header-title\">Care Provider Information</p>\n              </header>\n              <div className=\"card-content\">\n                <div className=\"content\">\n                  <p className=\"subtitle is-6\">\n                    <strong>Care Provider Patient ID</strong>:{\" \"}\n                    {data.cpPatientId.patientId}\n                    <br />\n                    <strong>Care Provider Relation</strong>:{\" \"}\n                    {data.cpPatientRelation}\n                  </p>\n                  <UserCard user={data.cpPatientId.user}></UserCard>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <p className=\"notification is-danger has-text-centered\">\n              No Care Provider Detail Found\n            </p>\n          )}\n        </div>\n      </div>\n      {modifiable ? (\n        <div className=\"columns is-centered\">\n          <div\n            className=\"column is-half-desktop\"\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n              alignItems: \"flex-start\",\n            }}\n          >\n            <Link\n              to={{\n                pathname: \"/care-provider/modify\",\n                state: { data: data, type: data ? \"update\" : \"add\" },\n              }}\n              className=\"button is-success\"\n            >\n              Change\n            </Link>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default CareProviderCard;\n","import React, { useContext } from \"react\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport UserCard from \"../../../components/user-card/user-card.component\";\nimport { CurrentUserContext } from \"../../../providers/currentUser.provider\";\nimport ApproveContainer from \"../../../components/approve/approve.container\";\nimport InsuranceCard from \"../../../components/insurance-card/insurance-card.component\";\nimport CareProviderCard from \"../../../components/care-provider-card/care-provider-card.component\";\n\nconst Patient = (props) => {\n  const { currentUser } = useContext(CurrentUserContext);\n  const { error, data } = props;\n  const registeredAt = data\n    ? moment(data.registeredAt).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")\n    : null;\n  return (\n    <div>\n      <section className=\"hero is-medium is-light is-bold\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <div className=\"has-text-centered\">\n              <h1 className=\"title\">Profile</h1>\n              {currentUser.role === \"DatabaseAdmin\" && !data.user.verified ? (\n                <ApproveContainer\n                  role=\"Patient\"\n                  id={data.patientId}\n                ></ApproveContainer>\n              ) : null}\n            </div>\n          </div>\n          <p className=\"help is-size-5 is-danger\">{error ? error : \"\"}</p>\n          {data ? (\n            <div>\n              <div className=\"columns is-centered\">\n                <div\n                  className=\"column is-one-third-desktop\"\n                  style={{ padding: \"10px\" }}\n                >\n                  <UserCard user={data.user}></UserCard>\n                </div>\n                <div className=\"column is-one-third-desktop\">\n                  <article className=\"media\">\n                    <div className=\"media-content\">\n                      <div className=\"content\" style={{ padding: \"10px\" }}>\n                        <p>\n                          <strong>Patient ID</strong>: {data.patientId} <br />\n                          <strong>Blood Group</strong>: {data.bloodGroup} <br />\n                          <strong>Principle Language</strong>:{\" \"}\n                          {data.principleLanguage} <br />\n                          <strong>Mother Name</strong>: {data.motherName} <br />\n                          <strong>Religion</strong>: {data.religion} <br />\n                          <strong>Marital Status</strong>: {data.maritalStatus}{\" \"}\n                          <br />\n                          <strong>Primary Language</strong>:{\" \"}\n                          {data.primaryLanguage}\n                          <br />\n                          <strong>Birth Place</strong>: {data.birthPlace} <br />\n                        </p>\n                      </div>\n                    </div>\n                  </article>\n                </div>\n                <div className=\"column is-one-third-desktop\">\n                  <article className=\"media\">\n                    <div className=\"media-content\">\n                      <div className=\"content\" style={{ padding: \"10px\" }}>\n                        <p>\n                          <strong>Contact-1</strong>: {data.contact1} <br />\n                          <strong>Contact-2</strong>: {data.contact2} <br />\n                          <strong>AadharNo</strong>: {data.aadharNo} <br />\n                          <strong>Occupation</strong>: {data.occupation} <br />\n                          <strong>SocioEcoStatus</strong>: {data.socioEcoStatus}{\" \"}\n                          <br />\n                          <strong>Address</strong>: {data.address},{\" \"}\n                          {data.pincode.region},{data.country.countryName}{\" \"}\n                          <br />\n                          <strong>Registered At</strong>: {registeredAt} <br />\n                        </p>\n                      </div>\n                    </div>\n                  </article>\n                </div>\n              </div>\n              <hr></hr>\n              <div className=\"container has-text-centered\">\n                <h1 className=\"title is-4\">Medical Information</h1>\n              </div>\n              <div className=\"columns is-centered\">\n                <div\n                  className=\"column is-one-third-desktop\"\n                  style={{ padding: \"10px\" }}\n                >\n                  <article className=\"media\">\n                    <div className=\"media-content\">\n                      <div className=\"content\" style={{ padding: \"10px\" }}>\n                        <p>\n                          <strong>Immunization History</strong>:{\" \"}\n                          {data.immunizationHistory} <br />\n                          <strong>Allergy Status</strong>:{\" \"}\n                          {data.allergyStatus ? \"Yes\" : \"No\"} <br />\n                          <strong>Organ Donor Status</strong>:{\" \"}\n                          {data.organDonorStatus ? \"Yes\" : \"No\"} <br />\n                          <strong>PMH</strong>: {data.PMH} <br />\n                          <strong>DHx</strong>: {data.DHx} <br />\n                          <strong>Ca</strong>: {data.Ca ? \"Yes\" : \"No\"} <br />\n                          <strong>IDDM</strong>: {data.IDDM ? \"Yes\" : \"No\"}{\" \"}\n                          <br />\n                          <strong>NIDDM</strong>: {data.NIDDM ? \"Yes\" : \"No\"}{\" \"}\n                          <br />\n                          <strong>COPD</strong>: {data.COPD ? \"Yes\" : \"No\"}{\" \"}\n                          <br />\n                          <strong>MI</strong>: {data.MI ? \"Yes\" : \"No\"} <br />\n                          <strong>AF</strong>: {data.AF ? \"Yes\" : \"No\"} <br />\n                        </p>\n                      </div>\n                    </div>\n                  </article>\n                </div>\n                <div\n                  className=\"column is-one-third-desktop\"\n                  style={{ padding: \"10px\" }}\n                >\n                  <div className=\"container has-text-centered\">\n                    <h1 className=\"title is-5\">Patient Cases</h1>\n                    <div style={{ margin: \"10px 0\" }}>\n                      <Link\n                        className=\"button is-success\"\n                        to={`/patient/${data.patientId}/patient-case`}\n                      >\n                        View Cases\n                      </Link>\n                    </div>\n                    <div style={{ margin: \"10px 0\" }}>\n                      {currentUser.role === \"MedicalPractitioner\" ? (\n                        <Link\n                          className=\"button is-success\"\n                          to={`/patient/${data.patientId}/patient-case/create`}\n                        >\n                          Create Case\n                        </Link>\n                      ) : null}\n                    </div>\n                  </div>\n                  <hr />\n                  {currentUser.role === \"MedicalPractitioner\" ? (\n                    <div className=\"container has-text-centered\">\n                      <h1 className=\"title is-5\">Shared Patient Cases</h1>\n                      <div style={{ margin: \"10px 0\" }}>\n                        <Link\n                          className=\"button is-success\"\n                          to={`/patient/${data.patientId}/shared-case`}\n                        >\n                          View Shared Cases\n                        </Link>\n                      </div>\n                    </div>\n                  ) : null}\n                </div>\n              </div>\n              <hr></hr>\n              <div className=\"container has-text-centered\">\n                <h1 className=\"title is-4\">Insurance and Care Provider</h1>\n              </div>\n              <div className=\"columns is-centered\">\n                <div\n                  className=\"column is-one-third-desktop\"\n                  style={{ padding: \"10px\" }}\n                >\n                  {data.cpId ? (\n                    <CareProviderCard\n                      data={data.cpId}\n                      modifiable={false}\n                      error={null}\n                    ></CareProviderCard>\n                  ) : (\n                    <p className=\"help is-size-5 is-danger  has-text-centered\">\n                      No Care Provider Information Provided\n                    </p>\n                  )}\n                </div>\n                <div\n                  className=\"column is-one-third-desktop\"\n                  style={{ padding: \"10px\" }}\n                >\n                  {data.insurance ? (\n                    <InsuranceCard\n                      data={data.insurance}\n                      modifiable={false}\n                      error={null}\n                    ></InsuranceCard>\n                  ) : (\n                    <p className=\"help is-size-5 is-danger  has-text-centered\">\n                      No Insurance Information Provided\n                    </p>\n                  )}\n                </div>\n              </div>\n            </div>\n          ) : null}\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Patient;\n","import React, { useState } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { Query } from \"react-apollo\";\nimport Patient from \"./patient.component\";\nimport { Spinner } from \"../../../components/spinner/spinner.component\";\n\nconst MePatientContainer = (props) => {\n  const [err, setErr] = useState(\"\");\n  const query = gql`\n    {\n      mePatient {\n        user {\n          firstName\n          middleName\n          lastName\n          sex\n          dob\n          email\n          verified\n        }\n        patientId\n        bloodGroup\n        principleLanguage\n        motherName\n        aadharNo\n        religion\n        maritalStatus\n        primaryLanguage\n        birthPlace\n        address\n        pincode {\n          pincode\n          region\n        }\n        country {\n          countryCode\n          countryName\n        }\n        occupation\n        contact1\n        contact2\n        socioEcoStatus\n        immunizationHistory\n        allergyStatus\n        organDonorStatus\n        PMH\n        DHx\n        Ca\n        IDDM\n        NIDDM\n        COPD\n        MI\n        AF\n        registeredAt\n        cpId {\n          id\n          cpPatientId {\n            patientId\n            user {\n              firstName\n              middleName\n              lastName\n              sex\n              dob\n              email\n              verified\n            }\n          }\n          cpPatientRelation\n        }\n        insurance {\n          insuranceId\n          insuranceStatus\n          insuranceCompany1\n          insuranceCompany2\n          sponsorerDetails\n        }\n      }\n    }\n  `;\n  return (\n    <Query\n      query={query}\n      onError={(error) => {\n        if (error && error.graphQLErrors) {\n          setErr(\n            error.graphQLErrors.map((each) => {\n              return each.message;\n            })\n          );\n        } else if (error && error.networkError) {\n          setErr(error.networkError.message);\n        }\n      }}\n    >\n      {({ loading, error, data }) => {\n        if (loading) {\n          setErr(\"\");\n          return <Spinner></Spinner>;\n        }\n        return (\n          <Patient\n            {...props}\n            loading={loading}\n            error={err}\n            data={data ? data.mePatient : null}\n          ></Patient>\n        );\n      }}\n    </Query>\n  );\n};\n\nexport default MePatientContainer;\n","import React, { useState } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { Query } from \"react-apollo\";\nimport Patient from \"./patient.component\";\nimport { Spinner } from \"../../../components/spinner/spinner.component\";\n\nconst ViewPatientContainer = (props) => {\n  const [err, setErr] = useState(\"\");\n  const {\n    match: { params },\n  } = props;\n  const query = gql`\n    query viewPatient($id: String!) {\n      viewPatient(id: $id) {\n        user {\n          firstName\n          middleName\n          lastName\n          sex\n          dob\n          email\n          verified\n        }\n        patientId\n        bloodGroup\n        principleLanguage\n        motherName\n        aadharNo\n        religion\n        maritalStatus\n        primaryLanguage\n        birthPlace\n        address\n        pincode {\n          pincode\n          region\n        }\n        country {\n          countryCode\n          countryName\n        }\n        occupation\n        contact1\n        contact2\n        socioEcoStatus\n        immunizationHistory\n        allergyStatus\n        organDonorStatus\n        PMH\n        DHx\n        Ca\n        IDDM\n        NIDDM\n        COPD\n        MI\n        AF\n        registeredAt\n        cpId {\n          id\n          cpPatientId {\n            patientId\n            user {\n              firstName\n              middleName\n              lastName\n              sex\n              dob\n              email\n              verified\n            }\n          }\n          cpPatientRelation\n        }\n        insurance {\n          insuranceId\n          insuranceStatus\n          insuranceCompany1\n          insuranceCompany2\n          sponsorerDetails\n        }\n      }\n    }\n  `;\n  return (\n    <Query\n      query={query}\n      variables={{\n        id: params.id,\n      }}\n      onError={(error) => {\n        if (error && error.graphQLErrors) {\n          setErr(\n            error.graphQLErrors.map((each) => {\n              return each.message;\n            })\n          );\n        } else if (error && error.networkError) {\n          setErr(error.networkError.message);\n        }\n      }}\n    >\n      {({ loading, error, data }) => {\n        if (loading) {\n          setErr(\"\");\n          return <Spinner></Spinner>;\n        }\n        return (\n          <Patient\n            {...props}\n            loading={loading}\n            error={err}\n            data={data ? data.viewPatient : null}\n          ></Patient>\n        );\n      }}\n    </Query>\n  );\n};\n\nexport default ViewPatientContainer;\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\n\nconst SearchCase = (props) => {\n  const {\n    caseId,\n    setCaseId,\n    ToDate,\n    setToDate,\n    FromDate,\n    setFromDate,\n    error,\n    loading,\n    cases,\n    match,\n  } = props;\n  return (\n    <section className=\"hero is-small is-light\">\n      <div className=\"hero-body\">\n        <div className=\"container has-text-centered\">\n          <h1 className=\"title\">Search Patient Case</h1>\n          <p className=\"help is-size-5 is-danger\">{error ? error : \"\"}</p>\n          {loading ? (\n            <button className=\"button is-success is-loading\">Loading</button>\n          ) : (\n            \"\"\n          )}\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Case Id</label>\n              <div className=\"control has-icons-left\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Case Id\"\n                  value={caseId}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setCaseId(value);\n                  }}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fa fa-user\" aria-hidden=\"true\"></i>\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-quarter-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">From Date</label>\n              <div className=\"control has-icons-left\">\n                <input\n                  className=\"input\"\n                  type=\"date\"\n                  placeholder=\"From Date\"\n                  value={FromDate}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setFromDate(value);\n                  }}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-quarter-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">To Date</label>\n              <div className=\"control has-icons-left\">\n                <input\n                  className=\"input\"\n                  type=\"date\"\n                  placeholder=\"To Date\"\n                  value={ToDate}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setToDate(value);\n                  }}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <hr\n          className=\"navbar-divider\"\n          style={{ backgroundColor: \"#363636\" }}\n        ></hr>\n        <div className=\"container\">\n          {cases.map((eachCase, key) => {\n            return (\n              <article\n                key={key}\n                className=\"media\"\n                style={{\n                  border: \"1px solid #dbdbdb\",\n                  padding: \"10px\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                <div className=\"media-content\">\n                  <div className=\"content\">\n                    <p>\n                      <strong>Case Id: </strong>\n                      {eachCase.caseId}.{\" \"}\n                      <small>\n                        <strong>No. of Visits:</strong> {eachCase.noOfVisits}\n                      </small>\n                      <br />\n                      <strong>Details: </strong>\n                      {eachCase.icdCode.commonName} -{\" \"}\n                      {eachCase.icdSubCode.scientificName}\n                      <br />\n                      Created At:{\" \"}\n                      {moment(eachCase.createdAt).format(\n                        \"dddd, MMMM Do YYYY, h:mm:ss a\"\n                      )}\n                      <br />\n                      Last Updated At:{\" \"}\n                      {moment(eachCase.updatedAt).format(\n                        \"dddd, MMMM Do YYYY, h:mm:ss a\"\n                      )}\n                      <br />\n                      &nbsp;\n                    </p>\n                  </div>\n                </div>\n                <div className=\"media-right\">\n                  <Link\n                    to={`${match.url}/view/${eachCase.caseId}`}\n                    className=\"button is-success\"\n                  >\n                    View Case\n                  </Link>\n                </div>\n              </article>\n            );\n          })}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default SearchCase;\n","import { gql } from \"apollo-boost\";\nimport React, { useContext, useState } from \"react\";\nimport { Query } from \"react-apollo\";\nimport { Redirect } from \"react-router-dom\";\nimport { CurrentUserContext } from \"../../../providers/currentUser.provider\";\nimport SearchCase from \"./search-case.component\";\n\nconst SearchCaseContainer = (props) => {\n  const { currentUser } = useContext(CurrentUserContext);\n  const {\n    match: { params },\n  } = props;\n  const patientId = params.id;\n  const [caseId, setCaseId] = useState(\"\");\n  const [ToDate, setToDate] = useState(\"\");\n  const [FromDate, setFromDate] = useState(\"\");\n  const [err, setErr] = useState(\"\");\n  const [cases, setCases] = useState([]);\n  const query = gql`\n    query ViewPatientCase(\n      $patientId: String!\n      $caseId: String\n      $ToDate: String\n      $FromDate: String\n    ) {\n      viewPatientCase(\n        patientId: $patientId\n        caseId: $caseId\n        ToDate: $ToDate\n        FromDate: $FromDate\n      ) {\n        id\n        caseId\n        createdAt\n        updatedAt\n        noOfVisits\n        icdCode {\n          commonName\n        }\n        icdSubCode {\n          scientificName\n        }\n      }\n    }\n  `;\n  if (!currentUser) {\n    return <Redirect to=\"/\"></Redirect>;\n  }\n  return (\n    <Query\n      query={query}\n      variables={{\n        patientId,\n        caseId,\n        ToDate,\n        FromDate,\n      }}\n      onCompleted={(data) => {\n        setCases(data.viewPatientCase);\n      }}\n      onError={(err) => {\n        if (err.graphQLErrors) {\n          setErr(\n            err.graphQLErrors.map((error) => {\n              return error.message;\n            })\n          );\n        }\n        if (err.networkError) {\n          setErr(err.networkError.message);\n        }\n      }}\n    >\n      {({ loading }) => {\n        if (loading) {\n          setErr(\"\");\n        }\n        return (\n          <SearchCase\n            {...props}\n            caseId={caseId}\n            setCaseId={setCaseId}\n            ToDate={ToDate}\n            setToDate={setToDate}\n            FromDate={FromDate}\n            setFromDate={setFromDate}\n            cases={cases}\n            loading={loading}\n            error={err}\n          ></SearchCase>\n        );\n      }}\n    </Query>\n  );\n};\n\nexport default SearchCaseContainer;\n","import React from \"react\";\n\nconst GetIcdCode = (props) => {\n  const {\n    commonName,\n    setCommonName,\n    icdCodes,\n    icdCode,\n    setIcdCode,\n    loading,\n    error,\n  } = props;\n  return (\n    <div className=\"field\">\n      <label className=\"label\">ICD Code</label>\n      <div className=\"control\">\n        <input\n          className=\"input\"\n          type=\"text\"\n          placeholder=\"ICD Code\"\n          value={commonName}\n          onChange={(event) => {\n            const value = event.target.value;\n            setCommonName(value);\n          }}\n        />\n      </div>\n      <div className={`select ${loading ? \"is-loading\" : \"\"}`}>\n        <select\n          value={icdCode}\n          onChange={(event) => {\n            const { value, selectedOptions } = event.target;\n            setIcdCode(value);\n            setCommonName(selectedOptions[0].innerText);\n          }}\n        >\n          <option value=\"\" disabled>\n            Choose here\n          </option>\n          {icdCodes.map((eachICD, key) => {\n            return (\n              <option key={key} value={eachICD.icdCode}>\n                {eachICD.commonName}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n      <p className=\"help is-danger\">{error ? error : \"\"}</p>\n    </div>\n  );\n};\n\nexport default GetIcdCode;\n","import React from \"react\";\n\nconst GetIcdSubCode = (props) => {\n  const {\n    scientificName,\n    setScientificName,\n    icdSubCodes,\n    icdSubCode,\n    setIcdSubCode,\n    loading,\n    error,\n  } = props;\n  return (\n    <div className=\"field\">\n      <label className=\"label\">ICD Sub Code</label>\n      <div className=\"control\">\n        <input\n          className=\"input\"\n          type=\"text\"\n          placeholder=\"ICD Sub Code\"\n          value={scientificName}\n          onChange={(event) => {\n            const value = event.target.value;\n            setScientificName(value);\n          }}\n        />\n      </div>\n      <div className={`select ${loading ? \"is-loading\" : \"\"}`}>\n        <select\n          value={icdSubCode}\n          onChange={(event) => {\n            const { value, selectedOptions } = event.target;\n            setIcdSubCode(value);\n            setScientificName(selectedOptions[0].innerText);\n          }}\n        >\n          <option value=\"\" disabled>\n            Choose here\n          </option>\n          {icdSubCodes.map((eachICDSub, key) => {\n            return (\n              <option key={key} value={eachICDSub.icdSubCode}>\n                {eachICDSub.scientificName}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n      <p className=\"help is-danger\">{error ? error : \"\"}</p>\n    </div>\n  );\n};\n\nexport default GetIcdSubCode;\n","import React, { useState } from \"react\";\nimport { Query } from \"react-apollo\";\nimport { GET_ICD_CODE, GET_ICD_SUB_CODE } from \"../../graphql/queries\";\nimport GetIcdCode from \"./get-icd-code.component\";\nimport GetIcdSubCode from \"./get-icd-sub-code.component\";\n\nconst GetIcdCodeContainer = (props) => {\n  const [icdCodes, setIcdCodes] = useState([]);\n  const [icdSubCodes, setIcdSubCodes] = useState([]);\n  const { icdCode, setIcdCode, icdSubCode, setIcdSubCode } = props;\n  const [commonName, setCommonName] = useState(\n    props.icdCode ? props.icdCode.commonName : \"\"\n  );\n  const [scientificName, setScientificName] = useState(\n    props.icdSubCode ? props.icdSubCode.scientificName : \"\"\n  );\n  return (\n    <div className=\"columns is-centered\">\n      <Query\n        query={GET_ICD_CODE}\n        variables={{\n          commonName: commonName ? commonName : \"a\",\n        }}\n      >\n        {({ loading, errors, data }) => {\n          if (!loading && !errors) {\n            setIcdCodes(data.icdcodes);\n          }\n          return (\n            <div className=\"column is-one-third-desktop\">\n              <GetIcdCode\n                commonName={commonName}\n                setCommonName={setCommonName}\n                icdCodes={icdCodes}\n                loading={loading}\n                error={\n                  errors\n                    ? errors.graphQLErrors.map((error) => {\n                        return error.message;\n                      })\n                    : null\n                }\n                icdCode={icdCode}\n                setIcdCode={setIcdCode}\n              ></GetIcdCode>\n            </div>\n          );\n        }}\n      </Query>\n      <Query\n        query={GET_ICD_SUB_CODE}\n        variables={{\n          commonName: commonName ? commonName : \"a\",\n          scientificName: scientificName ? scientificName : \"a\",\n        }}\n      >\n        {({ loading, errors, data }) => {\n          if (!loading && !errors) {\n            setIcdSubCodes(data.icdsubcodes);\n          }\n          return (\n            <div className=\"column is-one-third-desktop\">\n              <GetIcdSubCode\n                scientificName={scientificName}\n                setScientificName={setScientificName}\n                icdSubCodes={icdSubCodes}\n                loading={loading}\n                error={\n                  errors\n                    ? errors.graphQLErrors.map((error) => {\n                        return error.message;\n                      })\n                    : null\n                }\n                icdSubCode={icdSubCode}\n                setIcdSubCode={setIcdSubCode}\n              ></GetIcdSubCode>\n            </div>\n          );\n        }}\n      </Query>\n    </div>\n  );\n};\n\nexport default GetIcdCodeContainer;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport GetIcdCodeContainer from \"../../../components/get-icd-code/get-icd-code.container\";\n\nconst CreateCase = (props) => {\n  const {\n    loading,\n    error,\n    data,\n    create,\n    match: { params },\n  } = props;\n  const patientId = params.id;\n  const [icdCode, setIcdCode] = useState(\"\");\n  const [icdSubCode, setIcdSubCode] = useState(\"\");\n  const [HPC, setHPC] = useState(\"\");\n  const [MoI, setMoI] = useState(\"\");\n  const [DandV, setDandV] = useState(\"\");\n  const [clinicalNote, setClinicalNote] = useState(\"\");\n  const [diagnosisType, setDiagnosisType] = useState(\"Provisional\");\n  const [currentClinicalStatus, setCurrentClinicalStatus] = useState(true);\n  const onSubmit = () => {\n    create({\n      patientId,\n      icdCode,\n      icdSubCode,\n      HPC,\n      MoI,\n      DandV,\n      clinicalNote,\n      diagnosisType,\n      currentClinicalStatus,\n    });\n  };\n\n  return (\n    <section className=\"hero is-medium is-light is-bold\">\n      <div className=\"hero-body\">\n        <div className=\"container has-text-centered\">\n          <h1 className=\"title\">Create Patient Case</h1>\n        </div>\n        <GetIcdCodeContainer\n          icdCode={icdCode}\n          setIcdCode={setIcdCode}\n          icdSubCode={icdSubCode}\n          setIcdSubCode={setIcdSubCode}\n        ></GetIcdCodeContainer>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">HPC</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"HPC\"\n                  value={HPC}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setHPC(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">MoI</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"MoI\"\n                  value={MoI}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setMoI(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">DandV</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"DandV\"\n                  value={DandV}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setDandV(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">clinicalNote</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"clinicalNote\"\n                  value={clinicalNote}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setClinicalNote(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">diagnosisType</label>\n              <div className=\"select\">\n                <select\n                  value={diagnosisType}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setDiagnosisType(value);\n                  }}\n                >\n                  <option value=\"Provisional\">Provisional</option>\n                  <option value=\"Final\">Final</option>\n                  <option value=\"Interim\">Interim</option>\n                </select>\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">currentClinicalStatus</label>\n              <div className=\"select\">\n                <select\n                  value={currentClinicalStatus}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setCurrentClinicalStatus(value === \"true\" ? true : false);\n                  }}\n                >\n                  <option value={true}>Yes</option>\n                  <option value={false}>No</option>\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-quarter-desktop\">\n            <div className=\"buttons\">\n              <button\n                className={`button is-success ${loading ? \"is-loading\" : \"\"}`}\n                onClick={(event) => {\n                  event.preventDefault();\n                  onSubmit();\n                }}\n                style={{ margin: \"0 auto\" }}\n              >\n                Create\n              </button>\n            </div>\n\n            <div className=\"help has-text-centered is-size-5 is-success\">\n              <h1 className=\"help has-text-centered is-size-5 is-success\">\n                {data\n                  ? `${data.createPatientCase.caseId} create successfully`\n                  : \"\"}\n              </h1>\n              {data ? (\n                <Link\n                  className=\"button is-success\"\n                  to={props.match.url.replace(\n                    \"create\",\n                    `view/${data.createPatientCase.caseId}`\n                  )}\n                >\n                  Go to Case\n                </Link>\n              ) : (\n                \"\"\n              )}\n            </div>\n            <p className=\"help has-text-centered is-size-5 is-danger\">\n              {error ? error : \"\"}\n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default CreateCase;\n","import { gql } from \"apollo-boost\";\nimport React, { useContext, useState } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport { Redirect } from \"react-router-dom\";\nimport { CurrentUserContext } from \"../../../providers/currentUser.provider\";\nimport CreateCase from \"./create-case.component\";\n\nconst CreateCaseContainer = (props) => {\n  const [err, setErr] = useState(\"\");\n  const { currentUser } = useContext(CurrentUserContext);\n  const mutation = gql`\n    mutation CreatePatientCase(\n      $patientId: String!\n      $icdCode: String!\n      $icdSubCode: String!\n      $HPC: String!\n      $MoI: String\n      $DandV: String\n      $clinicalNote: String!\n      $diagnosisType: DiagnosisType!\n      $currentClinicalStatus: Boolean!\n    ) {\n      createPatientCase(\n        data: {\n          patientId: $patientId\n          icdCode: $icdCode\n          icdSubCode: $icdSubCode\n          HPC: $HPC\n          MoI: $MoI\n          DandV: $DandV\n          clinicalNote: $clinicalNote\n          diagnosisType: $diagnosisType\n          currentClinicalStatus: $currentClinicalStatus\n        }\n      ) {\n        caseId\n      }\n    }\n  `;\n  if (!currentUser || currentUser.role !== \"MedicalPractitioner\") {\n    return <Redirect to=\"/\"></Redirect>;\n  }\n  return (\n    <Mutation\n      mutation={mutation}\n      onError={(error) => {\n        if (error && error.graphQLErrors) {\n          setErr(\n            error.graphQLErrors.map((each) => {\n              return each.message;\n            })\n          );\n        } else if (error && error.networkError) {\n          setErr(error.networkError.message);\n        }\n      }}\n    >\n      {(createFn, { loading, error, data }) => {\n        return (\n          <CreateCase\n            {...props}\n            loading={loading}\n            error={err}\n            create={(data) => {\n              createFn({\n                variables: {\n                  ...data,\n                },\n              });\n            }}\n            data={data}\n          ></CreateCase>\n        );\n      }}\n    </Mutation>\n  );\n};\n\nexport default CreateCaseContainer;\n","import React from \"react\";\n\nconst HospitalCard = ({ hospital }) => {\n  return (\n    <div className=\"card\">\n      <header className=\"card-header\">\n        <p className=\"card-header-title\">Hospital Information</p>\n      </header>\n      <div className=\"card-content\">\n        <div className=\"content\">\n          <p className=\"title is-5\">{hospital.name}</p>\n          <p className=\"subtitle is-6\">\n            <strong>Address</strong>:<br /> {hospital.address}\n            <br />\n            {hospital.district}, {hospital.pincode.region},{\" \"}\n            {hospital.country.countryName}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HospitalCard;\n","import React, { useContext } from \"react\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport UserCard from \"../../../components/user-card/user-card.component\";\nimport HospitalCard from \"../../../components/hospital-card/hospital-card.component\";\nimport { CurrentUserContext } from \"../../../providers/currentUser.provider\";\n\nconst ViewCase = (props) => {\n  const { error, data } = props;\n  const { currentUser } = useContext(CurrentUserContext);\n  const createdAt = data\n    ? moment(data.createdAt).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")\n    : null;\n  const updatedAt = data\n    ? moment(data.updatedAt).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")\n    : null;\n  const registeredAt = data\n    ? moment(data.medicalPractitioner.registeredAt).format(\n        \"dddd, MMMM Do YYYY, h:mm:ss a\"\n      )\n    : null;\n  const { params } = props.match;\n  return (\n    <div>\n      <section className=\"hero is-medium is-light is-bold\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <div className=\"has-text-centered\">\n              <h1 className=\"title\">Patient Case</h1>\n            </div>\n          </div>\n          <p className=\"help is-size-5 is-danger\">{error ? error : \"\"}</p>\n          {data ? (\n            <div>\n              <div className=\"container has-text-centered\">\n                {currentUser.role === \"MedicalPractitioner\" ? (\n                  <Link\n                    className=\"button is-success\"\n                    to={`/patient/${params.id}/shared-case/${params.case}/create`}\n                  >\n                    Share Case\n                  </Link>\n                ) : null}\n              </div>\n              <div className=\"columns is-centered\">\n                <div className=\"column is-one-third-desktop\">\n                  <article className=\"media\">\n                    <div className=\"media-content\">\n                      <div className=\"content\" style={{ padding: \"10px\" }}>\n                        <p>\n                          <strong>Case ID</strong>: {data.caseId} <br />\n                          <strong>Created On</strong>: {createdAt} <br />\n                          <strong>Updated On</strong>: {updatedAt} <br />\n                          <strong>No of Visits</strong>: {data.noOfVisits}{\" \"}\n                          <br />\n                          <strong>Clinical Note</strong>: {data.clinicalNote}{\" \"}\n                          <br />\n                          <strong>Current Clinical Status</strong>:{\" \"}\n                          {data.currentClinicalStatus ? \"Yes\" : \"No\"} <br />\n                          <strong>Diagnosis Type</strong>: {data.diagnosisType}\n                          <br />\n                        </p>\n                      </div>\n                    </div>\n                  </article>\n                </div>\n                <div className=\"column is-one-third-desktop\">\n                  <article className=\"media\">\n                    <div className=\"media-content\">\n                      <div className=\"content\" style={{ padding: \"10px\" }}>\n                        <p>\n                          <strong>HPC</strong>: {data.HPC} <br />\n                          <strong>MoI</strong>: {data.MoI} <br />\n                          <strong>DandV</strong>: {data.DandV} <br />\n                          <strong>Icd Code</strong>: {data.icdCode.commonName}{\" \"}\n                          <br />\n                          <strong>Icd Sub Code</strong>:{\" \"}\n                          {data.icdSubCode.scientificName} <br />\n                        </p>\n                      </div>\n                    </div>\n                  </article>\n                </div>\n              </div>\n              <hr></hr>\n              <div className=\"container\" style={{ padding: \"10px\" }}>\n                <div className=\"has-text-centered\">\n                  <h3 className=\"title is-5\">\n                    Medical Practitioner Information\n                  </h3>\n                </div>\n              </div>\n              <div className=\"columns is-centered\">\n                <div\n                  className=\"column is-one-third-desktop\"\n                  style={{ padding: \"10px\" }}\n                >\n                  <UserCard user={data.medicalPractitioner.user}></UserCard>\n                </div>\n                <div className=\"column is-one-third-desktop\">\n                  <article className=\"media\">\n                    <div className=\"media-content\">\n                      <div className=\"content\" style={{ padding: \"10px\" }}>\n                        <p>\n                          <strong>MedicalPractitioner ID:</strong>:{\" \"}\n                          {data.medicalPractitioner.mpId} <br />\n                          <strong>Field</strong>:{\" \"}\n                          {data.medicalPractitioner.field} <br />\n                          <strong>Degree</strong>:{\" \"}\n                          {data.medicalPractitioner.degree} <br />\n                          <strong>Address</strong>:{\" \"}\n                          {data.medicalPractitioner.address} <br />\n                          <strong>Clinic Address</strong>:{\" \"}\n                          {data.medicalPractitioner.clinicAddress} <br />\n                          <strong>Registered At</strong>: {registeredAt} <br />\n                        </p>\n                        <HospitalCard\n                          hospital={data.medicalPractitioner.hospital}\n                        ></HospitalCard>\n                      </div>\n                    </div>\n                  </article>\n                </div>\n              </div>\n              <hr></hr>\n              <div className=\"columns is-centered\">\n                <div\n                  className=\"column is-one-third-desktop\"\n                  style={{ padding: \"10px\" }}\n                >\n                  <div className=\"container has-text-centered\">\n                    <h1 className=\"title is-5\">Patient Records</h1>\n                    <div style={{ margin: \"10px 0\" }}>\n                      <Link\n                        className=\"button is-success\"\n                        to={`/patient/${params.id}/patient-case/view/${params.case}/patient-record`}\n                      >\n                        View Records\n                      </Link>\n                    </div>\n                    <div style={{ margin: \"10px 0\" }}>\n                      {currentUser.role === \"MedicalPractitioner\" ? (\n                        <Link\n                          className=\"button is-success\"\n                          to={`/patient/${params.id}/patient-case/view/${params.case}/patient-record/create`}\n                        >\n                          Create Record\n                        </Link>\n                      ) : null}\n                    </div>\n                  </div>\n                </div>\n                <hr />\n                {currentUser.role === \"MedicalPractitioner\" ? (\n                  <div\n                    className=\"column is-one-third-desktop\"\n                    style={{ padding: \"10px\" }}\n                  >\n                    <div className=\"container has-text-centered\">\n                      <h1 className=\"title is-5\">Shared Patient Records</h1>\n                      <div style={{ margin: \"10px 0\" }}>\n                        <Link\n                          className=\"button is-success\"\n                          to={`/patient/${params.id}/patient-case/view/${params.case}/shared-record`}\n                        >\n                          View Shared Records\n                        </Link>\n                      </div>\n                    </div>\n                  </div>\n                ) : null}\n              </div>\n            </div>\n          ) : null}\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default ViewCase;\n","import { gql } from \"apollo-boost\";\nimport React, { useContext, useState } from \"react\";\nimport { Query } from \"react-apollo\";\nimport { Redirect } from \"react-router-dom\";\nimport { Spinner } from \"../../../components/spinner/spinner.component\";\nimport { CurrentUserContext } from \"../../../providers/currentUser.provider\";\nimport ViewCase from \"./view-case.component\";\n\nconst ViewCaseContainer = (props) => {\n  const [err, setErr] = useState(\"\");\n  const { currentUser } = useContext(CurrentUserContext);\n  const {\n    match: { params },\n  } = props;\n  const patientId = params.id;\n  const caseId = params.case;\n  const [cases, setCases] = useState([]);\n  const query = gql`\n    query ViewPatientCase($patientId: String!, $caseId: String!) {\n      viewPatientCase(patientId: $patientId, caseId: $caseId) {\n        id\n        caseId\n        createdAt\n        updatedAt\n        noOfVisits\n        HPC\n        MoI\n        DandV\n        clinicalNote\n        noOfVisits\n        diagnosisType\n        currentClinicalStatus\n        medicalPractitioner {\n          id\n          user {\n            firstName\n            middleName\n            lastName\n            sex\n            dob\n            email\n            verified\n          }\n          mpId\n          address\n          clinicAddress\n          degree\n          field\n          hospital {\n            hospitalId\n            name\n            address\n            district\n            pincode {\n              pincode\n              region\n            }\n            country {\n              countryCode\n              countryName\n            }\n          }\n          registeredAt\n        }\n        icdCode {\n          commonName\n        }\n        icdSubCode {\n          scientificName\n        }\n      }\n    }\n  `;\n  if (!currentUser) {\n    return <Redirect to=\"/\"></Redirect>;\n  }\n  return (\n    <Query\n      query={query}\n      variables={{\n        patientId,\n        caseId,\n      }}\n      onCompleted={(data) => {\n        setCases(data.viewPatientCase);\n      }}\n      onError={(err) => {\n        if (err.graphQLErrors) {\n          setErr(\n            err.graphQLErrors.map((error) => {\n              return error.message;\n            })\n          );\n        }\n        if (err.networkError) {\n          setErr(err.networkError.message);\n        }\n      }}\n    >\n      {({ loading }) => {\n        if (loading) {\n          setErr(\"\");\n          return <Spinner></Spinner>;\n        }\n        return (\n          <ViewCase\n            {...props}\n            data={cases[0]}\n            loading={loading}\n            error={err}\n          ></ViewCase>\n        );\n      }}\n    </Query>\n  );\n};\n\nexport default ViewCaseContainer;\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\n\nconst SearchRecord = (props) => {\n  const {\n    recordId,\n    setRecordId,\n    ToDate,\n    setToDate,\n    FromDate,\n    setFromDate,\n    error,\n    loading,\n    records,\n    match,\n  } = props;\n  return (\n    <section className=\"hero is-small is-light\">\n      <div className=\"hero-body\">\n        <div className=\"container has-text-centered\">\n          <h1 className=\"title\">Search Patient Record</h1>\n          <p className=\"help is-size-5 is-danger\">{error ? error : \"\"}</p>\n          {loading ? (\n            <button className=\"button is-success is-loading\">Loading</button>\n          ) : (\n            \"\"\n          )}\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Record Id</label>\n              <div className=\"control has-icons-left\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Record Id\"\n                  value={recordId}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setRecordId(value);\n                  }}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fa fa-user\" aria-hidden=\"true\"></i>\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-quarter-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">From Date</label>\n              <div className=\"control has-icons-left\">\n                <input\n                  className=\"input\"\n                  type=\"date\"\n                  placeholder=\"From Date\"\n                  value={FromDate}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setFromDate(value);\n                  }}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-quarter-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">To Date</label>\n              <div className=\"control has-icons-left\">\n                <input\n                  className=\"input\"\n                  type=\"date\"\n                  placeholder=\"To Date\"\n                  value={ToDate}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setToDate(value);\n                  }}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <hr\n          className=\"navbar-divider\"\n          style={{ backgroundColor: \"#363636\" }}\n        ></hr>\n        <div className=\"container\">\n          {records.map((eachRecord, key) => {\n            return (\n              <article\n                key={key}\n                className=\"media\"\n                style={{\n                  border: \"1px solid #dbdbdb\",\n                  padding: \"10px\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                <div className=\"media-content\">\n                  <div className=\"content\">\n                    <p>\n                      <strong>Record Id: </strong>\n                      {eachRecord.recordId}.{\" \"}\n                      <small>\n                        <strong>Visits No.:</strong> {eachRecord.visitNo}\n                      </small>\n                      <br />\n                      Created At:{\" \"}\n                      {moment(eachRecord.createdAt).format(\n                        \"dddd, MMMM Do YYYY, h:mm:ss a\"\n                      )}\n                      <br />\n                      <br />\n                      <strong>Case Details: </strong>\n                      {eachRecord.case.icdCode.commonName} -{\" \"}\n                      {eachRecord.case.icdSubCode.scientificName}\n                      <br />\n                      &nbsp;\n                      <small>\n                        <strong>No. of Visits:</strong>{\" \"}\n                        {eachRecord.case.noOfVisits}\n                      </small>\n                    </p>\n                  </div>\n                </div>\n                <div className=\"media-right\">\n                  <Link\n                    to={`${match.url}/view/${eachRecord.recordId}`}\n                    className=\"button is-success\"\n                  >\n                    View Record\n                  </Link>\n                </div>\n              </article>\n            );\n          })}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default SearchRecord;\n","import { gql } from \"apollo-boost\";\nimport React, { useContext, useState } from \"react\";\nimport { Query } from \"react-apollo\";\nimport { Redirect } from \"react-router-dom\";\nimport { CurrentUserContext } from \"../../../providers/currentUser.provider\";\nimport SearchRecord from \"./search-record.component\";\n\nconst SearchRecordContainer = (props) => {\n  const { currentUser } = useContext(CurrentUserContext);\n  const {\n    match: { params },\n  } = props;\n  const caseId = params.case;\n  const [recordId, setRecordId] = useState(\"\");\n  const [ToDate, setToDate] = useState(\"\");\n  const [FromDate, setFromDate] = useState(\"\");\n  const [err, setErr] = useState(\"\");\n  const [records, setRecords] = useState([]);\n  const query = gql`\n    query ViewPatientRecord(\n      $caseId: String!\n      $recordId: String\n      $ToDate: String\n      $FromDate: String\n    ) {\n      viewPatientRecord(\n        caseId: $caseId\n        recordId: $recordId\n        ToDate: $ToDate\n        FromDate: $FromDate\n      ) {\n        id\n        recordId\n        createdAt\n        visitNo\n        case {\n          noOfVisits\n          updatedAt\n          icdCode {\n            commonName\n          }\n          icdSubCode {\n            scientificName\n          }\n        }\n      }\n    }\n  `;\n  if (!currentUser) {\n    return <Redirect to=\"/\"></Redirect>;\n  }\n  return (\n    <Query\n      query={query}\n      variables={{\n        caseId,\n        recordId,\n        ToDate,\n        FromDate,\n      }}\n      onCompleted={(data) => {\n        setRecords(data.viewPatientRecord);\n      }}\n      onError={(err) => {\n        if (err.graphQLErrors) {\n          setErr(\n            err.graphQLErrors.map((error) => {\n              return error.message;\n            })\n          );\n        }\n        if (err.networkError) {\n          setErr(err.networkError.message);\n        }\n      }}\n    >\n      {({ loading }) => {\n        if (loading) {\n          setErr(\"\");\n        }\n        return (\n          <SearchRecord\n            {...props}\n            recordId={recordId}\n            setRecordId={setRecordId}\n            ToDate={ToDate}\n            setToDate={setToDate}\n            FromDate={FromDate}\n            setFromDate={setFromDate}\n            records={records}\n            loading={loading}\n            error={err}\n          ></SearchRecord>\n        );\n      }}\n    </Query>\n  );\n};\n\nexport default SearchRecordContainer;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CreateRecord = (props) => {\n  const {\n    loading,\n    error,\n    data,\n    create,\n    match: { params },\n  } = props;\n  const caseId = params.case;\n  const [onArrival, setOnArrival] = useState(\"\");\n  const [diagnosis, setDiagnosis] = useState(\"\");\n  const [Tx, setTx] = useState(\"\");\n  const [reportSuggestions, setReportSuggestions] = useState(\"\");\n  const [cevsSp, setCevsSp] = useState(0);\n  const [cevsDp, setCevsDp] = useState(0);\n  const [cePr, setCePr] = useState(0);\n  const [ceRr, setCeRr] = useState(0);\n  const [ceHeight, setCeHeight] = useState(0);\n  const [ceWeight, setCeWeight] = useState(0);\n  const [diagnosisAfterReport, setDiagnosisAfterReport] = useState(\"\");\n  const [medication, setMedication] = useState(\"\");\n  const [advice, setAdvice] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  const [followUpObservations, setFollowUpObservations] = useState(\"\");\n  const onSubmit = () => {\n    create({\n      case: caseId,\n      onArrival: onArrival,\n      diagnosis: diagnosis,\n      Tx: Tx,\n      reportSuggestions: reportSuggestions,\n      cevsSp: cevsSp,\n      cevsDp: cevsDp,\n      cePr: cePr,\n      ceRr: ceRr,\n      ceHeight: ceHeight,\n      ceWeight: ceWeight,\n      diagnosisAfterReport: diagnosisAfterReport,\n      medication: medication,\n      advice: advice,\n      query: query,\n      followUpObservations: followUpObservations,\n    });\n  };\n  return (\n    <section className=\"hero is-medium is-light is-bold\">\n      <div className=\"hero-body\">\n        <div className=\"container has-text-centered\">\n          <h1 className=\"title\">Create Patient Record</h1>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">On Arrival</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"On Arrival\"\n                  value={onArrival}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setOnArrival(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Diagnosis</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Diagnosis\"\n                  value={diagnosis}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setDiagnosis(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Tx</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Tx\"\n                  value={Tx}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setTx(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">cevsSp</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"number\"\n                  placeholder=\"cevsSp\"\n                  min=\"0\"\n                  value={cevsSp}\n                  onChange={(event) => {\n                    let value = parseInt(event.target.value);\n                    setCevsSp(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">cevsDp</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"number\"\n                  placeholder=\"cevsDp\"\n                  min=\"0\"\n                  value={cevsDp}\n                  onChange={(event) => {\n                    let value = parseInt(event.target.value);\n                    setCevsDp(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">cePr</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"number\"\n                  placeholder=\"cePr\"\n                  min=\"0\"\n                  value={cePr}\n                  onChange={(event) => {\n                    let value = parseInt(event.target.value);\n                    setCePr(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">ceRr</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"number\"\n                  placeholder=\"ceRr\"\n                  min=\"0\"\n                  value={ceRr}\n                  onChange={(event) => {\n                    let value = parseInt(event.target.value);\n                    setCeRr(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">ceHeight</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"number\"\n                  placeholder=\"ceHeight\"\n                  min=\"0\"\n                  value={ceHeight}\n                  onChange={(event) => {\n                    let value = parseInt(event.target.value);\n                    setCeHeight(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">ceWeight</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"number\"\n                  placeholder=\"ceWeight\"\n                  min=\"0\"\n                  value={ceWeight}\n                  onChange={(event) => {\n                    let value = parseInt(event.target.value);\n                    setCeWeight(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Report Suggestions</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Report Suggestions\"\n                  value={reportSuggestions}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setReportSuggestions(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Diagnosis After Report</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Diagnosis After Report\"\n                  value={diagnosisAfterReport}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setDiagnosisAfterReport(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Medication</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Medication\"\n                  value={medication}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setMedication(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Advice</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Advice\"\n                  value={advice}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setAdvice(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Query</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Query\"\n                  value={query}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setQuery(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Follow Up Observations</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Follow Up Observations\"\n                  value={followUpObservations}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setFollowUpObservations(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-quarter-desktop\">\n            <div className=\"buttons\">\n              <button\n                className={`button is-success ${loading ? \"is-loading\" : \"\"}`}\n                onClick={(event) => {\n                  event.preventDefault();\n                  onSubmit();\n                }}\n                style={{ margin: \"0 auto\" }}\n              >\n                Create\n              </button>\n            </div>\n            <div className=\"help has-text-centered is-size-5 is-success\">\n              <h1 className=\"help has-text-centered is-size-5 is-success\">\n                {data\n                  ? `${data.createPatientRecord.recordId} create successfully`\n                  : \"\"}\n              </h1>\n              {data ? (\n                <Link\n                  className=\"button is-success\"\n                  to={props.match.url.replace(\n                    \"create\",\n                    `view/${data.createPatientRecord.recordId}`\n                  )}\n                >\n                  Go to Record\n                </Link>\n              ) : (\n                \"\"\n              )}\n            </div>\n            <p className=\"help has-text-centered is-size-5 is-danger\">\n              {error ? error : \"\"}\n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default CreateRecord;\n","import { gql } from \"apollo-boost\";\nimport React, { useContext, useState } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport { Redirect } from \"react-router-dom\";\nimport { CurrentUserContext } from \"../../../providers/currentUser.provider\";\nimport CreateRecord from \"./create-record.component\";\n\nconst CreateRecordContainer = (props) => {\n  const [err, setErr] = useState(\"\");\n  const { currentUser } = useContext(CurrentUserContext);\n  const mutation = gql`\n    mutation CreatePatientRecord(\n      $case: String!\n      $onArrival: String!\n      $diagnosis: String!\n      $Tx: String!\n      $reportSuggestions: String\n      $cevsSp: Int!\n      $cevsDp: Int!\n      $cePr: Int!\n      $ceRr: Int!\n      $ceHeight: Int!\n      $ceWeight: Int!\n      $diagnosisAfterReport: String\n      $medication: String!\n      $advice: String!\n      $query: String!\n      $followUpObservations: String!\n    ) {\n      createPatientRecord(\n        data: {\n          case: $case\n          onArrival: $onArrival\n          diagnosis: $diagnosis\n          Tx: $Tx\n          reportSuggestions: $reportSuggestions\n          cevsSp: $cevsSp\n          cevsDp: $cevsDp\n          cePr: $cePr\n          ceRr: $ceRr\n          ceHeight: $ceHeight\n          ceWeight: $ceWeight\n          diagnosisAfterReport: $diagnosisAfterReport\n          medication: $medication\n          advice: $advice\n          query: $query\n          followUpObservations: $followUpObservations\n        }\n      ) {\n        recordId\n      }\n    }\n  `;\n  if (!currentUser || currentUser.role !== \"MedicalPractitioner\") {\n    return <Redirect to=\"/\"></Redirect>;\n  }\n  return (\n    <Mutation\n      mutation={mutation}\n      onError={(error) => {\n        if (error && error.graphQLErrors) {\n          setErr(\n            error.graphQLErrors.map((each) => {\n              return each.message;\n            })\n          );\n        } else if (error && error.networkError) {\n          setErr(error.networkError.message);\n        }\n      }}\n    >\n      {(createFn, { loading, error, data }) => {\n        return (\n          <CreateRecord\n            {...props}\n            loading={loading}\n            error={err}\n            create={(data) => {\n              createFn({\n                variables: {\n                  ...data,\n                },\n              });\n            }}\n            data={data}\n          ></CreateRecord>\n        );\n      }}\n    </Mutation>\n  );\n};\n\nexport default CreateRecordContainer;\n","import React, { useContext } from \"react\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport HospitalCard from \"../../../components/hospital-card/hospital-card.component\";\nimport UserCard from \"../../../components/user-card/user-card.component\";\nimport { CurrentUserContext } from \"../../../providers/currentUser.provider\";\n\nconst ViewRecord = (props) => {\n  const { error, data } = props;\n  const { currentUser } = useContext(CurrentUserContext);\n  const {\n    match: { params },\n  } = props;\n  const registeredAt = data\n    ? moment(data.medicalPractitioner.registeredAt).format(\n        \"dddd, MMMM Do YYYY, h:mm:ss a\"\n      )\n    : null;\n  return (\n    <div>\n      <section className=\"hero is-medium is-light is-bold\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <div className=\"has-text-centered\">\n              <h1 className=\"title\">Patient Record</h1>\n            </div>\n          </div>\n          <p className=\"help is-size-5 is-danger\">{error ? error : \"\"}</p>\n          {data ? (\n            <div>\n              <div className=\"container has-text-centered\">\n                {currentUser.role === \"MedicalPractitioner\" ? (\n                  <Link\n                    className=\"button is-success\"\n                    to={`/patient/${params.id}/patient-case/view/${params.case}/shared-record/${params.record}/create`}\n                  >\n                    Share Record\n                  </Link>\n                ) : null}\n              </div>\n              <div className=\"columns is-centered\">\n                <div className=\"column is-one-third-desktop\">\n                  <article className=\"media\">\n                    <div className=\"media-content\">\n                      <div className=\"content\" style={{ padding: \"10px\" }}>\n                        <p>\n                          <strong>Record Id</strong>: {data.recordId} <br />\n                          <strong>Visit No</strong>: {data.visitNo} <br />\n                          <strong>Created At</strong>:{\" \"}\n                          {moment(data.createdAt).format(\"dddd, MMMM Do YYYY\")}{\" \"}\n                          <strong>On Arrival</strong>: {data.onArrival} <br />\n                          <strong>Diagnosis</strong>: {data.diagnosis} <br />\n                          <strong>Tx</strong>: {data.Tx} <br />\n                          <strong>Report Suggestions</strong>:{\" \"}\n                          {data.reportSuggestions} <br />\n                          <strong>Diagnosis After Report</strong>:{\" \"}\n                          {data.diagnosisAfterReport} <br />\n                          <strong>Follow Up Observations</strong>:{\" \"}\n                          {data.followUpObservations} <br />\n                          <br />\n                        </p>\n                      </div>\n                    </div>\n                  </article>\n                </div>\n                <div className=\"column is-one-third-desktop\">\n                  <article className=\"media\">\n                    <div className=\"media-content\">\n                      <div className=\"content\" style={{ padding: \"10px\" }}>\n                        <p>\n                          <strong>cevsSp</strong>: {data.cevsSp} <br />\n                          <strong>cevsDp</strong>: {data.cevsDp} <br />\n                          <strong>cePr</strong>: {data.cePr} <br />\n                          <strong>ceRr</strong>: {data.ceRr} <br />\n                          <strong>ceHeight</strong>: {data.ceHeight} <br />\n                          <strong>ceWeight</strong>: {data.ceWeight} <br />\n                          <strong>Medication</strong>: {data.medication} <br />\n                          <strong>Advice</strong>: {data.advice} <br />\n                          <strong>Query</strong>: {data.query} <br />\n                        </p>\n                      </div>\n                    </div>\n                  </article>\n                </div>\n              </div>\n              <hr></hr>\n              <div className=\"container\" style={{ padding: \"10px\" }}>\n                <div className=\"has-text-centered\">\n                  <h3 className=\"title is-5\">Patient Case Information</h3>\n                </div>\n              </div>\n              <div className=\"columns is-centered\">\n                <div\n                  className=\"column is-one-third-desktop\"\n                  style={{ padding: \"10px\" }}\n                >\n                  <article className=\"media\">\n                    <div className=\"media-content\">\n                      <div className=\"content\" style={{ padding: \"10px\" }}>\n                        <p>\n                          <strong>Case ID:</strong>:{\" \"}\n                          <Link\n                            to={`/patient/${params.id}/patient-case/view/${params.case}/`}\n                          >\n                            {data.case.caseId}\n                          </Link>{\" \"}\n                          <br />\n                          <strong>Icd Code</strong>:{\" \"}\n                          {data.case.icdCode.commonName} <br />\n                          <strong>Icd Sub Code</strong>:{\" \"}\n                          {data.case.icdSubCode.scientificName} <br />\n                          <strong>No. Of Visits:</strong>:{\" \"}\n                          {data.case.noOfVisits} <br />\n                          <strong>Created At</strong>:{\" \"}\n                          {moment(data.case.createdAt).format(\n                            \"dddd, MMMM Do YYYY, h:mm:ss a\"\n                          )}{\" \"}\n                          <br />\n                          <strong>Updated At</strong>:{\" \"}\n                          {moment(data.case.updatedAt).format(\n                            \"dddd, MMMM Do YYYY, h:mm:ss a\"\n                          )}\n                          <br />\n                        </p>\n                      </div>\n                    </div>\n                  </article>\n                </div>\n              </div>\n              <hr></hr>\n              <div className=\"container\" style={{ padding: \"10px\" }}>\n                <div className=\"has-text-centered\">\n                  <h3 className=\"title is-5\">\n                    Medical Practitioner Information\n                  </h3>\n                </div>\n              </div>\n              <div className=\"columns is-centered\">\n                <div\n                  className=\"column is-one-third-desktop\"\n                  style={{ padding: \"10px\" }}\n                >\n                  <UserCard user={data.medicalPractitioner.user}></UserCard>\n                </div>\n                <div className=\"column is-one-third-desktop\">\n                  <article className=\"media\">\n                    <div className=\"media-content\">\n                      <div className=\"content\" style={{ padding: \"10px\" }}>\n                        <p>\n                          <strong>MedicalPractitioner ID:</strong>:{\" \"}\n                          {data.medicalPractitioner.mpId} <br />\n                          <strong>Field</strong>:{\" \"}\n                          {data.medicalPractitioner.field} <br />\n                          <strong>Degree</strong>:{\" \"}\n                          {data.medicalPractitioner.degree} <br />\n                          <strong>Address</strong>:{\" \"}\n                          {data.medicalPractitioner.address} <br />\n                          <strong>Clinic Address</strong>:{\" \"}\n                          {data.medicalPractitioner.clinicAddress} <br />\n                          <strong>Registered At</strong>: {registeredAt} <br />\n                        </p>\n                        <HospitalCard\n                          hospital={data.medicalPractitioner.hospital}\n                        ></HospitalCard>\n                      </div>\n                    </div>\n                  </article>\n                </div>\n              </div>\n            </div>\n          ) : null}\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default ViewRecord;\n","import { gql } from \"apollo-boost\";\nimport React, { useContext, useState } from \"react\";\nimport { Query } from \"react-apollo\";\nimport { Redirect } from \"react-router-dom\";\nimport { Spinner } from \"../../../components/spinner/spinner.component\";\nimport { CurrentUserContext } from \"../../../providers/currentUser.provider\";\nimport ViewRecord from \"./view-record.component\";\n\nconst ViewRecordContainer = (props) => {\n  const [err, setErr] = useState(\"\");\n  const { currentUser } = useContext(CurrentUserContext);\n  const {\n    match: { params },\n  } = props;\n  const caseId = params.case;\n  const recordId = params.record;\n  const [records, setRecords] = useState([]);\n  const query = gql`\n    query ViewPatientRecord($recordId: String!, $caseId: String!) {\n      viewPatientRecord(recordId: $recordId, caseId: $caseId) {\n        id\n        case {\n          caseId\n          createdAt\n          updatedAt\n          noOfVisits\n          icdCode {\n            commonName\n          }\n          icdSubCode {\n            scientificName\n          }\n        }\n        recordId\n        medicalPractitioner {\n          id\n          user {\n            firstName\n            middleName\n            lastName\n            sex\n            dob\n            email\n            verified\n          }\n          mpId\n          address\n          clinicAddress\n          degree\n          field\n          hospital {\n            hospitalId\n            name\n            address\n            district\n            pincode {\n              pincode\n              region\n            }\n            country {\n              countryCode\n              countryName\n            }\n          }\n          registeredAt\n        }\n        visitNo\n        onArrival\n        diagnosis\n        Tx\n        reportSuggestions\n        cevsSp\n        cevsDp\n        cePr\n        ceRr\n        ceHeight\n        ceWeight\n        diagnosisAfterReport\n        medication\n        advice\n        query\n        followUpObservations\n        createdAt\n      }\n    }\n  `;\n  if (!currentUser) {\n    return <Redirect to=\"/\"></Redirect>;\n  }\n  return (\n    <Query\n      query={query}\n      variables={{\n        recordId,\n        caseId,\n      }}\n      onCompleted={(data) => {\n        setRecords(data.viewPatientRecord);\n      }}\n      onError={(err) => {\n        if (err.graphQLErrors) {\n          setErr(\n            err.graphQLErrors.map((error) => {\n              return error.message;\n            })\n          );\n        }\n        if (err.networkError) {\n          setErr(err.networkError.message);\n        }\n      }}\n    >\n      {({ loading }) => {\n        if (loading) {\n          setErr(\"\");\n          return <Spinner></Spinner>;\n        }\n        return (\n          <ViewRecord\n            {...props}\n            data={records[0]}\n            loading={loading}\n            error={err}\n          ></ViewRecord>\n        );\n      }}\n    </Query>\n  );\n};\n\nexport default ViewRecordContainer;\n","import React, { useContext } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport SearchRecordContainer from \"./search-record/search-record.container\";\nimport CreateRecordContainer from \"./create-record/create-record.container\";\nimport ViewRecordContainer from \"./view-record/view-record.container\";\nimport { CurrentUserContext } from \"../../providers/currentUser.provider\";\n\nconst PatientRecordContainer = (props) => {\n  const { match } = props;\n  const { currentUser } = useContext(CurrentUserContext);\n  if (!currentUser) {\n    return <Redirect to=\"/\"></Redirect>;\n  }\n  return (\n    <Switch>\n      <Route\n        exact\n        path={`${match.path}`}\n        component={SearchRecordContainer}\n      ></Route>\n      <Route\n        exact\n        path={`${match.path}/create`}\n        component={CreateRecordContainer}\n      ></Route>\n      <Route\n        exact\n        path={`${match.path}/view/:record`}\n        component={ViewRecordContainer}\n      ></Route>\n    </Switch>\n  );\n};\n\nexport default PatientRecordContainer;\n","import React, { useRef, useState } from \"react\";\n\nconst HL7 = (props) => {\n  const { HL7, caseId } = props;\n  const [msg, setMsg] = useState(\"\");\n  const textAreaRef = useRef(null);\n\n  return (\n    <div>\n      <span\n        style={{ cursor: \"pointer\" }}\n        onClick={() => {\n          navigator.clipboard.writeText(HL7);\n          setMsg(\"Copied to Clipboard\");\n          setTimeout(() => {\n            setMsg(\"\");\n          }, 2000);\n        }}\n      >\n        <span className=\"icon\">\n          <i className=\"fa fa-copy\"></i>\n        </span>\n        Click To Copy\n      </span>\n      &nbsp;&nbsp;&nbsp;\n      <span\n        style={{ cursor: \"pointer\" }}\n        onClick={() => {\n          const element = document.createElement(\"a\");\n          const file = new Blob([HL7], {\n            type: \"text/plain\",\n          });\n          element.href = URL.createObjectURL(file);\n          element.download = `${caseId}.hl7`;\n          document.body.appendChild(element); // Required for this to work in FireFox\n          element.click();\n          setMsg(\"Downloading HL7\");\n          setTimeout(() => {\n            setMsg(\"\");\n          }, 2000);\n        }}\n      >\n        <span className=\"icon\">\n          <i className=\"fa fa-download\"></i>\n        </span>\n        Download As HL7\n      </span>\n      <div className=\"field\">\n        <div className=\"control\">\n          <textarea\n            style={{ resize: \"none\", cursor: \"pointer\" }}\n            className=\"textarea is-info\"\n            rows=\"6\"\n            cols=\"60\"\n            disabled\n            ref={textAreaRef}\n            defaultValue={HL7}\n          ></textarea>\n        </div>\n      </div>\n      {msg ? (\n        <div\n          className=\"notification is-success\"\n          style={{\n            position: \"fixed\",\n            bottom: \"10px\",\n            right: \"10px\",\n            zIndex: \"99999\",\n          }}\n        >\n          {msg}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default HL7;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport HL7 from \"../../../components/hl7/hl7.component\";\n\nconst CreateSharedRecord = (props) => {\n  const {\n    loading,\n    error,\n    data,\n    create,\n    match: { params },\n  } = props;\n  const [receiver, setReceiver] = useState(\"\");\n  const onSubmit = () => {\n    create(receiver);\n  };\n  return (\n    <section className=\"hero is-medium is-light is-bold\">\n      <div className=\"hero-body\">\n        <div className=\"container has-text-centered\">\n          <h1 className=\"title\">Create Shared Patient Record</h1>\n        </div>\n        <div className=\"columns is-centered\" style={{ margin: \"10px 0\" }}>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Receiver MpID</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Receiver MpID\"\n                  value={receiver}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setReceiver(value.replace(\" \", \"\"));\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-quarter-desktop\">\n            <div className=\"buttons\">\n              <button\n                className={`button is-success ${loading ? \"is-loading\" : \"\"}`}\n                onClick={(event) => {\n                  event.preventDefault();\n                  onSubmit();\n                }}\n                style={{ margin: \"0 auto\" }}\n              >\n                Create\n              </button>\n            </div>\n\n            <div className=\"help has-text-centered is-size-5 is-success\">\n              <h1 className=\"help has-text-centered is-size-5 is-success\">\n                {data ? `Shared Record create successfully` : \"\"}\n              </h1>\n            </div>\n            <p className=\"help has-text-centered is-size-5 is-danger\">\n              {error ? error : \"\"}\n            </p>\n          </div>\n        </div>\n        {data ? (\n          <article\n            className=\"media\"\n            style={{\n              border: \"1px solid #dbdbdb\",\n              padding: \"10px\",\n              borderRadius: \"10px\",\n            }}\n          >\n            <div className=\"media-content\">\n              <div className=\"content\">\n                <p>\n                  <strong>Record Id: </strong>\n                  <Link\n                    to={`/patient/${params.id}/patient-case/view/${params.case}/patient-record/view/${params.record}`}\n                  >\n                    {data.createSharedRecord.record.recordId}\n                  </Link>\n                  .{\" \"}\n                  <small>\n                    <strong>Visit No.:</strong>{\" \"}\n                    {data.createSharedRecord.record.visitNo}\n                  </small>\n                  <br />\n                  Created At:{\" \"}\n                  {moment(data.createSharedRecord.record.createdAt).format(\n                    \"dddd, MMMM Do YYYY, h:mm:ss a\"\n                  )}\n                  <br />\n                  <strong>Case Id: </strong>\n                  <Link\n                    to={`/patient/${params.id}/patient-case/view/${params.case}`}\n                  >\n                    {data.createSharedRecord.case.caseId}\n                  </Link>\n                  .{\" \"}\n                  <small>\n                    <strong>No. of Visits:</strong>{\" \"}\n                    {data.createSharedRecord.case.noOfVisits}\n                  </small>\n                  <br />\n                  <strong>Details: </strong>\n                  {data.createSharedRecord.case.icdCode.commonName} -{\" \"}\n                  {data.createSharedRecord.case.icdSubCode.scientificName}\n                  <br />\n                  Created At:{\" \"}\n                  {moment(data.createSharedRecord.case.createdAt).format(\n                    \"dddd, MMMM Do YYYY, h:mm:ss a\"\n                  )}\n                  <br />\n                  Last Updated At:{\" \"}\n                  {moment(data.createSharedRecord.case.updatedAt).format(\n                    \"dddd, MMMM Do YYYY, h:mm:ss a\"\n                  )}\n                  <br />\n                  &nbsp;\n                </p>\n                <p>\n                  <strong>Sender: </strong>\n                  {data.createSharedRecord.sender.user.firstName}{\" \"}\n                  {data.createSharedRecord.sender.user.lastName}.{\" \"}\n                  <small>\n                    &nbsp;<strong>MpID:</strong>{\" \"}\n                    <Link\n                      to={`/medicalpractitioner/${data.createSharedRecord.sender.mpId}`}\n                    >\n                      {data.createSharedRecord.sender.mpId}\n                    </Link>\n                  </small>\n                  <br />\n                  <strong>Receiver: </strong>\n                  {data.createSharedRecord.receiver.user.firstName}{\" \"}\n                  {data.createSharedRecord.receiver.user.lastName}.{\" \"}\n                  <small>\n                    &nbsp;<strong>MpID:</strong>{\" \"}\n                    <Link\n                      to={`/medicalpractitioner/${data.createSharedRecord.receiver.mpId}`}\n                    >\n                      {data.createSharedRecord.receiver.mpId}\n                    </Link>\n                  </small>\n                  <br />\n                  Shared At:{\" \"}\n                  {moment(data.createSharedRecord.sharedAt).format(\n                    \"dddd, MMMM Do YYYY, h:mm:ss a\"\n                  )}\n                  <br />\n                  &nbsp;\n                </p>\n              </div>\n            </div>\n            <div className=\"media-right\">\n              <HL7\n                HL7={data.createSharedRecord.HL7}\n                caseId={data.createSharedRecord.case.caseId}\n              ></HL7>\n            </div>\n          </article>\n        ) : null}\n      </div>\n    </section>\n  );\n};\n\nexport default CreateSharedRecord;\n","import { gql } from \"apollo-boost\";\nimport React, { useContext, useState } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport { Redirect } from \"react-router-dom\";\nimport { CurrentUserContext } from \"../../../providers/currentUser.provider\";\nimport CreateSharedRecord from \"./create-shared-record.component\";\n\nconst CreateSharedRecordContainer = (props) => {\n  const [err, setErr] = useState(\"\");\n  const { currentUser } = useContext(CurrentUserContext);\n  const {\n    match: { params },\n  } = props;\n  const recordId = params.record;\n  const mutation = gql`\n    mutation CreateSharedRecord($record: String!, $receiver: String!) {\n      createSharedRecord(data: { receiver: $receiver, record: $record }) {\n        sharedRecordId\n        HL7\n        record {\n          recordId\n          visitNo\n          createdAt\n        }\n        case {\n          caseId\n          createdAt\n          updatedAt\n          noOfVisits\n          icdCode {\n            commonName\n          }\n          icdSubCode {\n            scientificName\n          }\n        }\n        sender {\n          mpId\n          user {\n            firstName\n            lastName\n            email\n          }\n        }\n        receiver {\n          mpId\n          user {\n            firstName\n            lastName\n            email\n          }\n        }\n        sharedAt\n      }\n    }\n  `;\n  if (!currentUser || currentUser.role !== \"MedicalPractitioner\") {\n    return <Redirect to=\"/\"></Redirect>;\n  }\n  return (\n    <Mutation\n      mutation={mutation}\n      onError={(error) => {\n        if (error && error.graphQLErrors) {\n          setErr(\n            error.graphQLErrors.map((each) => {\n              return each.message;\n            })\n          );\n        } else if (error && error.networkError) {\n          setErr(error.networkEdatarror.message);\n        }\n      }}\n    >\n      {(createFn, { loading, error, data }) => {\n        return (\n          <CreateSharedRecord\n            {...props}\n            loading={loading}\n            error={err}\n            create={(receiver) => {\n              createFn({\n                variables: {\n                  record: recordId,\n                  receiver,\n                },\n              });\n            }}\n            data={data}\n          ></CreateSharedRecord>\n        );\n      }}\n    </Mutation>\n  );\n};\n\nexport default CreateSharedRecordContainer;\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport HL7 from \"../../../components/hl7/hl7.component\";\n\nconst SearchSharedRecord = (props) => {\n  const {\n    recordId,\n    setRecordId,\n    ToDate,\n    setToDate,\n    FromDate,\n    setFromDate,\n    error,\n    loading,\n    records,\n    match: { params },\n  } = props;\n  return (\n    <section className=\"hero is-small is-light\">\n      <div className=\"hero-body\">\n        <div className=\"container has-text-centered\">\n          <h1 className=\"title\">Search Shared Patient Records</h1>\n          <p className=\"help is-size-5 is-danger\">{error ? error : \"\"}</p>\n          {loading ? (\n            <button className=\"button is-success is-loading\">Loading</button>\n          ) : (\n            \"\"\n          )}\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Record Id</label>\n              <div className=\"control has-icons-left\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Record Id\"\n                  value={recordId}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setRecordId(value);\n                  }}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fa fa-user\" aria-hidden=\"true\"></i>\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-quarter-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">From Date</label>\n              <div className=\"control has-icons-left\">\n                <input\n                  className=\"input\"\n                  type=\"date\"\n                  placeholder=\"From Date\"\n                  value={FromDate}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setFromDate(value);\n                  }}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-quarter-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">To Date</label>\n              <div className=\"control has-icons-left\">\n                <input\n                  className=\"input\"\n                  type=\"date\"\n                  placeholder=\"To Date\"\n                  value={ToDate}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setToDate(value);\n                  }}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <hr\n          className=\"navbar-divider\"\n          style={{ backgroundColor: \"#363636\" }}\n        ></hr>\n        <div className=\"container\">\n          {records.map((eachRecord, key) => {\n            return (\n              <article\n                key={key}\n                className=\"media\"\n                style={{\n                  border: \"1px solid #dbdbdb\",\n                  padding: \"10px\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                <div className=\"media-content\">\n                  <div className=\"content\">\n                    <p>\n                      <strong>Record Id: </strong>\n                      <Link\n                        to={`/patient/${params.id}/patient-case/view/${params.case}/patient-record/view/${params.record}`}\n                      >\n                        {eachRecord.record.recordId}\n                      </Link>\n                      .{\" \"}\n                      <small>\n                        <strong>Visit No.:</strong> {eachRecord.record.visitNo}\n                      </small>\n                      <br />\n                      Created At:{\" \"}\n                      {moment(eachRecord.record.createdAt).format(\n                        \"dddd, MMMM Do YYYY, h:mm:ss a\"\n                      )}\n                      <br />\n                      <strong>Case Id: </strong>\n                      <Link\n                        to={`/patient/${params.id}/patient-case/view/${params.case}`}\n                      >\n                        {eachRecord.case.caseId}\n                      </Link>\n                      .{\" \"}\n                      <small>\n                        <strong>No. of Visits:</strong>{\" \"}\n                        {eachRecord.case.noOfVisits}\n                      </small>\n                      <br />\n                      <strong>Details: </strong>\n                      {eachRecord.case.icdCode.commonName} -{\" \"}\n                      {eachRecord.case.icdSubCode.scientificName}\n                      <br />\n                      Created At:{\" \"}\n                      {moment(eachRecord.case.createdAt).format(\n                        \"dddd, MMMM Do YYYY, h:mm:ss a\"\n                      )}\n                      <br />\n                      Last Updated At:{\" \"}\n                      {moment(eachRecord.case.updatedAt).format(\n                        \"dddd, MMMM Do YYYY, h:mm:ss a\"\n                      )}\n                      <br />\n                      &nbsp;\n                    </p>\n                    <p>\n                      <strong>Sender: </strong>\n                      {eachRecord.sender.user.firstName}{\" \"}\n                      {eachRecord.sender.user.lastName}.{\" \"}\n                      <small>\n                        &nbsp;<strong>MpID:</strong>{\" \"}\n                        <Link\n                          to={`/medicalpractitioner/${eachRecord.sender.mpId}`}\n                        >\n                          {eachRecord.sender.mpId}\n                        </Link>\n                      </small>\n                      <br />\n                      <strong>Receiver: </strong>\n                      {eachRecord.receiver.user.firstName}{\" \"}\n                      {eachRecord.receiver.user.lastName}.{\" \"}\n                      <small>\n                        &nbsp;<strong>MpID:</strong>{\" \"}\n                        <Link\n                          to={`/medicalpractitioner/${eachRecord.receiver.mpId}`}\n                        >\n                          {eachRecord.receiver.mpId}\n                        </Link>\n                      </small>\n                      <br />\n                      Shared At:{\" \"}\n                      {moment(eachRecord.sharedAt).format(\n                        \"dddd, MMMM Do YYYY, h:mm:ss a\"\n                      )}\n                      <br />\n                      &nbsp;\n                    </p>\n                  </div>\n                </div>\n                <div className=\"media-right\">\n                  <HL7\n                    HL7={eachRecord.HL7}\n                    caseId={eachRecord.case.caseId}\n                  ></HL7>\n                </div>\n              </article>\n            );\n          })}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default SearchSharedRecord;\n","import { gql } from \"apollo-boost\";\nimport React, { useContext, useState } from \"react\";\nimport { Query } from \"react-apollo\";\nimport { Redirect } from \"react-router-dom\";\nimport { CurrentUserContext } from \"../../../providers/currentUser.provider\";\nimport SearchSharedRecord from \"./search-shared-record.component\";\n\nconst SearchSharedRecordContainer = (props) => {\n  const { currentUser } = useContext(CurrentUserContext);\n  const {\n    match: { params },\n  } = props;\n  const caseId = params.case;\n  const [recordId, setRecordId] = useState(\"\");\n  const [ToDate, setToDate] = useState(\"\");\n  const [FromDate, setFromDate] = useState(\"\");\n  const [err, setErr] = useState(\"\");\n  const [records, setRecords] = useState([]);\n  const query = gql`\n    query ViewSharedRecord(\n      $caseId: String!\n      $recordId: String\n      $ToDate: String\n      $FromDate: String\n    ) {\n      viewSharedRecord(\n        caseId: $caseId\n        recordId: $recordId\n        ToDate: $ToDate\n        FromDate: $FromDate\n      ) {\n        sharedRecordId\n        HL7\n        record {\n          recordId\n          visitNo\n          createdAt\n        }\n        case {\n          caseId\n          createdAt\n          updatedAt\n          noOfVisits\n          icdCode {\n            commonName\n          }\n          icdSubCode {\n            scientificName\n          }\n        }\n        sender {\n          mpId\n          user {\n            firstName\n            lastName\n            email\n          }\n        }\n        receiver {\n          mpId\n          user {\n            firstName\n            lastName\n            email\n          }\n        }\n        sharedAt\n      }\n    }\n  `;\n  if (!currentUser) {\n    return <Redirect to=\"/\"></Redirect>;\n  }\n  return (\n    <Query\n      query={query}\n      variables={{\n        caseId,\n        recordId,\n        ToDate,\n        FromDate,\n      }}\n      onCompleted={(data) => {\n        setRecords(data.viewSharedRecord);\n      }}\n      onError={(err) => {\n        if (err.graphQLErrors) {\n          setErr(\n            err.graphQLErrors.map((error) => {\n              return error.message;\n            })\n          );\n        }\n        if (err.networkError) {\n          setErr(err.networkError.message);\n        }\n      }}\n    >\n      {({ loading }) => {\n        if (loading) {\n          setErr(\"\");\n        }\n        return (\n          <SearchSharedRecord\n            {...props}\n            recordId={recordId}\n            setRecordId={setRecordId}\n            ToDate={ToDate}\n            setToDate={setToDate}\n            FromDate={FromDate}\n            setFromDate={setFromDate}\n            records={records}\n            loading={loading}\n            error={err}\n          ></SearchSharedRecord>\n        );\n      }}\n    </Query>\n  );\n};\n\nexport default SearchSharedRecordContainer;\n","import React, { useContext } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { CurrentUserContext } from \"../../providers/currentUser.provider\";\nimport CreateSharedRecordContainer from \"./create-shared-record/create-shared-record.container\";\nimport SearchSharedRecordContainer from \"./search-shared-record/search-shared-record.container\";\n\nconst SharedRecordContainer = (props) => {\n  const { match } = props;\n  const { currentUser } = useContext(CurrentUserContext);\n  if (!currentUser) {\n    return <Redirect to=\"/\"></Redirect>;\n  }\n  return (\n    <Switch>\n      <Route\n        exact\n        path={`${match.path}`}\n        component={SearchSharedRecordContainer}\n      ></Route>\n      <Route\n        exact\n        path={`${match.path}/:record/create`}\n        component={CreateSharedRecordContainer}\n      ></Route>\n    </Switch>\n  );\n};\n\nexport default SharedRecordContainer;\n","import React, { useContext } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport SearchCaseContainer from \"./search-case/search-case.container\";\nimport CreateCaseContainer from \"./create-case/create-case.container\";\nimport ViewCaseContainer from \"./view-case/view-case.container\";\nimport { CurrentUserContext } from \"../../providers/currentUser.provider\";\nimport PatientRecordContainer from \"../patient-record/patient-record.container\";\nimport SharedRecordContainer from \"../shared-record/shared-record.container\";\n\nconst PatientCaseContainer = (props) => {\n  const { match } = props;\n  const { currentUser } = useContext(CurrentUserContext);\n  if (!currentUser) {\n    return <Redirect to=\"/\"></Redirect>;\n  }\n  return (\n    <Switch>\n      <Route\n        exact\n        path={`${match.path}`}\n        component={SearchCaseContainer}\n      ></Route>\n      <Route\n        exact\n        path={`${match.path}/create`}\n        component={CreateCaseContainer}\n      ></Route>\n      <Route\n        exact\n        path={`${match.path}/view/:case`}\n        component={ViewCaseContainer}\n      ></Route>\n      <Route\n        path={`${match.path}/view/:case/patient-record`}\n        component={PatientRecordContainer}\n      ></Route>\n      <Route\n        path={`${match.path}/view/:case/shared-record`}\n        component={SharedRecordContainer}\n      ></Route>\n    </Switch>\n  );\n};\n\nexport default PatientCaseContainer;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport HL7 from \"../../../components/hl7/hl7.component\";\n\nconst CreateSharedCase = (props) => {\n  const { loading, error, data, create, match } = props;\n  const [receiver, setReceiver] = useState(\"\");\n  const onSubmit = () => {\n    create(receiver);\n  };\n  return (\n    <section className=\"hero is-medium is-light is-bold\">\n      <div className=\"hero-body\">\n        <div className=\"container has-text-centered\">\n          <h1 className=\"title\">Create Shared Patient Case</h1>\n        </div>\n        <div className=\"columns is-centered\" style={{ margin: \"10px 0\" }}>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Receiver MpID</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Receiver MpID\"\n                  value={receiver}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setReceiver(value.replace(\" \", \"\"));\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-quarter-desktop\">\n            <div className=\"buttons\">\n              <button\n                className={`button is-success ${loading ? \"is-loading\" : \"\"}`}\n                onClick={(event) => {\n                  event.preventDefault();\n                  onSubmit();\n                }}\n                style={{ margin: \"0 auto\" }}\n              >\n                Create\n              </button>\n            </div>\n\n            <div className=\"help has-text-centered is-size-5 is-success\">\n              <h1 className=\"help has-text-centered is-size-5 is-success\">\n                {data ? `Shared Case create successfully` : \"\"}\n              </h1>\n            </div>\n            <p className=\"help has-text-centered is-size-5 is-danger\">\n              {error ? error : \"\"}\n            </p>\n          </div>\n        </div>\n        {data ? (\n          <article\n            className=\"media\"\n            style={{\n              border: \"1px solid #dbdbdb\",\n              padding: \"10px\",\n              borderRadius: \"10px\",\n            }}\n          >\n            <div className=\"media-content\">\n              <div className=\"content\">\n                <p>\n                  <strong>Case Id: </strong>\n                  <Link\n                    to={`${match.url\n                      .replace(\n                        \"shared-case/\",\n                        `patient-case/view/${data.createSharedCase.case.caseId}`\n                      )\n                      .replace(\"create\", \"\")}`}\n                  >\n                    {data.createSharedCase.case.caseId}\n                  </Link>\n                  .{\" \"}\n                  <small>\n                    <strong>No. of Visits:</strong>{\" \"}\n                    {data.createSharedCase.case.noOfVisits}\n                  </small>\n                  <br />\n                  <strong>Details: </strong>\n                  {data.createSharedCase.case.icdCode.commonName} -{\" \"}\n                  {data.createSharedCase.case.icdSubCode.scientificName}\n                  <br />\n                  Created At:{\" \"}\n                  {moment(data.createSharedCase.case.createdAt).format(\n                    \"dddd, MMMM Do YYYY, h:mm:ss a\"\n                  )}\n                  <br />\n                  Last Updated At:{\" \"}\n                  {moment(data.createSharedCase.case.updatedAt).format(\n                    \"dddd, MMMM Do YYYY, h:mm:ss a\"\n                  )}\n                  <br />\n                  &nbsp;\n                </p>\n                <p>\n                  <strong>Sender: </strong>\n                  {data.createSharedCase.sender.user.firstName}{\" \"}\n                  {data.createSharedCase.sender.user.lastName}.{\" \"}\n                  <small>\n                    &nbsp;<strong>MpID:</strong>{\" \"}\n                    <Link\n                      to={`/medicalpractitioner/${data.createSharedCase.sender.mpId}`}\n                    >\n                      {data.createSharedCase.sender.mpId}\n                    </Link>\n                  </small>\n                  <br />\n                  <strong>Receiver: </strong>\n                  {data.createSharedCase.receiver.user.firstName}{\" \"}\n                  {data.createSharedCase.receiver.user.lastName}.{\" \"}\n                  <small>\n                    &nbsp;<strong>MpID:</strong>{\" \"}\n                    <Link\n                      to={`/medicalpractitioner/${data.createSharedCase.receiver.mpId}`}\n                    >\n                      {data.createSharedCase.receiver.mpId}\n                    </Link>\n                  </small>\n                  <br />\n                  Shared At:{\" \"}\n                  {moment(data.createSharedCase.sharedAt).format(\n                    \"dddd, MMMM Do YYYY, h:mm:ss a\"\n                  )}\n                  <br />\n                  &nbsp;\n                </p>\n              </div>\n            </div>\n            <div className=\"media-right\">\n              <HL7\n                HL7={data.createSharedCase.HL7}\n                caseId={data.createSharedCase.case.caseId}\n              ></HL7>\n            </div>\n          </article>\n        ) : null}\n      </div>\n    </section>\n  );\n};\n\nexport default CreateSharedCase;\n","import { gql } from \"apollo-boost\";\nimport React, { useContext, useState } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport { Redirect } from \"react-router-dom\";\nimport { CurrentUserContext } from \"../../../providers/currentUser.provider\";\nimport CreateSharedCase from \"./create-shared-case.component\";\n\nconst CreateSharedCaseContainer = (props) => {\n  const [err, setErr] = useState(\"\");\n  const { currentUser } = useContext(CurrentUserContext);\n  const {\n    match: { params },\n  } = props;\n  const caseId = params.case;\n  const mutation = gql`\n    mutation CreateSharedCase($case: String!, $receiver: String!) {\n      createSharedCase(data: { receiver: $receiver, case: $case }) {\n        sharedCaseId\n        HL7\n        case {\n          caseId\n          createdAt\n          updatedAt\n          noOfVisits\n          icdCode {\n            commonName\n          }\n          icdSubCode {\n            scientificName\n          }\n        }\n        sender {\n          mpId\n          user {\n            firstName\n            lastName\n            email\n          }\n        }\n        receiver {\n          mpId\n          user {\n            firstName\n            lastName\n            email\n          }\n        }\n        sharedAt\n      }\n    }\n  `;\n  if (!currentUser || currentUser.role !== \"MedicalPractitioner\") {\n    return <Redirect to=\"/\"></Redirect>;\n  }\n  return (\n    <Mutation\n      mutation={mutation}\n      onError={(error) => {\n        if (error && error.graphQLErrors) {\n          setErr(\n            error.graphQLErrors.map((each) => {\n              return each.message;\n            })\n          );\n        } else if (error && error.networkError) {\n          setErr(error.networkEdatarror.message);\n        }\n      }}\n    >\n      {(createFn, { loading, error, data }) => {\n        return (\n          <CreateSharedCase\n            {...props}\n            loading={loading}\n            error={err}\n            create={(receiver) => {\n              createFn({\n                variables: {\n                  case: caseId,\n                  receiver,\n                },\n              });\n            }}\n            data={data}\n          ></CreateSharedCase>\n        );\n      }}\n    </Mutation>\n  );\n};\n\nexport default CreateSharedCaseContainer;\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport HL7 from \"../../../components/hl7/hl7.component\";\n\nconst SearchSharedCase = (props) => {\n  const {\n    caseId,\n    setCaseId,\n    ToDate,\n    setToDate,\n    FromDate,\n    setFromDate,\n    error,\n    loading,\n    cases,\n    match,\n  } = props;\n  return (\n    <section className=\"hero is-small is-light\">\n      <div className=\"hero-body\">\n        <div className=\"container has-text-centered\">\n          <h1 className=\"title\">Search Shared Patient Case</h1>\n          <p className=\"help is-size-5 is-danger\">{error ? error : \"\"}</p>\n          {loading ? (\n            <button className=\"button is-success is-loading\">Loading</button>\n          ) : (\n            \"\"\n          )}\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Case Id</label>\n              <div className=\"control has-icons-left\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Case Id\"\n                  value={caseId}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setCaseId(value);\n                  }}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fa fa-user\" aria-hidden=\"true\"></i>\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-quarter-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">From Date</label>\n              <div className=\"control has-icons-left\">\n                <input\n                  className=\"input\"\n                  type=\"date\"\n                  placeholder=\"From Date\"\n                  value={FromDate}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setFromDate(value);\n                  }}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-quarter-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">To Date</label>\n              <div className=\"control has-icons-left\">\n                <input\n                  className=\"input\"\n                  type=\"date\"\n                  placeholder=\"To Date\"\n                  value={ToDate}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setToDate(value);\n                  }}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <hr\n          className=\"navbar-divider\"\n          style={{ backgroundColor: \"#363636\" }}\n        ></hr>\n        <div className=\"container\">\n          {cases.map((eachCase, key) => {\n            return (\n              <article\n                key={key}\n                className=\"media\"\n                style={{\n                  border: \"1px solid #dbdbdb\",\n                  padding: \"10px\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                <div className=\"media-content\">\n                  <div className=\"content\">\n                    <p>\n                      <strong>Case Id: </strong>\n                      <Link\n                        to={`${match.url.replace(\"shared\", \"patient\")}/view/${\n                          eachCase.case.caseId\n                        }`}\n                      >\n                        {eachCase.case.caseId}\n                      </Link>\n                      .{\" \"}\n                      <small>\n                        <strong>No. of Visits:</strong>{\" \"}\n                        {eachCase.case.noOfVisits}\n                      </small>\n                      <br />\n                      <strong>Details: </strong>\n                      {eachCase.case.icdCode.commonName} -{\" \"}\n                      {eachCase.case.icdSubCode.scientificName}\n                      <br />\n                      Created At:{\" \"}\n                      {moment(eachCase.case.createdAt).format(\n                        \"dddd, MMMM Do YYYY, h:mm:ss a\"\n                      )}\n                      <br />\n                      Last Updated At:{\" \"}\n                      {moment(eachCase.case.updatedAt).format(\n                        \"dddd, MMMM Do YYYY, h:mm:ss a\"\n                      )}\n                      <br />\n                      &nbsp;\n                    </p>\n                    <p>\n                      <strong>Sender: </strong>\n                      {eachCase.sender.user.firstName}{\" \"}\n                      {eachCase.sender.user.lastName}.{\" \"}\n                      <small>\n                        &nbsp;<strong>MpID:</strong>{\" \"}\n                        <Link\n                          to={`/medicalpractitioner/${eachCase.sender.mpId}`}\n                        >\n                          {eachCase.sender.mpId}\n                        </Link>\n                      </small>\n                      <br />\n                      <strong>Receiver: </strong>\n                      {eachCase.receiver.user.firstName}{\" \"}\n                      {eachCase.receiver.user.lastName}.{\" \"}\n                      <small>\n                        &nbsp;<strong>MpID:</strong>{\" \"}\n                        <Link\n                          to={`/medicalpractitioner/${eachCase.receiver.mpId}`}\n                        >\n                          {eachCase.receiver.mpId}\n                        </Link>\n                      </small>\n                      <br />\n                      Shared At:{\" \"}\n                      {moment(eachCase.sharedAt).format(\n                        \"dddd, MMMM Do YYYY, h:mm:ss a\"\n                      )}\n                      <br />\n                      &nbsp;\n                    </p>\n                  </div>\n                </div>\n                <div className=\"media-right\">\n                  <HL7 HL7={eachCase.HL7} caseId={eachCase.case.caseId}></HL7>\n                </div>\n              </article>\n            );\n          })}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default SearchSharedCase;\n","import { gql } from \"apollo-boost\";\nimport React, { useContext, useState } from \"react\";\nimport { Query } from \"react-apollo\";\nimport { Redirect } from \"react-router-dom\";\nimport { CurrentUserContext } from \"../../../providers/currentUser.provider\";\nimport SearchSharedCase from \"./search-shared-case.component\";\n\nconst SearchSharedCaseContainer = (props) => {\n  const { currentUser } = useContext(CurrentUserContext);\n  const {\n    match: { params },\n  } = props;\n  const patientId = params.id;\n  const [caseId, setCaseId] = useState(\"\");\n  const [ToDate, setToDate] = useState(\"\");\n  const [FromDate, setFromDate] = useState(\"\");\n  const [err, setErr] = useState(\"\");\n  const [cases, setCases] = useState([]);\n  const query = gql`\n    query ViewSharedCase(\n      $patientId: String!\n      $caseId: String\n      $ToDate: String\n      $FromDate: String\n    ) {\n      viewSharedCase(\n        patientId: $patientId\n        caseId: $caseId\n        ToDate: $ToDate\n        FromDate: $FromDate\n      ) {\n        sharedCaseId\n        HL7\n        case {\n          caseId\n          createdAt\n          updatedAt\n          noOfVisits\n          icdCode {\n            commonName\n          }\n          icdSubCode {\n            scientificName\n          }\n        }\n        sender {\n          mpId\n          user {\n            firstName\n            lastName\n            email\n          }\n        }\n        receiver {\n          mpId\n          user {\n            firstName\n            lastName\n            email\n          }\n        }\n        sharedAt\n      }\n    }\n  `;\n  if (!currentUser) {\n    return <Redirect to=\"/\"></Redirect>;\n  }\n  return (\n    <Query\n      query={query}\n      variables={{\n        patientId,\n        caseId,\n        ToDate,\n        FromDate,\n      }}\n      onCompleted={(data) => {\n        setCases(data.viewSharedCase);\n      }}\n      onError={(err) => {\n        if (err.graphQLErrors) {\n          setErr(\n            err.graphQLErrors.map((error) => {\n              return error.message;\n            })\n          );\n        }\n        if (err.networkError) {\n          setErr(err.networkError.message);\n        }\n      }}\n    >\n      {({ loading }) => {\n        if (loading) {\n          setErr(\"\");\n        }\n        return (\n          <SearchSharedCase\n            {...props}\n            caseId={caseId}\n            setCaseId={setCaseId}\n            ToDate={ToDate}\n            setToDate={setToDate}\n            FromDate={FromDate}\n            setFromDate={setFromDate}\n            cases={cases}\n            loading={loading}\n            error={err}\n          ></SearchSharedCase>\n        );\n      }}\n    </Query>\n  );\n};\n\nexport default SearchSharedCaseContainer;\n","import React, { useContext } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { CurrentUserContext } from \"../../providers/currentUser.provider\";\nimport CreateSharedCaseContainer from \"./create-shared-case/create-shared-case.container\";\nimport SearchSharedCaseContainer from \"./search-shared-case/search-shared-case.container\";\n\nconst SharedCaseContainer = (props) => {\n  const { match } = props;\n  const { currentUser } = useContext(CurrentUserContext);\n  if (!currentUser) {\n    return <Redirect to=\"/\"></Redirect>;\n  }\n  return (\n    <Switch>\n      <Route\n        exact\n        path={`${match.path}`}\n        component={SearchSharedCaseContainer}\n      ></Route>\n      <Route\n        exact\n        path={`${match.path}/:case/create`}\n        component={CreateSharedCaseContainer}\n      ></Route>\n    </Switch>\n  );\n};\n\nexport default SharedCaseContainer;\n","import React, { useContext } from \"react\";\nimport { CurrentUserContext } from \"../../../providers/currentUser.provider\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport MePatientContainer from \"./mePatient.container\";\nimport ViewPatientContainer from \"./viewPatient.container\";\nimport PatientCaseContainer from \"../../patient-case/patient-case.container\";\nimport SharedCaseContainer from \"../../shared-case/shared-case.container\";\n\nconst PatientContainer = (props) => {\n  const { match } = props;\n  const { currentUser } = useContext(CurrentUserContext);\n  if (!currentUser) {\n    return <Redirect to=\"/\"></Redirect>;\n  }\n  return (\n    <Switch>\n      <Route\n        exact\n        path={`${match.path}`}\n        component={MePatientContainer}\n      ></Route>\n      <Route\n        exact\n        path={`${match.path}/:id`}\n        component={ViewPatientContainer}\n      ></Route>\n      <Route\n        path={`${match.path}/:id/shared-case`}\n        component={SharedCaseContainer}\n      ></Route>\n      <Route\n        path={`${match.path}/:id/patient-case`}\n        component={PatientCaseContainer}\n      ></Route>\n    </Switch>\n  );\n};\n\nexport default PatientContainer;\n","import React, { useContext } from \"react\";\nimport moment from \"moment\";\nimport { CurrentUserContext } from \"../../../providers/currentUser.provider\";\nimport UserCard from \"../../../components/user-card/user-card.component\";\nimport ApproveContainer from \"../../../components/approve/approve.container\";\nimport HospitalCard from \"../../../components/hospital-card/hospital-card.component\";\n\nconst MedicalPractitioner = (props) => {\n  const { currentUser } = useContext(CurrentUserContext);\n  const { error, data } = props;\n  const registeredAt = data\n    ? moment(data.registeredAt).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")\n    : null;\n  return (\n    <div>\n      <section className=\"hero is-medium is-light is-bold\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <div className=\"has-text-centered\">\n              <h1 className=\"title\">Profile</h1>\n              {currentUser.role === \"DatabaseAdmin\" && !data.user.verified ? (\n                <ApproveContainer\n                  role=\"MedicalPractitioner\"\n                  id={data.mpId}\n                ></ApproveContainer>\n              ) : null}\n            </div>\n          </div>\n          <p className=\"help is-size-5 is-danger\">{error ? error : \"\"}</p>\n          {data ? (\n            <div className=\"columns is-centered\">\n              <div\n                className=\"column is-one-third-desktop\"\n                style={{ padding: \"10px\" }}\n              >\n                <UserCard user={data.user}></UserCard>\n              </div>\n              <div className=\"column is-one-third-desktop\">\n                <article className=\"media\">\n                  <div className=\"media-content\">\n                    <div className=\"content\" style={{ padding: \"10px\" }}>\n                      <p>\n                        <strong>MedicalPractitioner ID:</strong>: {data.mpId}{\" \"}\n                        <br />\n                        <strong>Field</strong>: {data.field} <br />\n                        <strong>Degree</strong>: {data.degree} <br />\n                        <strong>Address</strong>: {data.address} <br />\n                        <strong>Clinic Address</strong>: {data.clinicAddress}{\" \"}\n                        <br />\n                        <strong>Registered At</strong>: {registeredAt} <br />\n                      </p>\n                      <HospitalCard hospital={data.hospital}></HospitalCard>\n                    </div>\n                  </div>\n                </article>\n              </div>\n            </div>\n          ) : null}\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default MedicalPractitioner;\n","import React, { useState } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { Query } from \"react-apollo\";\nimport MedicalPractitioner from \"./medicalpractitioner.component\";\nimport { Spinner } from \"../../../components/spinner/spinner.component\";\n\nconst MeMedicalPractitionerContainer = (props) => {\n  const [err, setErr] = useState(\"\");\n  const query = gql`\n    {\n      meMedicalPractitioner {\n        user {\n          firstName\n          middleName\n          lastName\n          sex\n          dob\n          email\n          verified\n        }\n        mpId\n        address\n        clinicAddress\n        degree\n        field\n        registeredAt\n        hospital {\n          hospitalId\n          name\n          address\n          district\n          pincode {\n            pincode\n            region\n          }\n          country {\n            countryCode\n            countryName\n          }\n        }\n      }\n    }\n  `;\n  return (\n    <Query\n      query={query}\n      onError={(error) => {\n        if (error && error.graphQLErrors) {\n          setErr(\n            error.graphQLErrors.map((each) => {\n              return each.message;\n            })\n          );\n        } else if (error && error.networkError) {\n          setErr(error.networkError.message);\n        }\n      }}\n    >\n      {({ loading, error, data }) => {\n        if (loading) {\n          setErr(\"\");\n          return <Spinner></Spinner>;\n        }\n        return (\n          <MedicalPractitioner\n            loading={loading}\n            error={err}\n            data={data ? data.meMedicalPractitioner : null}\n          ></MedicalPractitioner>\n        );\n      }}\n    </Query>\n  );\n};\n\nexport default MeMedicalPractitionerContainer;\n","import React, { useState } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { Query } from \"react-apollo\";\nimport MedicalPractitioner from \"./medicalpractitioner.component\";\nimport { Spinner } from \"../../../components/spinner/spinner.component\";\n\nconst ViewMedicalPractitionerContainer = (props) => {\n  const [err, setErr] = useState(\"\");\n  const {\n    match: { params },\n  } = props;\n  const query = gql`\n    query viewMedicalPractitioner($id: String!) {\n      viewMedicalPractitioner(id: $id) {\n        user {\n          firstName\n          middleName\n          lastName\n          sex\n          dob\n          email\n          verified\n        }\n        mpId\n        address\n        clinicAddress\n        degree\n        field\n        registeredAt\n        hospital {\n          hospitalId\n          name\n          address\n          district\n          pincode {\n            pincode\n            region\n          }\n          country {\n            countryCode\n            countryName\n          }\n        }\n      }\n    }\n  `;\n  return (\n    <Query\n      query={query}\n      variables={{\n        id: params.id,\n      }}\n      onError={(error) => {\n        if (error && error.graphQLErrors) {\n          setErr(\n            error.graphQLErrors.map((each) => {\n              return each.message;\n            })\n          );\n        } else if (error && error.networkError) {\n          setErr(error.networkError.message);\n        }\n      }}\n    >\n      {({ loading, error, data }) => {\n        if (loading) {\n          setErr(\"\");\n          return <Spinner></Spinner>;\n        }\n        return (\n          <MedicalPractitioner\n            loading={loading}\n            error={err}\n            data={data ? data.viewMedicalPractitioner : null}\n          ></MedicalPractitioner>\n        );\n      }}\n    </Query>\n  );\n};\n\nexport default ViewMedicalPractitionerContainer;\n","import React, { useContext } from \"react\";\nimport { CurrentUserContext } from \"../../../providers/currentUser.provider\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport MeMedicalPractitionerContainer from \"./memedicalpractitioner.container\";\nimport ViewMedicalPractitionerContainer from \"./viewmedicalpractitioner.container\";\n\nconst MedicalPractitionerContainer = (props) => {\n  const { match } = props;\n  const { currentUser } = useContext(CurrentUserContext);\n  if (!currentUser) {\n    return <Redirect to=\"/\"></Redirect>;\n  }\n  return (\n    <Switch>\n      <Route\n        exact\n        path={`${match.path}`}\n        component={MeMedicalPractitionerContainer}\n      ></Route>\n      <Route\n        exact\n        path={`${match.path}/:id`}\n        component={ViewMedicalPractitionerContainer}\n      ></Route>\n    </Switch>\n  );\n};\n\nexport default MedicalPractitionerContainer;\n","import React from \"react\";\nimport moment from \"moment\";\nimport UserCard from \"../../../components/user-card/user-card.component\";\nimport HospitalCard from \"../../../components/hospital-card/hospital-card.component\";\n\nconst DatabaseAdmin = (props) => {\n  const { error, data } = props;\n  const registeredAt = data\n    ? moment(data.registeredAt).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")\n    : null;\n\n  return (\n    <div>\n      <section className=\"hero is-medium is-light is-bold\">\n        <div className=\"hero-body\">\n          <div className=\"container has-text-centered\">\n            <h1 className=\"title\">Profile</h1>\n          </div>\n          <br />\n          <p className=\"help is-size-5 is-danger\">{error ? error : \"\"}</p>\n          {data ? (\n            <div className=\"columns is-centered\">\n              <div\n                className=\"column is-one-third-desktop\"\n                style={{ padding: \"10px\" }}\n              >\n                <UserCard user={data.user}></UserCard>\n              </div>\n              <div className=\"column is-one-third-desktop\">\n                <article className=\"media\">\n                  <div className=\"media-content\">\n                    <div className=\"content\" style={{ padding: \"10px\" }}>\n                      <p>\n                        <strong>Contact</strong>: {data.contact} <br />\n                        <strong>Address</strong>: {data.address},{\" \"}\n                        {data.country.countryName} <br />\n                        <strong>Registered At</strong>: {registeredAt} <br />\n                      </p>\n                      <HospitalCard hospital={data.hospital}></HospitalCard>\n                    </div>\n                  </div>\n                </article>\n              </div>\n            </div>\n          ) : null}\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default DatabaseAdmin;\n","import React, { useState } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { Query } from \"react-apollo\";\nimport { Spinner } from \"../../../components/spinner/spinner.component\";\nimport DatabaseAdmin from \"./databaseadmin.component\";\n\nconst DatabaseAdminContainer = (props) => {\n  const [err, setErr] = useState(\"\");\n  const query = gql`\n    {\n      meDatabaseAdmin {\n        user {\n          firstName\n          middleName\n          lastName\n          sex\n          dob\n          email\n          verified\n        }\n        contact\n        address\n        country {\n          countryCode\n          countryName\n        }\n        hospital {\n          hospitalId\n          name\n          address\n          district\n          pincode {\n            pincode\n            region\n          }\n          country {\n            countryCode\n            countryName\n          }\n        }\n        registeredAt\n      }\n    }\n  `;\n  return (\n    <Query query={query}>\n      {({ loading, error, data }) => {\n        if (error && error.graphQLErrors) {\n          setErr(\n            error.graphQLErrors.map((each) => {\n              return each.message;\n            })\n          );\n        } else if (error && error.networkError) {\n          setErr(error.networkError.message);\n        }\n        if (loading) {\n          setErr(\"\");\n          return <Spinner></Spinner>;\n        }\n        return (\n          <DatabaseAdmin\n            loading={loading}\n            error={err}\n            data={data ? data.meDatabaseAdmin : null}\n          ></DatabaseAdmin>\n        );\n      }}\n    </Query>\n  );\n};\n\nexport default DatabaseAdminContainer;\n","import React, { Component } from \"react\";\nexport default class ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false,\n      error: \"\",\n      info: \"\",\n    };\n  }\n  componentDidCatch(error, info) {\n    this.setState(\n      {\n        ...this.state,\n        hasError: true,\n        error: error,\n        info: info,\n      },\n      () => {\n        console.log(this.state);\n      }\n    );\n  }\n  render() {\n    return this.state.hasError ? (\n      <div style={{ margin: \"10px 0\" }}>\n        <div className=\"container has-text-centered\">\n          <i className=\"fa fa-frown-o\" aria-hidden=\"true\"></i>\n          <h1 className=\"title\">OOPS! There's some error</h1>\n          <p>\n            Web page has been broken due to some issues.<br></br>Please try\n            re-loading!\n          </p>\n          <br />\n          <button\n            className=\"button is-success\"\n            onClick={(e) => {\n              window.location.reload();\n            }}\n          >\n            Reload\n          </button>\n        </div>\n      </div>\n    ) : (\n      this.props.children\n    );\n  }\n}\n","import React, { useState, useContext } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { Query } from \"react-apollo\";\nimport { Spinner } from \"../../../components/spinner/spinner.component\";\nimport InsuranceCard from \"../../../components/insurance-card/insurance-card.component\";\nimport { CurrentUserContext } from \"../../../providers/currentUser.provider\";\nimport { Redirect } from \"react-router-dom\";\n\nconst InsuranceContainer = (props) => {\n  const { currentUser } = useContext(CurrentUserContext);\n  const [err, setErr] = useState(\"\");\n  const query = gql`\n    {\n      mePatient {\n        insurance {\n          insuranceId\n          insuranceStatus\n          insuranceCompany1\n          insuranceCompany2\n          sponsorerDetails\n        }\n      }\n    }\n  `;\n  if (!currentUser || currentUser.role !== \"Patient\") {\n    return <Redirect to=\"/\"></Redirect>;\n  }\n  return (\n    <Query\n      query={query}\n      onError={(error) => {\n        if (error && error.graphQLErrors) {\n          setErr(\n            error.graphQLErrors.map((each) => {\n              return each.message;\n            })\n          );\n        } else if (error && error.networkError) {\n          setErr(error.networkError.message);\n        }\n      }}\n    >\n      {({ loading, error, data }) => {\n        if (loading) {\n          setErr(\"\");\n          return <Spinner></Spinner>;\n        }\n        return (\n          <InsuranceCard\n            error={err}\n            data={data.mePatient.insurance}\n            modifiable={true}\n          ></InsuranceCard>\n        );\n      }}\n    </Query>\n  );\n};\n\nexport default InsuranceContainer;\n","import React, { useState } from \"react\";\n\nconst InsuranceModify = (props) => {\n  const { loading, data, editData, error, type, modify } = props;\n  const [status, setStatus] = useState(\n    editData ? editData.insuranceStatus : \"\"\n  );\n  const [company1, setCompany1] = useState(\n    editData ? editData.insuranceCompany1 : \"\"\n  );\n  const [company2, setCompany2] = useState(\n    editData ? editData.insuranceCompany2 : \"\"\n  );\n  const [details, setDetails] = useState(\n    editData ? editData.sponsorerDetails : \"\"\n  );\n\n  const onSubmit = () => {\n    modify(status, company1, company2, details);\n  };\n  return (\n    <section className=\"hero is-small is-light is-bold\">\n      <div className=\"hero-body\">\n        <div className=\"container has-text-centered\">\n          <h1 className=\"title\">Insurance</h1>\n          <br />\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Insurance Status</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Insurance Status\"\n                  value={status}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setStatus(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Insurance Company 1</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Insurance Company 1\"\n                  value={company1}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setCompany1(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Insurance Company 2</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Insurance Company 2\"\n                  value={company2}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setCompany2(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Sponserer Details</label>\n              <div className=\"control\">\n                <textarea\n                  className=\"textarea\"\n                  type=\"text\"\n                  placeholder=\"Sponserer Details\"\n                  value={details}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setDetails(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div\n            className=\"column is-half-desktop\"\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n              alignItems: \"flex-start\",\n            }}\n          >\n            <div className=\"buttons\">\n              <button\n                className={`button is-success ${loading ? \"is-loading\" : \"\"}`}\n                onClick={(event) => {\n                  event.preventDefault();\n                  onSubmit();\n                }}\n                style={{ margin: \"10px auto\" }}\n              >\n                Change\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div\n            className=\"column is-half-desktop\"\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n              alignItems: \"flex-start\",\n            }}\n          >\n            {error ? <p className=\"notification is-danger\">{error}</p> : null}\n            {data ? (\n              <p className=\"notification is-success\">\n                {data[`${type}Insurance`].insuranceId} {type}ed successfully!\n              </p>\n            ) : null}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default InsuranceModify;\n","import React, { useContext, useState } from \"react\";\nimport { CurrentUserContext } from \"../../../providers/currentUser.provider\";\nimport { Redirect } from \"react-router-dom\";\nimport { gql } from \"apollo-boost\";\nimport { Mutation } from \"react-apollo\";\nimport InsuranceModify from \"./insurance-modify.component\";\n\nconst InsuranceModifyContainer = (props) => {\n  const { currentUser } = useContext(CurrentUserContext);\n  const [err, setErr] = useState(\"\");\n  const {\n    state: { type, data },\n  } = props.location;\n  const editData = data;\n\n  if (!currentUser || currentUser.role !== \"Patient\") {\n    return <Redirect to=\"/\"></Redirect>;\n  }\n  const mutation = gql`\n        mutation ${type}Insurance($insuranceStatus: String!,$insuranceCompany1: String!,$insuranceCompany2: String!,$sponsorerDetails: String!,) {\n            ${type}Insurance(data: { insuranceStatus: $insuranceStatus,insuranceCompany1:$insuranceCompany1,insuranceCompany2:$insuranceCompany2,sponsorerDetails:$sponsorerDetails}){\n              insuranceId\n            } \n        }\n      `;\n  return (\n    <Mutation\n      mutation={mutation}\n      onError={(error) => {\n        if (error.graphQLErrors) {\n          setErr(\n            error.graphQLErrors.map((eachErr) => {\n              return eachErr.message;\n            })\n          );\n        }\n        if (error.networkError) {\n          setErr(error.networkError.message);\n        }\n      }}\n    >\n      {(modifyFn, { loading, data }) => {\n        return (\n          <InsuranceModify\n            modify={(status, company1, company2, details) => {\n              modifyFn({\n                variables: {\n                  insuranceStatus: status,\n                  insuranceCompany1: company1,\n                  insuranceCompany2: company2,\n                  sponsorerDetails: details,\n                },\n              });\n            }}\n            loading={loading}\n            error={err}\n            editData={editData}\n            type={type}\n            data={data}\n          ></InsuranceModify>\n        );\n      }}\n    </Mutation>\n  );\n};\n\nexport default InsuranceModifyContainer;\n","import React, { useState, useContext } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { Query } from \"react-apollo\";\nimport { Spinner } from \"../../../components/spinner/spinner.component\";\nimport { CurrentUserContext } from \"../../../providers/currentUser.provider\";\nimport { Redirect } from \"react-router-dom\";\nimport CareProviderCard from \"../../../components/care-provider-card/care-provider-card.component\";\n\nconst CareProviderContainer = (props) => {\n  const { currentUser } = useContext(CurrentUserContext);\n  const [err, setErr] = useState(\"\");\n  const query = gql`\n    {\n      mePatient {\n        cpId {\n          id\n          cpPatientId {\n            patientId\n            user {\n              firstName\n              middleName\n              lastName\n              sex\n              dob\n              email\n              verified\n            }\n          }\n          cpPatientRelation\n        }\n      }\n    }\n  `;\n  if (!currentUser || currentUser.role !== \"Patient\") {\n    return <Redirect to=\"/\"></Redirect>;\n  }\n  return (\n    <Query\n      query={query}\n      onError={(error) => {\n        if (error && error.graphQLErrors) {\n          setErr(\n            error.graphQLErrors.map((each) => {\n              return each.message;\n            })\n          );\n        } else if (error && error.networkError) {\n          setErr(error.networkError.message);\n        }\n      }}\n    >\n      {({ loading, error, data }) => {\n        if (loading) {\n          setErr(\"\");\n          return <Spinner></Spinner>;\n        }\n        return (\n          <CareProviderCard\n            error={err}\n            data={data.mePatient.cpId}\n            modifiable={true}\n          ></CareProviderCard>\n        );\n      }}\n    </Query>\n  );\n};\n\nexport default CareProviderContainer;\n","import React, { useState } from \"react\";\n\nconst CareProviderModify = (props) => {\n  const { loading, data, editData, error, type, modify } = props;\n  const [patientId, setPatientId] = useState(\n    editData ? editData.cpPatientId.patientId : \"\"\n  );\n  const [patientIdValid, setPatientIdValid] = useState(\n    editData ? (editData.cpPatientId.length >= 12 ? true : false) : false\n  );\n  const [relation, setRelation] = useState(\n    editData ? editData.cpPatientRelation : \"\"\n  );\n  const onSubmit = () => {\n    modify(patientId, relation);\n  };\n  return (\n    <section className=\"hero is-small is-light is-bold\">\n      <div className=\"hero-body\">\n        <div className=\"container has-text-centered\">\n          <h1 className=\"title\">Care Provider</h1>\n          <br />\n        </div>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Care Provider Patient Id</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Care Provider Patient Id\"\n                  value={patientId}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    const patientIdValid = value.length >= 12 ? true : false;\n                    setPatientIdValid(patientIdValid);\n                    setPatientId(value);\n                  }}\n                />\n              </div>\n              <p className=\"help is-danger\">\n                {!patientIdValid ? \"This Id is invalid\" : \"\"}\n              </p>\n            </div>\n          </div>\n          <div className=\"column is-one-third-desktop\">\n            <div className=\"field\">\n              <label className=\"label\">Patient Relation</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Patient Relation\"\n                  value={relation}\n                  onChange={(event) => {\n                    const value = event.target.value;\n                    setRelation(value);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div\n            className=\"column is-half-desktop\"\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n              alignItems: \"flex-start\",\n            }}\n          >\n            <div className=\"buttons\">\n              <button\n                className={`button is-success ${loading ? \"is-loading\" : \"\"}`}\n                onClick={(event) => {\n                  event.preventDefault();\n                  onSubmit();\n                }}\n                disabled={!patientIdValid}\n                style={{ margin: \"10px auto\" }}\n              >\n                Change\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns is-centered\">\n          <div\n            className=\"column is-half-desktop\"\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n              alignItems: \"flex-start\",\n            }}\n          >\n            {error ? <p className=\"notification is-danger\">{error}</p> : null}\n            {data ? (\n              <p className=\"notification is-success\">\n                {data[`${type}CareProvider`].id} {type}ed successfully!\n              </p>\n            ) : null}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default CareProviderModify;\n","import React, { useContext, useState } from \"react\";\nimport { CurrentUserContext } from \"../../../providers/currentUser.provider\";\nimport { Redirect } from \"react-router-dom\";\nimport { gql } from \"apollo-boost\";\nimport { Mutation } from \"react-apollo\";\nimport CareProviderModify from \"./care-provider-modify.component\";\n\nconst CareProviderModifyContainer = (props) => {\n  const { currentUser } = useContext(CurrentUserContext);\n  const [err, setErr] = useState(\"\");\n  const {\n    state: { type, data },\n  } = props.location;\n  const editData = data;\n\n  if (!currentUser || currentUser.role !== \"Patient\") {\n    return <Redirect to=\"/\"></Redirect>;\n  }\n  const mutation = gql`\n        mutation ${type}CareProvider($cpPatientId: String!,$cpPatientRelation: String!) {\n            ${type}CareProvider(data: { cpPatientId: $cpPatientId,cpPatientRelation:$cpPatientRelation}){\n              id\n            } \n        }\n      `;\n  return (\n    <Mutation\n      mutation={mutation}\n      onError={(error) => {\n        if (error.graphQLErrors) {\n          setErr(\n            error.graphQLErrors.map((eachErr) => {\n              return eachErr.message;\n            })\n          );\n        }\n        if (error.networkError) {\n          setErr(error.networkError.message);\n        }\n      }}\n    >\n      {(modifyFn, { loading, data }) => {\n        return (\n          <CareProviderModify\n            modify={(patientId, relation) => {\n              modifyFn({\n                variables: {\n                  cpPatientId: patientId,\n                  cpPatientRelation: relation,\n                },\n              });\n            }}\n            loading={loading}\n            error={err}\n            editData={editData}\n            type={type}\n            data={data}\n          ></CareProviderModify>\n        );\n      }}\n    </Mutation>\n  );\n};\n\nexport default CareProviderModifyContainer;\n","import React, { useEffect, useContext } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { graphql } from \"react-apollo\";\nimport { flowRight as compose } from \"lodash\";\n\nimport \"./App.scss\";\nimport LoginContainer from \"./pages/login/login.container\";\nimport Homepage from \"./pages/homepage/homepage.component\";\nimport Header from \"./components/header/header.component\";\nimport { ME } from \"./graphql/queries\";\nimport { Spinner } from \"./components/spinner/spinner.component\";\nimport { ADD_CURRENT_USER } from \"./graphql/mutation\";\nimport { CurrentUserContext } from \"./providers/currentUser.provider\";\nimport Logout from \"./components/logout/logout.component\";\nimport RegisterContainer from \"./pages/register/register.container\";\nimport Footer from \"./components/footer/footer.component\";\nimport UpdateContainer from \"./pages/update/update.container\";\nimport { USER_DATA } from \"./constants\";\nimport SearchContainer from \"./pages/search/search.container\";\nimport PatientContainer from \"./pages/views/patient/patient.container\";\nimport MedicalPractitionerContainer from \"./pages/views/medicalpractitioner/medicalpractitioner.container\";\nimport DatabaseAdminContainer from \"./pages/views/databaseadmin/databaseadmin.container\";\nimport ErrorBoundary from \"./components/error-boundary/error-boundary.component\";\nimport InsuranceContainer from \"./pages/views/insurance/insurance.container\";\nimport InsuranceModifyContainer from \"./pages/views/insurance/insurance-modify.container\";\nimport CareProviderContainer from \"./pages/views/care-provider/care-provider.container\";\nimport CareProviderModifyContainer from \"./pages/views/care-provider/care-provider-modify.container\";\n\nconst App = (props) => {\n  const { me, addCurrentUser } = props;\n  const { setCurrentUser } = useContext(CurrentUserContext);\n  useEffect(() => {\n    if (!me.loading && !me.error) {\n      const data = me.me;\n      addCurrentUser({\n        variables: {\n          user: data,\n        },\n      });\n      localStorage.setItem(USER_DATA, JSON.stringify(data));\n      setCurrentUser(data);\n    }\n  }, [me, addCurrentUser, setCurrentUser]);\n  return me.loading ? (\n    <Spinner></Spinner>\n  ) : (\n    <div className=\"is-light\">\n      <ErrorBoundary>\n        <Header error={me.error ? me.error : null}></Header>\n        <Switch>\n          <Route exact path=\"/\" component={Homepage}></Route>\n          <Route exact path=\"/login\" component={LoginContainer}></Route>\n          <Route exact path=\"/logout\" component={Logout}></Route>\n          <Route exact path=\"/search\" component={SearchContainer}></Route>\n          <Route exact path=\"/insurance\" component={InsuranceContainer}></Route>\n          <Route\n            exact\n            path=\"/insurance/modify\"\n            component={InsuranceModifyContainer}\n          ></Route>\n          <Route\n            exact\n            path=\"/care-provider\"\n            component={CareProviderContainer}\n          ></Route>\n          <Route\n            exact\n            path=\"/care-provider/modify\"\n            component={CareProviderModifyContainer}\n          ></Route>\n          <Route path=\"/register\" component={RegisterContainer}></Route>\n          <Route path=\"/update\" component={UpdateContainer}></Route>\n          <Route path=\"/patient\" component={PatientContainer}></Route>\n          <Route\n            path=\"/databaseadmin\"\n            component={DatabaseAdminContainer}\n          ></Route>\n          <Route\n            path=\"/medicalpractitioner\"\n            component={MedicalPractitionerContainer}\n          ></Route>\n          <Route\n            path=\"*\"\n            render={() => {\n              return (\n                <div className=\"homepage-wrapper\">\n                  <section className=\"hero is-large is-light is-bold\">\n                    <div className=\"hero-body\">\n                      <div className=\"container has-text-centered\">\n                        <h1 className=\"subtitle\">Error 404 : No Match Found</h1>\n                      </div>\n                    </div>\n                  </section>\n                </div>\n              );\n            }}\n          ></Route>\n        </Switch>\n        <Footer></Footer>\n      </ErrorBoundary>\n    </div>\n  );\n};\n\nexport default compose(\n  graphql(ME, { name: \"me\" }),\n  graphql(ADD_CURRENT_USER, { name: \"addCurrentUser\" })\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\n// Instantiate GraphQL\nimport { ApolloProvider } from \"react-apollo\";\nimport { createHttpLink } from \"apollo-link-http\"; // Link to establish connectioon\nimport { InMemoryCache } from \"apollo-cache-inmemory\"; // Caching data\nimport { ApolloClient } from \"apollo-boost\"; // Setting up graphql-client\nimport { typeDefs, resolvers } from \"./graphql/resolvers\";\n\n// Check headers\nimport { setContext } from \"apollo-link-context\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { AUTH_TOKEN } from \"./constants\";\nimport CurrentUserProvider from \"./providers/currentUser.provider\";\n\n//Establish Connection\nconst httpLink = createHttpLink({\n  uri: \"http://localhost:4000/\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(AUTH_TOKEN);\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\n//Create cache and manage data like store in redux\nconst cache = new InMemoryCache();\n// Create client\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache,\n  typeDefs,\n  resolvers,\n});\n\nclient.writeData({\n  data: {\n    currentUser: {\n      __typename: \"\",\n      id: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      role: \"\",\n      isAdmin: \"\",\n      verified: \"\",\n    },\n  },\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <CurrentUserProvider>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </CurrentUserProvider>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}